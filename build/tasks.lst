ARM GAS  /tmp/cc3EZotN.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB15:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/cc3EZotN.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
ARM GAS  /tmp/cc3EZotN.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
ARM GAS  /tmp/cc3EZotN.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
ARM GAS  /tmp/cc3EZotN.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
ARM GAS  /tmp/cc3EZotN.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
ARM GAS  /tmp/cc3EZotN.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/cc3EZotN.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
ARM GAS  /tmp/cc3EZotN.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
ARM GAS  /tmp/cc3EZotN.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/cc3EZotN.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/cc3EZotN.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc3EZotN.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
ARM GAS  /tmp/cc3EZotN.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
ARM GAS  /tmp/cc3EZotN.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/cc3EZotN.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
ARM GAS  /tmp/cc3EZotN.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc3EZotN.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc3EZotN.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc3EZotN.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
ARM GAS  /tmp/cc3EZotN.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc3EZotN.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/cc3EZotN.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/cc3EZotN.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc3EZotN.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/cc3EZotN.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc3EZotN.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1726 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1727 2 view .LVU1
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1728 2 view .LVU2
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1734 3 view .LVU3
ARM GAS  /tmp/cc3EZotN.s 			page 32


  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1734 24 discriminator 2 view .LVU4
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1737 3 discriminator 2 view .LVU5
  38              		.loc 1 1737 7 is_stmt 0 discriminator 2 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1737 82 discriminator 2 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1727 13 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  47              		.loc 1 1727 13 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  51              		.loc 1 1734 3 is_stmt 1 view .LVU10
  52              	.LBB104:
  53              	.LBI104:
  54              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/cc3EZotN.s 			page 33


  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/cc3EZotN.s 			page 34


  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/cc3EZotN.s 			page 35


 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 191 30 view .LVU11
  56              	.LBB105:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  57              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  58              		.loc 2 195 2 view .LVU13
  59              		.syntax unified
  60              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  61 000e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc3EZotN.s 			page 36


  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              	.LVL3:
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              		.loc 2 195 2 is_stmt 0 view .LVU14
  72              	.LBE105:
  73              	.LBE104:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1734 3 is_stmt 1 discriminator 1 view .LVU15
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1734 3 discriminator 1 view .LVU16
  76 001e FEE7     		b	.L3
  77              	.L9:
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  78              		.loc 1 1740 4 view .LVU17
  79              		.loc 1 1740 8 is_stmt 0 view .LVU18
  80 0020 836A     		ldr	r3, [r0, #40]
  81              		.loc 1 1740 6 view .LVU19
  82 0022 064A     		ldr	r2, .L10+4
  83 0024 9342     		cmp	r3, r2
  84 0026 02D0     		beq	.L6
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  85              		.loc 1 1744 5 is_stmt 1 view .LVU20
  86              		.loc 1 1744 69 is_stmt 0 view .LVU21
  87 0028 1BB1     		cbz	r3, .L7
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  88              		.loc 1 1727 13 view .LVU22
  89 002a 0020     		movs	r0, #0
  90              	.LVL4:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  91              		.loc 1 1727 13 view .LVU23
  92 002c 7047     		bx	lr
  93              	.LVL5:
  94              	.L6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  95              		.loc 1 1727 13 view .LVU24
  96 002e 0020     		movs	r0, #0
  97              	.LVL6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  98              		.loc 1 1727 13 view .LVU25
  99 0030 7047     		bx	lr
 100              	.LVL7:
 101              	.L7:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 102              		.loc 1 1746 14 view .LVU26
 103 0032 0120     		movs	r0, #1
ARM GAS  /tmp/cc3EZotN.s 			page 37


 104              	.LVL8:
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 105              		.loc 1 1760 28 is_stmt 1 view .LVU27
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 106              		.loc 1 1763 3 view .LVU28
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 107              		.loc 1 1764 2 is_stmt 0 view .LVU29
 108 0034 7047     		bx	lr
 109              	.L11:
 110 0036 00BF     		.align	2
 111              	.L10:
 112 0038 00000000 		.word	.LANCHOR0
 113 003c 00000000 		.word	.LANCHOR1
 114              		.cfi_endproc
 115              	.LFE15:
 117              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	prvResetNextTaskUnblockTime:
 124              	.LFB40:
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
ARM GAS  /tmp/cc3EZotN.s 			page 38


1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
ARM GAS  /tmp/cc3EZotN.s 			page 39


1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 40


1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
ARM GAS  /tmp/cc3EZotN.s 			page 41


1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cc3EZotN.s 			page 42


2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 43


2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
ARM GAS  /tmp/cc3EZotN.s 			page 44


2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
ARM GAS  /tmp/cc3EZotN.s 			page 45


2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  /tmp/cc3EZotN.s 			page 46


2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
ARM GAS  /tmp/cc3EZotN.s 			page 47


2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  /tmp/cc3EZotN.s 			page 48


2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc3EZotN.s 			page 49


2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 50


2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
ARM GAS  /tmp/cc3EZotN.s 			page 51


2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 52


2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
ARM GAS  /tmp/cc3EZotN.s 			page 53


2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
ARM GAS  /tmp/cc3EZotN.s 			page 54


2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc3EZotN.s 			page 55


2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
ARM GAS  /tmp/cc3EZotN.s 			page 56


2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
ARM GAS  /tmp/cc3EZotN.s 			page 57


2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 58


2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/cc3EZotN.s 			page 59


2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
ARM GAS  /tmp/cc3EZotN.s 			page 60


3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
ARM GAS  /tmp/cc3EZotN.s 			page 61


3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc3EZotN.s 			page 62


3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
ARM GAS  /tmp/cc3EZotN.s 			page 63


3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc3EZotN.s 			page 64


3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
ARM GAS  /tmp/cc3EZotN.s 			page 65


3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 66


3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc3EZotN.s 			page 67


3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc3EZotN.s 			page 68


3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
ARM GAS  /tmp/cc3EZotN.s 			page 69


3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc3EZotN.s 			page 70


3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
ARM GAS  /tmp/cc3EZotN.s 			page 71


3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc3EZotN.s 			page 72


3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 125              		.loc 1 3725 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 130              		.loc 1 3726 1 view .LVU31
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 131              		.loc 1 3728 2 view .LVU32
 132              		.loc 1 3728 6 is_stmt 0 view .LVU33
 133 0000 084B     		ldr	r3, .L15
 134 0002 1B68     		ldr	r3, [r3]
 135 0004 1B68     		ldr	r3, [r3]
 136              		.loc 1 3728 45 view .LVU34
 137 0006 23B9     		cbnz	r3, .L13
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 138              		.loc 1 3734 3 is_stmt 1 view .LVU35
 139              		.loc 1 3734 24 is_stmt 0 view .LVU36
 140 0008 074B     		ldr	r3, .L15+4
 141 000a 4FF0FF32 		mov	r2, #-1
 142 000e 1A60     		str	r2, [r3]
 143 0010 7047     		bx	lr
 144              	.L13:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 145              		.loc 1 3742 3 is_stmt 1 view .LVU37
 146              		.loc 1 3742 27 is_stmt 0 view .LVU38
 147 0012 044B     		ldr	r3, .L15
 148 0014 1B68     		ldr	r3, [r3]
 149 0016 DB68     		ldr	r3, [r3, #12]
 150              		.loc 1 3742 13 view .LVU39
 151 0018 DB68     		ldr	r3, [r3, #12]
 152              	.LVL9:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 153              		.loc 1 3743 3 is_stmt 1 view .LVU40
 154              		.loc 1 3743 26 is_stmt 0 view .LVU41
 155 001a 5A68     		ldr	r2, [r3, #4]
 156              		.loc 1 3743 24 view .LVU42
 157 001c 024B     		ldr	r3, .L15+4
 158              	.LVL10:
 159              		.loc 1 3743 24 view .LVU43
 160 001e 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 73


3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 161              		.loc 1 3745 1 view .LVU44
 162 0020 7047     		bx	lr
 163              	.L16:
 164 0022 00BF     		.align	2
 165              	.L15:
 166 0024 00000000 		.word	.LANCHOR2
 167 0028 00000000 		.word	.LANCHOR3
 168              		.cfi_endproc
 169              	.LFE40:
 171              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	prvInitialiseNewTask:
 178              	.LVL11:
 179              	.LFB7:
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 180              		.loc 1 825 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 16, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 825 1 is_stmt 0 view .LVU46
 185 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 32
 188              		.cfi_offset 4, -32
 189              		.cfi_offset 5, -28
 190              		.cfi_offset 6, -24
 191              		.cfi_offset 7, -20
 192              		.cfi_offset 8, -16
 193              		.cfi_offset 9, -12
 194              		.cfi_offset 10, -8
 195              		.cfi_offset 14, -4
 196 0004 0746     		mov	r7, r0
 197 0006 9846     		mov	r8, r3
 198 0008 089D     		ldr	r5, [sp, #32]
 199 000a DDF82490 		ldr	r9, [sp, #36]
 200 000e 0A9C     		ldr	r4, [sp, #40]
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 201              		.loc 1 826 1 is_stmt 1 view .LVU47
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 202              		.loc 1 827 1 view .LVU48
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 203              		.loc 1 857 3 view .LVU49
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 204              		.loc 1 857 26 is_stmt 0 view .LVU50
 205 0010 266B     		ldr	r6, [r4, #48]
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 206              		.loc 1 857 36 view .LVU51
 207 0012 02F18042 		add	r2, r2, #1073741824
 208              	.LVL12:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 209              		.loc 1 857 36 view .LVU52
ARM GAS  /tmp/cc3EZotN.s 			page 74


 210 0016 013A     		subs	r2, r2, #1
 211              	.LVL13:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 212              		.loc 1 857 16 view .LVU53
 213 0018 06EB8206 		add	r6, r6, r2, lsl #2
 214              	.LVL14:
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 215              		.loc 1 858 3 is_stmt 1 view .LVU54
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 216              		.loc 1 858 81 is_stmt 0 view .LVU55
 217 001c 26F00706 		bic	r6, r6, #7
 218              	.LVL15:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 219              		.loc 1 861 3 is_stmt 1 view .LVU56
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 861 124 view .LVU57
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 221              		.loc 1 885 2 view .LVU58
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 222              		.loc 1 885 9 is_stmt 0 view .LVU59
 223 0020 4FF0000C 		mov	ip, #0
 224              	.LVL16:
 225              	.L18:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 226              		.loc 1 885 32 is_stmt 1 discriminator 1 view .LVU60
 227 0024 BCF11D0F 		cmp	ip, #29
 228 0028 09D8     		bhi	.L19
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229              		.loc 1 887 3 view .LVU61
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 230              		.loc 1 887 37 is_stmt 0 view .LVU62
 231 002a 11F80C20 		ldrb	r2, [r1, ip]	@ zero_extendqisi2
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 887 29 view .LVU63
 233 002e 04EB0C03 		add	r3, r4, ip
 234 0032 83F83420 		strb	r2, [r3, #52]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 892 3 is_stmt 1 view .LVU64
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 236              		.loc 1 892 5 is_stmt 0 view .LVU65
 237 0036 12B1     		cbz	r2, .L19
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 238              		.loc 1 898 28 is_stmt 1 discriminator 2 view .LVU66
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 239              		.loc 1 885 76 discriminator 2 view .LVU67
 240 0038 0CF1010C 		add	ip, ip, #1
 241              	.LVL17:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 242              		.loc 1 885 76 is_stmt 0 discriminator 2 view .LVU68
 243 003c F2E7     		b	.L18
 244              	.L19:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 245              		.loc 1 904 2 is_stmt 1 view .LVU69
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 246              		.loc 1 904 54 is_stmt 0 view .LVU70
 247 003e 0023     		movs	r3, #0
 248 0040 84F85130 		strb	r3, [r4, #81]
ARM GAS  /tmp/cc3EZotN.s 			page 75


 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 249              		.loc 1 908 2 is_stmt 1 view .LVU71
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 250              		.loc 1 908 4 is_stmt 0 view .LVU72
 251 0044 062D     		cmp	r5, #6
 252 0046 00D9     		bls	.L21
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 253              		.loc 1 910 14 view .LVU73
 254 0048 0625     		movs	r5, #6
 255              	.L21:
 256              	.LVL18:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 257              		.loc 1 914 27 is_stmt 1 view .LVU74
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 258              		.loc 1 917 2 view .LVU75
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 259              		.loc 1 917 23 is_stmt 0 view .LVU76
 260 004a E562     		str	r5, [r4, #44]
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 261              		.loc 1 920 3 is_stmt 1 view .LVU77
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 262              		.loc 1 920 28 is_stmt 0 view .LVU78
 263 004c 6565     		str	r5, [r4, #84]
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 264              		.loc 1 921 3 is_stmt 1 view .LVU79
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 265              		.loc 1 921 27 is_stmt 0 view .LVU80
 266 004e 4FF0000A 		mov	r10, #0
 267 0052 C4F858A0 		str	r10, [r4, #88]
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 268              		.loc 1 925 2 is_stmt 1 view .LVU81
 269 0056 201D     		adds	r0, r4, #4
 270              	.LVL19:
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 271              		.loc 1 925 2 is_stmt 0 view .LVU82
 272 0058 FFF7FEFF 		bl	vListInitialiseItem
 273              	.LVL20:
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274              		.loc 1 926 2 is_stmt 1 view .LVU83
 275 005c 04F11800 		add	r0, r4, #24
 276 0060 FFF7FEFF 		bl	vListInitialiseItem
 277              	.LVL21:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 278              		.loc 1 930 2 view .LVU84
 279 0064 2461     		str	r4, [r4, #16]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 280              		.loc 1 933 2 view .LVU85
 281 0066 C5F10705 		rsb	r5, r5, #7
 282              	.LVL22:
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 283              		.loc 1 933 2 is_stmt 0 view .LVU86
 284 006a A561     		str	r5, [r4, #24]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 285              		.loc 1 934 2 is_stmt 1 view .LVU87
 286 006c 6462     		str	r4, [r4, #36]
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 287              		.loc 1 961 3 view .LVU88
ARM GAS  /tmp/cc3EZotN.s 			page 76


 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 288              		.loc 1 976 3 view .LVU89
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 289              		.loc 1 976 29 is_stmt 0 view .LVU90
 290 006e C4F888A4 		str	r10, [r4, #1160]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 291              		.loc 1 977 3 is_stmt 1 view .LVU91
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 292              		.loc 1 977 27 is_stmt 0 view .LVU92
 293 0072 84F88CA4 		strb	r10, [r4, #1164]
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 294              		.loc 1 984 3 is_stmt 1 view .LVU93
 295 0076 4FF48562 		mov	r2, #1064
 296 007a 5146     		mov	r1, r10
 297 007c 04F16000 		add	r0, r4, #96
 298 0080 FFF7FEFF 		bl	memset
 299              	.LVL23:
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 300              		.loc 1 984 3 view .LVU94
 301 0084 04F55373 		add	r3, r4, #844
 302 0088 6366     		str	r3, [r4, #100]
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 303              		.loc 1 984 3 view .LVU95
 304 008a 04F56D73 		add	r3, r4, #948
 305 008e A366     		str	r3, [r4, #104]
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 984 3 view .LVU96
 307 0090 04F21C43 		addw	r3, r4, #1052
 308 0094 E366     		str	r3, [r4, #108]
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 309              		.loc 1 984 3 view .LVU97
 310 0096 0122     		movs	r2, #1
 311 0098 0023     		movs	r3, #0
 312 009a C4E94223 		strd	r2, [r4, #264]
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 313              		.loc 1 984 3 view .LVU98
 314 009e 43F20E33 		movw	r3, #13070
 315 00a2 A4F81031 		strh	r3, [r4, #272]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 316              		.loc 1 984 3 view .LVU99
 317 00a6 4AF6CD33 		movw	r3, #43981
 318 00aa A4F81231 		strh	r3, [r4, #274]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 319              		.loc 1 984 3 view .LVU100
 320 00ae 41F23423 		movw	r3, #4660
 321 00b2 A4F81431 		strh	r3, [r4, #276]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 322              		.loc 1 984 3 view .LVU101
 323 00b6 4EF26D63 		movw	r3, #58989
 324 00ba A4F81631 		strh	r3, [r4, #278]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 325              		.loc 1 984 3 view .LVU102
 326 00be 4DF6EC63 		movw	r3, #57068
 327 00c2 A4F81831 		strh	r3, [r4, #280]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 328              		.loc 1 984 3 view .LVU103
 329 00c6 0523     		movs	r3, #5
ARM GAS  /tmp/cc3EZotN.s 			page 77


 330 00c8 A4F81A31 		strh	r3, [r4, #282]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 984 3 view .LVU104
 332 00cc 0B23     		movs	r3, #11
 333 00ce A4F81C31 		strh	r3, [r4, #284]	@ movhi
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 334              		.loc 1 984 3 view .LVU105
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 984 54 view .LVU106
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 336              		.loc 1 1004 3 view .LVU107
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 337              		.loc 1 1004 28 is_stmt 0 view .LVU108
 338 00d2 4246     		mov	r2, r8
 339 00d4 3946     		mov	r1, r7
 340 00d6 3046     		mov	r0, r6
 341 00d8 FFF7FEFF 		bl	pxPortInitialiseStack
 342              	.LVL24:
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 343              		.loc 1 1004 26 view .LVU109
 344 00dc 2060     		str	r0, [r4]
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 345              		.loc 1 1008 2 is_stmt 1 view .LVU110
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 346              		.loc 1 1008 4 is_stmt 0 view .LVU111
 347 00de B9F1000F 		cmp	r9, #0
 348 00e2 01D0     		beq	.L17
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 349              		.loc 1 1012 3 is_stmt 1 view .LVU112
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 350              		.loc 1 1012 18 is_stmt 0 view .LVU113
 351 00e4 C9F80040 		str	r4, [r9]
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 352              		.loc 1 1016 27 is_stmt 1 view .LVU114
 353              	.L17:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 354              		.loc 1 1018 1 is_stmt 0 view .LVU115
 355 00e8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 356              		.loc 1 1018 1 view .LVU116
 357              		.cfi_endproc
 358              	.LFE7:
 360              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	prvInitialiseTaskLists:
 367              	.LFB37:
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 368              		.loc 1 3431 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 38B5     		push	{r3, r4, r5, lr}
 373              	.LCFI1:
 374              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc3EZotN.s 			page 78


 375              		.cfi_offset 3, -16
 376              		.cfi_offset 4, -12
 377              		.cfi_offset 5, -8
 378              		.cfi_offset 14, -4
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 379              		.loc 1 3432 1 view .LVU118
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 380              		.loc 1 3434 2 view .LVU119
 381              	.LVL25:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 382              		.loc 1 3434 18 is_stmt 0 view .LVU120
 383 0002 0024     		movs	r4, #0
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 384              		.loc 1 3434 2 view .LVU121
 385 0004 07E0     		b	.L26
 386              	.LVL26:
 387              	.L27:
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 388              		.loc 1 3436 3 is_stmt 1 discriminator 3 view .LVU122
 389 0006 04EB8402 		add	r2, r4, r4, lsl #2
 390 000a 9300     		lsls	r3, r2, #2
 391 000c 0E48     		ldr	r0, .L29
 392 000e 1844     		add	r0, r0, r3
 393 0010 FFF7FEFF 		bl	vListInitialise
 394              	.LVL27:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 395              		.loc 1 3434 101 discriminator 3 view .LVU123
 396 0014 0134     		adds	r4, r4, #1
 397              	.LVL28:
 398              	.L26:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 399              		.loc 1 3434 51 discriminator 1 view .LVU124
 400 0016 062C     		cmp	r4, #6
 401 0018 F5D9     		bls	.L27
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 402              		.loc 1 3439 2 view .LVU125
 403 001a 0C4D     		ldr	r5, .L29+4
 404 001c 2846     		mov	r0, r5
 405 001e FFF7FEFF 		bl	vListInitialise
 406              	.LVL29:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 407              		.loc 1 3440 2 view .LVU126
 408 0022 0B4C     		ldr	r4, .L29+8
 409              	.LVL30:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 410              		.loc 1 3440 2 is_stmt 0 view .LVU127
 411 0024 2046     		mov	r0, r4
 412 0026 FFF7FEFF 		bl	vListInitialise
 413              	.LVL31:
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 414              		.loc 1 3441 2 is_stmt 1 view .LVU128
 415 002a 0A48     		ldr	r0, .L29+12
 416 002c FFF7FEFF 		bl	vListInitialise
 417              	.LVL32:
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 418              		.loc 1 3445 3 view .LVU129
 419 0030 0948     		ldr	r0, .L29+16
ARM GAS  /tmp/cc3EZotN.s 			page 79


 420 0032 FFF7FEFF 		bl	vListInitialise
 421              	.LVL33:
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 422              		.loc 1 3451 3 view .LVU130
 423 0036 0948     		ldr	r0, .L29+20
 424 0038 FFF7FEFF 		bl	vListInitialise
 425              	.LVL34:
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 426              		.loc 1 3457 2 view .LVU131
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 427              		.loc 1 3457 20 is_stmt 0 view .LVU132
 428 003c 084B     		ldr	r3, .L29+24
 429 003e 1D60     		str	r5, [r3]
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 430              		.loc 1 3458 2 is_stmt 1 view .LVU133
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 431              		.loc 1 3458 28 is_stmt 0 view .LVU134
 432 0040 084B     		ldr	r3, .L29+28
 433 0042 1C60     		str	r4, [r3]
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 434              		.loc 1 3459 1 view .LVU135
 435 0044 38BD     		pop	{r3, r4, r5, pc}
 436              	.L30:
 437 0046 00BF     		.align	2
 438              	.L29:
 439 0048 00000000 		.word	.LANCHOR4
 440 004c 00000000 		.word	.LANCHOR5
 441 0050 00000000 		.word	.LANCHOR6
 442 0054 00000000 		.word	.LANCHOR1
 443 0058 00000000 		.word	.LANCHOR7
 444 005c 00000000 		.word	.LANCHOR0
 445 0060 00000000 		.word	.LANCHOR2
 446 0064 00000000 		.word	.LANCHOR8
 447              		.cfi_endproc
 448              	.LFE37:
 450              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 451              		.align	1
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	prvAddNewTaskToReadyList:
 457              	.LVL35:
 458              	.LFB8:
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 459              		.loc 1 1022 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 463              		.loc 1 1022 1 is_stmt 0 view .LVU137
 464 0000 10B5     		push	{r4, lr}
 465              	.LCFI2:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 4, -8
 468              		.cfi_offset 14, -4
 469 0002 0446     		mov	r4, r0
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc3EZotN.s 			page 80


 470              		.loc 1 1025 2 is_stmt 1 view .LVU138
 471 0004 FFF7FEFF 		bl	vPortEnterCritical
 472              	.LVL36:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 473              		.loc 1 1027 3 view .LVU139
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 474              		.loc 1 1027 25 is_stmt 0 view .LVU140
 475 0008 214A     		ldr	r2, .L38
 476 000a 1368     		ldr	r3, [r2]
 477 000c 0133     		adds	r3, r3, #1
 478 000e 1360     		str	r3, [r2]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 479              		.loc 1 1028 3 is_stmt 1 view .LVU141
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 480              		.loc 1 1028 20 is_stmt 0 view .LVU142
 481 0010 204B     		ldr	r3, .L38+4
 482 0012 1B68     		ldr	r3, [r3]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 483              		.loc 1 1028 5 view .LVU143
 484 0014 5BB1     		cbz	r3, .L36
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 485              		.loc 1 1051 4 is_stmt 1 view .LVU144
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 486              		.loc 1 1051 26 is_stmt 0 view .LVU145
 487 0016 204B     		ldr	r3, .L38+8
 488 0018 1B68     		ldr	r3, [r3]
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 489              		.loc 1 1051 6 view .LVU146
 490 001a 6BB9     		cbnz	r3, .L33
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 491              		.loc 1 1053 5 is_stmt 1 view .LVU147
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 492              		.loc 1 1053 21 is_stmt 0 view .LVU148
 493 001c 1D4B     		ldr	r3, .L38+4
 494 001e 1B68     		ldr	r3, [r3]
 495 0020 DA6A     		ldr	r2, [r3, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 496              		.loc 1 1053 45 view .LVU149
 497 0022 E36A     		ldr	r3, [r4, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 498              		.loc 1 1053 7 view .LVU150
 499 0024 9A42     		cmp	r2, r3
 500 0026 07D8     		bhi	.L33
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 501              		.loc 1 1055 6 is_stmt 1 view .LVU151
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 502              		.loc 1 1055 19 is_stmt 0 view .LVU152
 503 0028 1A4B     		ldr	r3, .L38+4
 504 002a 1C60     		str	r4, [r3]
 505 002c 04E0     		b	.L33
 506              	.L36:
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507              		.loc 1 1032 4 is_stmt 1 view .LVU153
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508              		.loc 1 1032 17 is_stmt 0 view .LVU154
 509 002e 194B     		ldr	r3, .L38+4
 510 0030 1C60     		str	r4, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 81


1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 511              		.loc 1 1034 4 is_stmt 1 view .LVU155
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 512              		.loc 1 1034 31 is_stmt 0 view .LVU156
 513 0032 1368     		ldr	r3, [r2]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 514              		.loc 1 1034 6 view .LVU157
 515 0034 012B     		cmp	r3, #1
 516 0036 28D0     		beq	.L37
 517              	.L33:
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 518              		.loc 1 1064 29 is_stmt 1 view .LVU158
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519              		.loc 1 1068 3 view .LVU159
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 520              		.loc 1 1068 15 is_stmt 0 view .LVU160
 521 0038 184A     		ldr	r2, .L38+12
 522 003a 1368     		ldr	r3, [r2]
 523 003c 0133     		adds	r3, r3, #1
 524 003e 1360     		str	r3, [r2]
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525              		.loc 1 1076 31 is_stmt 1 view .LVU161
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 526              		.loc 1 1078 3 view .LVU162
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527              		.loc 1 1078 3 view .LVU163
 528 0040 E06A     		ldr	r0, [r4, #44]
 529 0042 0123     		movs	r3, #1
 530 0044 8340     		lsls	r3, r3, r0
 531 0046 164A     		ldr	r2, .L38+16
 532 0048 1168     		ldr	r1, [r2]
 533 004a 0B43     		orrs	r3, r3, r1
 534 004c 1360     		str	r3, [r2]
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 535              		.loc 1 1078 3 view .LVU164
 536 004e 00EB8000 		add	r0, r0, r0, lsl #2
 537 0052 211D     		adds	r1, r4, #4
 538 0054 134B     		ldr	r3, .L38+20
 539 0056 03EB8000 		add	r0, r3, r0, lsl #2
 540 005a FFF7FEFF 		bl	vListInsertEnd
 541              	.LVL37:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 542              		.loc 1 1078 36 view .LVU165
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 543              		.loc 1 1080 3 view .LVU166
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 544              		.loc 1 1082 2 view .LVU167
 545 005e FFF7FEFF 		bl	vPortExitCritical
 546              	.LVL38:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 547              		.loc 1 1084 2 view .LVU168
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 548              		.loc 1 1084 24 is_stmt 0 view .LVU169
 549 0062 0D4B     		ldr	r3, .L38+8
 550 0064 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 551              		.loc 1 1084 4 view .LVU170
ARM GAS  /tmp/cc3EZotN.s 			page 82


 552 0066 7BB1     		cbz	r3, .L31
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 553              		.loc 1 1088 3 is_stmt 1 view .LVU171
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 554              		.loc 1 1088 19 is_stmt 0 view .LVU172
 555 0068 0A4B     		ldr	r3, .L38+4
 556 006a 1B68     		ldr	r3, [r3]
 557 006c DA6A     		ldr	r2, [r3, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 558              		.loc 1 1088 42 view .LVU173
 559 006e E36A     		ldr	r3, [r4, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 560              		.loc 1 1088 5 view .LVU174
 561 0070 9A42     		cmp	r2, r3
 562 0072 09D2     		bcs	.L31
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 563              		.loc 1 1090 4 is_stmt 1 view .LVU175
 564 0074 4FF0E023 		mov	r3, #-536813568
 565 0078 4FF08052 		mov	r2, #268435456
 566 007c C3F8042D 		str	r2, [r3, #3332]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 567              		.loc 1 1090 4 view .LVU176
 568              		.syntax unified
 569              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 570 0080 BFF34F8F 		dsb
 571              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 572              		.loc 1 1090 4 view .LVU177
 573              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 574 0084 BFF36F8F 		isb
 575              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 576              		.loc 1 1090 35 view .LVU178
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 577              		.loc 1 1099 27 view .LVU179
 578              		.thumb
 579              		.syntax unified
 580              	.L31:
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 581              		.loc 1 1101 1 is_stmt 0 view .LVU180
 582 0088 10BD     		pop	{r4, pc}
 583              	.LVL39:
 584              	.L37:
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 585              		.loc 1 1039 5 is_stmt 1 view .LVU181
 586 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 587              	.LVL40:
 588 008e D3E7     		b	.L33
 589              	.L39:
 590              		.align	2
 591              	.L38:
 592 0090 00000000 		.word	.LANCHOR9
 593 0094 00000000 		.word	.LANCHOR10
 594 0098 00000000 		.word	.LANCHOR11
 595 009c 00000000 		.word	.LANCHOR12
 596 00a0 00000000 		.word	.LANCHOR13
 597 00a4 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cc3EZotN.s 			page 83


 598              		.cfi_endproc
 599              	.LFE8:
 601              		.section	.text.prvDeleteTCB,"ax",%progbits
 602              		.align	1
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 607              	prvDeleteTCB:
 608              	.LVL41:
 609              	.LFB39:
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 610              		.loc 1 3671 2 view -0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 614              		.loc 1 3671 2 is_stmt 0 view .LVU183
 615 0000 10B5     		push	{r4, lr}
 616              	.LCFI3:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
 620 0002 0446     		mov	r4, r0
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 621              		.loc 1 3675 3 is_stmt 1 view .LVU184
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622              		.loc 1 3681 4 view .LVU185
 623 0004 6030     		adds	r0, r0, #96
 624              	.LVL42:
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625              		.loc 1 3681 4 is_stmt 0 view .LVU186
 626 0006 FFF7FEFF 		bl	_reclaim_reent
 627              	.LVL43:
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 628              		.loc 1 3697 4 is_stmt 1 view .LVU187
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 629              		.loc 1 3697 13 is_stmt 0 view .LVU188
 630 000a 94F88D34 		ldrb	r3, [r4, #1165]	@ zero_extendqisi2
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 631              		.loc 1 3697 6 view .LVU189
 632 000e 63B1     		cbz	r3, .L46
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 633              		.loc 1 3704 9 is_stmt 1 view .LVU190
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 634              		.loc 1 3704 11 is_stmt 0 view .LVU191
 635 0010 012B     		cmp	r3, #1
 636 0012 11D0     		beq	.L47
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 637              		.loc 1 3714 5 is_stmt 1 view .LVU192
 638 0014 022B     		cmp	r3, #2
 639 0016 0ED0     		beq	.L40
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 640              		.loc 1 3714 5 view .LVU193
 641              	.LBB106:
 642              	.LBI106:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 643              		.loc 2 191 30 view .LVU194
ARM GAS  /tmp/cc3EZotN.s 			page 84


 644              	.LBB107:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 645              		.loc 2 193 1 view .LVU195
 646              		.loc 2 195 2 view .LVU196
 647              		.syntax unified
 648              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 649 0018 4FF05003 			mov r3, #80												
 650 001c 83F31188 		msr basepri, r3											
 651 0020 BFF36F8F 		isb														
 652 0024 BFF34F8F 		dsb														
 653              	
 654              	@ 0 "" 2
 655              	.LVL44:
 656              		.thumb
 657              		.syntax unified
 658              	.L44:
 659              		.loc 2 195 2 is_stmt 0 view .LVU197
 660              	.LBE107:
 661              	.LBE106:
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 662              		.loc 1 3714 5 is_stmt 1 discriminator 1 view .LVU198
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 663              		.loc 1 3714 5 discriminator 1 view .LVU199
 664 0028 FEE7     		b	.L44
 665              	.L46:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 666              		.loc 1 3701 5 view .LVU200
 667 002a 206B     		ldr	r0, [r4, #48]
 668 002c FFF7FEFF 		bl	vPortFree
 669              	.LVL45:
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 670              		.loc 1 3702 5 view .LVU201
 671 0030 2046     		mov	r0, r4
 672 0032 FFF7FEFF 		bl	vPortFree
 673              	.LVL46:
 674              	.L40:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675              		.loc 1 3719 2 is_stmt 0 view .LVU202
 676 0036 10BD     		pop	{r4, pc}
 677              	.LVL47:
 678              	.L47:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 679              		.loc 1 3708 5 is_stmt 1 view .LVU203
 680 0038 2046     		mov	r0, r4
 681 003a FFF7FEFF 		bl	vPortFree
 682              	.LVL48:
 683 003e FAE7     		b	.L40
 684              		.cfi_endproc
 685              	.LFE39:
 687              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	prvCheckTasksWaitingTermination:
 694              	.LFB38:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 85


 695              		.loc 1 3463 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              	.LBB108:
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 700              		.loc 1 3469 3 view .LVU205
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 701              		.loc 1 3473 3 view .LVU206
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 702              		.loc 1 3473 39 view .LVU207
 703 0000 0F4B     		ldr	r3, .L55
 704 0002 1B68     		ldr	r3, [r3]
 705 0004 D3B1     		cbz	r3, .L54
 706              	.LBE108:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 707              		.loc 1 3463 1 is_stmt 0 view .LVU208
 708 0006 10B5     		push	{r4, lr}
 709              	.LCFI4:
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 4, -8
 712              		.cfi_offset 14, -4
 713              	.L50:
 714              	.LBB109:
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 715              		.loc 1 3475 4 is_stmt 1 view .LVU209
 716 0008 FFF7FEFF 		bl	vPortEnterCritical
 717              	.LVL49:
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 718              		.loc 1 3477 5 view .LVU210
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 719              		.loc 1 3477 25 is_stmt 0 view .LVU211
 720 000c 0D4B     		ldr	r3, .L55+4
 721 000e DB68     		ldr	r3, [r3, #12]
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 722              		.loc 1 3477 11 view .LVU212
 723 0010 DC68     		ldr	r4, [r3, #12]
 724              	.LVL50:
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 725              		.loc 1 3478 5 is_stmt 1 view .LVU213
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 726              		.loc 1 3478 14 is_stmt 0 view .LVU214
 727 0012 201D     		adds	r0, r4, #4
 728 0014 FFF7FEFF 		bl	uxListRemove
 729              	.LVL51:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 730              		.loc 1 3479 5 is_stmt 1 view .LVU215
 731 0018 0B4A     		ldr	r2, .L55+8
 732 001a 1368     		ldr	r3, [r2]
 733 001c 013B     		subs	r3, r3, #1
 734 001e 1360     		str	r3, [r2]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 735              		.loc 1 3480 5 view .LVU216
 736 0020 074A     		ldr	r2, .L55
 737 0022 1368     		ldr	r3, [r2]
 738 0024 013B     		subs	r3, r3, #1
 739 0026 1360     		str	r3, [r2]
ARM GAS  /tmp/cc3EZotN.s 			page 86


3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 740              		.loc 1 3482 4 view .LVU217
 741 0028 FFF7FEFF 		bl	vPortExitCritical
 742              	.LVL52:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 743              		.loc 1 3484 4 view .LVU218
 744 002c 2046     		mov	r0, r4
 745 002e FFF7FEFF 		bl	prvDeleteTCB
 746              	.LVL53:
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 747              		.loc 1 3473 39 view .LVU219
 748 0032 034B     		ldr	r3, .L55
 749 0034 1B68     		ldr	r3, [r3]
 750 0036 002B     		cmp	r3, #0
 751 0038 E6D1     		bne	.L50
 752              	.LBE109:
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 753              		.loc 1 3488 1 is_stmt 0 view .LVU220
 754 003a 10BD     		pop	{r4, pc}
 755              	.LVL54:
 756              	.L54:
 757              	.LCFI5:
 758              		.cfi_def_cfa_offset 0
 759              		.cfi_restore 4
 760              		.cfi_restore 14
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 761              		.loc 1 3488 1 view .LVU221
 762 003c 7047     		bx	lr
 763              	.L56:
 764 003e 00BF     		.align	2
 765              	.L55:
 766 0040 00000000 		.word	.LANCHOR14
 767 0044 00000000 		.word	.LANCHOR7
 768 0048 00000000 		.word	.LANCHOR9
 769              		.cfi_endproc
 770              	.LFE38:
 772              		.section	.text.prvIdleTask,"ax",%progbits
 773              		.align	1
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 778              	prvIdleTask:
 779              	.LFB36:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 780              		.loc 1 3219 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ Volatile: function does not return.
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL55:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 786              		.loc 1 3219 1 is_stmt 0 view .LVU223
 787 0000 08B5     		push	{r3, lr}
 788              	.LCFI6:
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 3, -8
 791              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3EZotN.s 			page 87


 792              	.LVL56:
 793              	.L58:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 794              		.loc 1 3221 2 is_stmt 1 view .LVU224
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 795              		.loc 1 3229 35 view .LVU225
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 796              		.loc 1 3231 2 view .LVU226
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 797              		.loc 1 3235 3 view .LVU227
 798 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 799              	.LVL57:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 800              		.loc 1 3258 4 view .LVU228
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 801              		.loc 1 3258 8 is_stmt 0 view .LVU229
 802 0006 074B     		ldr	r3, .L61
 803 0008 1B68     		ldr	r3, [r3]
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 804              		.loc 1 3258 6 view .LVU230
 805 000a 012B     		cmp	r3, #1
 806 000c F9D9     		bls	.L58
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807              		.loc 1 3260 5 is_stmt 1 view .LVU231
 808 000e 4FF0E023 		mov	r3, #-536813568
 809 0012 4FF08052 		mov	r2, #268435456
 810 0016 C3F8042D 		str	r2, [r3, #3332]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 811              		.loc 1 3260 5 view .LVU232
 812              		.syntax unified
 813              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 814 001a BFF34F8F 		dsb
 815              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 816              		.loc 1 3260 5 view .LVU233
 817              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 818 001e BFF36F8F 		isb
 819              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 820              		.loc 1 3260 16 view .LVU234
 821              		.thumb
 822              		.syntax unified
 823 0022 EEE7     		b	.L58
 824              	.L62:
 825              		.align	2
 826              	.L61:
 827 0024 00000000 		.word	.LANCHOR4
 828              		.cfi_endproc
 829              	.LFE36:
 831              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 832              		.align	1
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	prvAddCurrentTaskToDelayedList:
 838              	.LVL58:
 839              	.LFB54:
ARM GAS  /tmp/cc3EZotN.s 			page 88


3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
ARM GAS  /tmp/cc3EZotN.s 			page 89


3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
ARM GAS  /tmp/cc3EZotN.s 			page 90


3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc3EZotN.s 			page 91


3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 92


3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/cc3EZotN.s 			page 93


4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc3EZotN.s 			page 94


4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
ARM GAS  /tmp/cc3EZotN.s 			page 95


4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
ARM GAS  /tmp/cc3EZotN.s 			page 96


4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc3EZotN.s 			page 97


4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
ARM GAS  /tmp/cc3EZotN.s 			page 98


4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 99


4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
ARM GAS  /tmp/cc3EZotN.s 			page 100


4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
ARM GAS  /tmp/cc3EZotN.s 			page 101


4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 102


4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc3EZotN.s 			page 103


4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 104


4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/cc3EZotN.s 			page 105


4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc3EZotN.s 			page 106


4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
ARM GAS  /tmp/cc3EZotN.s 			page 107


4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/cc3EZotN.s 			page 108


4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 840              		.loc 1 4907 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		.loc 1 4907 1 is_stmt 0 view .LVU236
 845 0000 70B5     		push	{r4, r5, r6, lr}
 846              	.LCFI7:
 847              		.cfi_def_cfa_offset 16
 848              		.cfi_offset 4, -16
 849              		.cfi_offset 5, -12
 850              		.cfi_offset 6, -8
 851              		.cfi_offset 14, -4
 852 0002 0446     		mov	r4, r0
 853 0004 0D46     		mov	r5, r1
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 854              		.loc 1 4908 1 is_stmt 1 view .LVU237
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 855              		.loc 1 4909 1 view .LVU238
 856              		.loc 1 4909 18 is_stmt 0 view .LVU239
 857 0006 1D4B     		ldr	r3, .L70
 858 0008 1E68     		ldr	r6, [r3]
 859              	.LVL59:
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  /tmp/cc3EZotN.s 			page 109


 860              		.loc 1 4922 2 is_stmt 1 view .LVU240
 861              		.loc 1 4922 35 is_stmt 0 view .LVU241
 862 000a 1D4B     		ldr	r3, .L70+4
 863 000c 1868     		ldr	r0, [r3]
 864              	.LVL60:
 865              		.loc 1 4922 6 view .LVU242
 866 000e 0430     		adds	r0, r0, #4
 867 0010 FFF7FEFF 		bl	uxListRemove
 868              	.LVL61:
 869              		.loc 1 4922 4 view .LVU243
 870 0014 48B9     		cbnz	r0, .L64
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 871              		.loc 1 4926 3 is_stmt 1 view .LVU244
 872 0016 1A4B     		ldr	r3, .L70+4
 873 0018 1B68     		ldr	r3, [r3]
 874 001a DB6A     		ldr	r3, [r3, #44]
 875 001c 0122     		movs	r2, #1
 876 001e 9A40     		lsls	r2, r2, r3
 877 0020 1849     		ldr	r1, .L70+8
 878 0022 0B68     		ldr	r3, [r1]
 879 0024 23EA0203 		bic	r3, r3, r2
 880 0028 0B60     		str	r3, [r1]
 881              	.L64:
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 882              		.loc 1 4930 27 view .LVU245
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 883              		.loc 1 4935 3 view .LVU246
 884              		.loc 1 4935 5 is_stmt 0 view .LVU247
 885 002a B4F1FF3F 		cmp	r4, #-1
 886 002e 0DD0     		beq	.L69
 887              	.L65:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 888              		.loc 1 4947 4 is_stmt 1 view .LVU248
 889              		.loc 1 4947 16 is_stmt 0 view .LVU249
 890 0030 3444     		add	r4, r4, r6
 891              	.LVL62:
ARM GAS  /tmp/cc3EZotN.s 			page 110


4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 892              		.loc 1 4950 4 is_stmt 1 view .LVU250
 893 0032 134B     		ldr	r3, .L70+4
 894 0034 1B68     		ldr	r3, [r3]
 895 0036 5C60     		str	r4, [r3, #4]
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 896              		.loc 1 4952 4 view .LVU251
 897              		.loc 1 4952 6 is_stmt 0 view .LVU252
 898 0038 A642     		cmp	r6, r4
 899 003a 10D9     		bls	.L67
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 900              		.loc 1 4956 5 is_stmt 1 view .LVU253
 901 003c 124B     		ldr	r3, .L70+12
 902 003e 1868     		ldr	r0, [r3]
 903              		.loc 1 4956 60 is_stmt 0 view .LVU254
 904 0040 0F4B     		ldr	r3, .L70+4
 905 0042 1968     		ldr	r1, [r3]
 906              		.loc 1 4956 5 view .LVU255
 907 0044 0431     		adds	r1, r1, #4
 908 0046 FFF7FEFF 		bl	vListInsert
 909              	.LVL63:
 910              	.L63:
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
ARM GAS  /tmp/cc3EZotN.s 			page 111


4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 911              		.loc 1 5015 1 view .LVU256
 912 004a 70BD     		pop	{r4, r5, r6, pc}
 913              	.LVL64:
 914              	.L69:
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 915              		.loc 1 4935 41 discriminator 1 view .LVU257
 916 004c 002D     		cmp	r5, #0
 917 004e EFD0     		beq	.L65
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 918              		.loc 1 4940 4 is_stmt 1 view .LVU258
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 919              		.loc 1 4940 56 is_stmt 0 view .LVU259
 920 0050 0B4B     		ldr	r3, .L70+4
 921 0052 1968     		ldr	r1, [r3]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 922              		.loc 1 4940 4 view .LVU260
 923 0054 0431     		adds	r1, r1, #4
 924 0056 0D48     		ldr	r0, .L70+16
 925 0058 FFF7FEFF 		bl	vListInsertEnd
 926              	.LVL65:
 927 005c F5E7     		b	.L63
 928              	.LVL66:
 929              	.L67:
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930              		.loc 1 4962 5 is_stmt 1 view .LVU261
 931 005e 0C4B     		ldr	r3, .L70+20
 932 0060 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 112


4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933              		.loc 1 4962 52 is_stmt 0 view .LVU262
 934 0062 074B     		ldr	r3, .L70+4
 935 0064 1968     		ldr	r1, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936              		.loc 1 4962 5 view .LVU263
 937 0066 0431     		adds	r1, r1, #4
 938 0068 FFF7FEFF 		bl	vListInsert
 939              	.LVL67:
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 940              		.loc 1 4967 5 is_stmt 1 view .LVU264
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 941              		.loc 1 4967 21 is_stmt 0 view .LVU265
 942 006c 094B     		ldr	r3, .L70+24
 943 006e 1B68     		ldr	r3, [r3]
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 944              		.loc 1 4967 7 view .LVU266
 945 0070 A342     		cmp	r3, r4
 946 0072 EAD9     		bls	.L63
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 947              		.loc 1 4969 6 is_stmt 1 view .LVU267
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 948              		.loc 1 4969 27 is_stmt 0 view .LVU268
 949 0074 074B     		ldr	r3, .L70+24
 950 0076 1C60     		str	r4, [r3]
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 951              		.loc 1 4973 30 is_stmt 1 view .LVU269
 952              		.loc 1 5015 1 is_stmt 0 view .LVU270
 953 0078 E7E7     		b	.L63
 954              	.L71:
 955 007a 00BF     		.align	2
 956              	.L70:
 957 007c 00000000 		.word	.LANCHOR15
 958 0080 00000000 		.word	.LANCHOR10
 959 0084 00000000 		.word	.LANCHOR13
 960 0088 00000000 		.word	.LANCHOR8
 961 008c 00000000 		.word	.LANCHOR0
 962 0090 00000000 		.word	.LANCHOR2
 963 0094 00000000 		.word	.LANCHOR3
 964              		.cfi_endproc
 965              	.LFE54:
 967              		.section	.text.xTaskCreateStatic,"ax",%progbits
 968              		.align	1
 969              		.global	xTaskCreateStatic
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	xTaskCreateStatic:
 975              	.LVL68:
 976              	.LFB5:
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 977              		.loc 1 582 2 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 12, pretend = 0, frame = 8
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 981              		.loc 1 582 2 is_stmt 0 view .LVU272
ARM GAS  /tmp/cc3EZotN.s 			page 113


 982 0000 30B5     		push	{r4, r5, lr}
 983              	.LCFI8:
 984              		.cfi_def_cfa_offset 12
 985              		.cfi_offset 4, -12
 986              		.cfi_offset 5, -8
 987              		.cfi_offset 14, -4
 988 0002 87B0     		sub	sp, sp, #28
 989              	.LCFI9:
 990              		.cfi_def_cfa_offset 40
 991 0004 0B9C     		ldr	r4, [sp, #44]
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 992              		.loc 1 583 2 is_stmt 1 view .LVU273
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 993              		.loc 1 584 2 view .LVU274
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 994              		.loc 1 586 3 view .LVU275
 995 0006 8CB1     		cbz	r4, .L80
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 996              		.loc 1 586 41 discriminator 2 view .LVU276
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997              		.loc 1 587 3 discriminator 2 view .LVU277
 998 0008 0C9D     		ldr	r5, [sp, #48]
 999 000a C5B1     		cbz	r5, .L81
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1000              		.loc 1 587 39 discriminator 2 view .LVU278
 1001              	.LBB110:
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1002              		.loc 1 594 4 discriminator 2 view .LVU279
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1003              		.loc 1 594 20 is_stmt 0 discriminator 2 view .LVU280
 1004 000c 4FF49265 		mov	r5, #1168
 1005 0010 0495     		str	r5, [sp, #16]
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1006              		.loc 1 595 4 is_stmt 1 discriminator 2 view .LVU281
 1007 0012 049D     		ldr	r5, [sp, #16]
 1008 0014 B5F5926F 		cmp	r5, #1168
 1009 0018 1AD0     		beq	.L77
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1010              		.loc 1 595 4 view .LVU282
 1011              	.LBB111:
 1012              	.LBI111:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1013              		.loc 2 191 30 view .LVU283
 1014              	.LBB112:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1015              		.loc 2 193 1 view .LVU284
 1016              		.loc 2 195 2 view .LVU285
 1017              		.syntax unified
 1018              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1019 001a 4FF05003 			mov r3, #80												
 1020 001e 83F31188 		msr basepri, r3											
 1021 0022 BFF36F8F 		isb														
 1022 0026 BFF34F8F 		dsb														
 1023              	
 1024              	@ 0 "" 2
 1025              	.LVL69:
 1026              		.thumb
ARM GAS  /tmp/cc3EZotN.s 			page 114


 1027              		.syntax unified
 1028              	.L78:
 1029              		.loc 2 195 2 is_stmt 0 view .LVU286
 1030              	.LBE112:
 1031              	.LBE111:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1032              		.loc 1 595 4 is_stmt 1 discriminator 3 view .LVU287
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1033              		.loc 1 595 4 discriminator 3 view .LVU288
 1034 002a FEE7     		b	.L78
 1035              	.LVL70:
 1036              	.L80:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1037              		.loc 1 595 4 is_stmt 0 discriminator 3 view .LVU289
 1038              	.LBE110:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1039              		.loc 1 586 3 is_stmt 1 view .LVU290
 1040              	.LBB113:
 1041              	.LBI113:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1042              		.loc 2 191 30 view .LVU291
 1043              	.LBB114:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1044              		.loc 2 193 1 view .LVU292
 1045              		.loc 2 195 2 view .LVU293
 1046              		.syntax unified
 1047              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1048 002c 4FF05003 			mov r3, #80												
 1049 0030 83F31188 		msr basepri, r3											
 1050 0034 BFF36F8F 		isb														
 1051 0038 BFF34F8F 		dsb														
 1052              	
 1053              	@ 0 "" 2
 1054              	.LVL71:
 1055              		.thumb
 1056              		.syntax unified
 1057              	.L74:
 1058              		.loc 2 195 2 is_stmt 0 view .LVU294
 1059              	.LBE114:
 1060              	.LBE113:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1061              		.loc 1 586 3 is_stmt 1 discriminator 1 view .LVU295
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1062              		.loc 1 586 3 discriminator 1 view .LVU296
 1063 003c FEE7     		b	.L74
 1064              	.LVL72:
 1065              	.L81:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1066              		.loc 1 587 3 view .LVU297
 1067              	.LBB115:
 1068              	.LBI115:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1069              		.loc 2 191 30 view .LVU298
 1070              	.LBB116:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1071              		.loc 2 193 1 view .LVU299
 1072              		.loc 2 195 2 view .LVU300
ARM GAS  /tmp/cc3EZotN.s 			page 115


 1073              		.syntax unified
 1074              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1075 003e 4FF05003 			mov r3, #80												
 1076 0042 83F31188 		msr basepri, r3											
 1077 0046 BFF36F8F 		isb														
 1078 004a BFF34F8F 		dsb														
 1079              	
 1080              	@ 0 "" 2
 1081              	.LVL73:
 1082              		.thumb
 1083              		.syntax unified
 1084              	.L76:
 1085              		.loc 2 195 2 is_stmt 0 view .LVU301
 1086              	.LBE116:
 1087              	.LBE115:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1088              		.loc 1 587 3 is_stmt 1 discriminator 2 view .LVU302
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1089              		.loc 1 587 3 discriminator 2 view .LVU303
 1090 004e FEE7     		b	.L76
 1091              	.LVL74:
 1092              	.L77:
 1093              	.LBB117:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1094              		.loc 1 595 44 view .LVU304
 1095              	.LBE117:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1096              		.loc 1 600 3 view .LVU305
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1097              		.loc 1 604 4 view .LVU306
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1098              		.loc 1 605 4 view .LVU307
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1099              		.loc 1 605 22 is_stmt 0 view .LVU308
 1100 0050 0C9D     		ldr	r5, [sp, #48]
 1101 0052 2C63     		str	r4, [r5, #48]
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1102              		.loc 1 611 5 is_stmt 1 view .LVU309
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1103              		.loc 1 611 37 is_stmt 0 view .LVU310
 1104 0054 0224     		movs	r4, #2
 1105 0056 85F88D44 		strb	r4, [r5, #1165]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1106              		.loc 1 615 4 is_stmt 1 view .LVU311
 1107 005a 0024     		movs	r4, #0
 1108 005c 0394     		str	r4, [sp, #12]
 1109 005e 0295     		str	r5, [sp, #8]
 1110 0060 05AC     		add	r4, sp, #20
 1111 0062 0194     		str	r4, [sp, #4]
 1112 0064 0A9C     		ldr	r4, [sp, #40]
 1113 0066 0094     		str	r4, [sp]
 1114 0068 FFF7FEFF 		bl	prvInitialiseNewTask
 1115              	.LVL75:
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1116              		.loc 1 616 4 view .LVU312
 1117 006c 0C98     		ldr	r0, [sp, #48]
 1118 006e FFF7FEFF 		bl	prvAddNewTaskToReadyList
ARM GAS  /tmp/cc3EZotN.s 			page 116


 1119              	.LVL76:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1120              		.loc 1 623 3 view .LVU313
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1121              		.loc 1 624 2 is_stmt 0 view .LVU314
 1122 0072 0598     		ldr	r0, [sp, #20]
 1123 0074 07B0     		add	sp, sp, #28
 1124              	.LCFI10:
 1125              		.cfi_def_cfa_offset 12
 1126              		@ sp needed
 1127 0076 30BD     		pop	{r4, r5, pc}
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1128              		.loc 1 624 2 view .LVU315
 1129              		.cfi_endproc
 1130              	.LFE5:
 1132              		.section	.text.xTaskCreate,"ax",%progbits
 1133              		.align	1
 1134              		.global	xTaskCreate
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1139              	xTaskCreate:
 1140              	.LVL77:
 1141              	.LFB6:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1142              		.loc 1 732 2 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 8, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1146              		.loc 1 732 2 is_stmt 0 view .LVU317
 1147 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1148              	.LCFI11:
 1149              		.cfi_def_cfa_offset 28
 1150              		.cfi_offset 4, -28
 1151              		.cfi_offset 5, -24
 1152              		.cfi_offset 6, -20
 1153              		.cfi_offset 7, -16
 1154              		.cfi_offset 8, -12
 1155              		.cfi_offset 9, -8
 1156              		.cfi_offset 14, -4
 1157 0004 85B0     		sub	sp, sp, #20
 1158              	.LCFI12:
 1159              		.cfi_def_cfa_offset 48
 1160 0006 0746     		mov	r7, r0
 1161 0008 8846     		mov	r8, r1
 1162 000a 1446     		mov	r4, r2
 1163 000c 1E46     		mov	r6, r3
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1164              		.loc 1 733 2 is_stmt 1 view .LVU318
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1165              		.loc 1 734 2 view .LVU319
 1166              	.LBB118:
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1167              		.loc 1 763 3 view .LVU320
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1168              		.loc 1 766 4 view .LVU321
ARM GAS  /tmp/cc3EZotN.s 			page 117


 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1169              		.loc 1 766 32 is_stmt 0 view .LVU322
 1170 000e 9000     		lsls	r0, r2, #2
 1171              	.LVL78:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1172              		.loc 1 766 32 view .LVU323
 1173 0010 FFF7FEFF 		bl	pvPortMalloc
 1174              	.LVL79:
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1175              		.loc 1 768 4 is_stmt 1 view .LVU324
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1176              		.loc 1 768 6 is_stmt 0 view .LVU325
 1177 0014 08B3     		cbz	r0, .L86
 1178 0016 8146     		mov	r9, r0
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1179              		.loc 1 771 5 is_stmt 1 view .LVU326
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1180              		.loc 1 771 28 is_stmt 0 view .LVU327
 1181 0018 4FF49260 		mov	r0, #1168
 1182              	.LVL80:
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1183              		.loc 1 771 28 view .LVU328
 1184 001c FFF7FEFF 		bl	pvPortMalloc
 1185              	.LVL81:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1186              		.loc 1 773 5 is_stmt 1 view .LVU329
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1187              		.loc 1 773 7 is_stmt 0 view .LVU330
 1188 0020 0546     		mov	r5, r0
 1189 0022 B0B1     		cbz	r0, .L84
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1190              		.loc 1 776 6 is_stmt 1 view .LVU331
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1191              		.loc 1 776 24 is_stmt 0 view .LVU332
 1192 0024 C0F83090 		str	r9, [r0, #48]
 1193              	.LVL82:
 1194              	.L85:
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1195              		.loc 1 776 24 view .LVU333
 1196              	.LBE118:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1197              		.loc 1 792 3 is_stmt 1 view .LVU334
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1198              		.loc 1 792 5 is_stmt 0 view .LVU335
 1199 0028 E5B1     		cbz	r5, .L87
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1200              		.loc 1 798 5 is_stmt 1 view .LVU336
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1201              		.loc 1 798 37 is_stmt 0 view .LVU337
 1202 002a 0023     		movs	r3, #0
 1203 002c 85F88D34 		strb	r3, [r5, #1165]
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1204              		.loc 1 802 4 is_stmt 1 view .LVU338
 1205 0030 0393     		str	r3, [sp, #12]
 1206 0032 0295     		str	r5, [sp, #8]
 1207 0034 0D9B     		ldr	r3, [sp, #52]
 1208 0036 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc3EZotN.s 			page 118


 1209 0038 0C9B     		ldr	r3, [sp, #48]
 1210 003a 0093     		str	r3, [sp]
 1211 003c 3346     		mov	r3, r6
 1212 003e 2246     		mov	r2, r4
 1213 0040 4146     		mov	r1, r8
 1214 0042 3846     		mov	r0, r7
 1215 0044 FFF7FEFF 		bl	prvInitialiseNewTask
 1216              	.LVL83:
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1217              		.loc 1 803 4 view .LVU339
 1218 0048 2846     		mov	r0, r5
 1219 004a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1220              	.LVL84:
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1221              		.loc 1 804 4 view .LVU340
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1222              		.loc 1 804 12 is_stmt 0 view .LVU341
 1223 004e 0120     		movs	r0, #1
 1224 0050 05E0     		b	.L82
 1225              	.LVL85:
 1226              	.L84:
 1227              	.LBB119:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1228              		.loc 1 782 6 is_stmt 1 view .LVU342
 1229 0052 4846     		mov	r0, r9
 1230              	.LVL86:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1231              		.loc 1 782 6 is_stmt 0 view .LVU343
 1232 0054 FFF7FEFF 		bl	vPortFree
 1233              	.LVL87:
 1234 0058 E6E7     		b	.L85
 1235              	.LVL88:
 1236              	.L86:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1237              		.loc 1 782 6 view .LVU344
 1238              	.LBE119:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1239              		.loc 1 808 12 view .LVU345
 1240 005a 4FF0FF30 		mov	r0, #-1
 1241              	.LVL89:
 1242              	.L82:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1243              		.loc 1 812 2 view .LVU346
 1244 005e 05B0     		add	sp, sp, #20
 1245              	.LCFI13:
 1246              		.cfi_remember_state
 1247              		.cfi_def_cfa_offset 28
 1248              		@ sp needed
 1249 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1250              	.LVL90:
 1251              	.L87:
 1252              	.LCFI14:
 1253              		.cfi_restore_state
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1254              		.loc 1 808 12 view .LVU347
 1255 0064 4FF0FF30 		mov	r0, #-1
 1256              	.LVL91:
ARM GAS  /tmp/cc3EZotN.s 			page 119


 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1257              		.loc 1 811 3 is_stmt 1 view .LVU348
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1258              		.loc 1 811 10 is_stmt 0 view .LVU349
 1259 0068 F9E7     		b	.L82
 1260              		.cfi_endproc
 1261              	.LFE6:
 1263              		.section	.text.vTaskDelete,"ax",%progbits
 1264              		.align	1
 1265              		.global	vTaskDelete
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1270              	vTaskDelete:
 1271              	.LVL92:
 1272              	.LFB9:
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1273              		.loc 1 1107 2 is_stmt 1 view -0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1277              		.loc 1 1107 2 is_stmt 0 view .LVU351
 1278 0000 38B5     		push	{r3, r4, r5, lr}
 1279              	.LCFI15:
 1280              		.cfi_def_cfa_offset 16
 1281              		.cfi_offset 3, -16
 1282              		.cfi_offset 4, -12
 1283              		.cfi_offset 5, -8
 1284              		.cfi_offset 14, -4
 1285 0002 0446     		mov	r4, r0
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1286              		.loc 1 1108 2 is_stmt 1 view .LVU352
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1287              		.loc 1 1110 3 view .LVU353
 1288 0004 FFF7FEFF 		bl	vPortEnterCritical
 1289              	.LVL93:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1114 4 view .LVU354
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1291              		.loc 1 1114 12 is_stmt 0 view .LVU355
 1292 0008 002C     		cmp	r4, #0
 1293 000a 34D0     		beq	.L99
 1294              	.LVL94:
 1295              	.L90:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1296              		.loc 1 1117 4 is_stmt 1 discriminator 4 view .LVU356
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1297              		.loc 1 1117 8 is_stmt 0 discriminator 4 view .LVU357
 1298 000c 251D     		adds	r5, r4, #4
 1299 000e 2846     		mov	r0, r5
 1300 0010 FFF7FEFF 		bl	uxListRemove
 1301              	.LVL95:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1302              		.loc 1 1117 6 discriminator 4 view .LVU358
 1303 0014 70B9     		cbnz	r0, .L91
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 120


 1304              		.loc 1 1119 5 is_stmt 1 view .LVU359
 1305 0016 E26A     		ldr	r2, [r4, #44]
 1306 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1307 001c 9B00     		lsls	r3, r3, #2
 1308 001e 2749     		ldr	r1, .L102
 1309 0020 CB58     		ldr	r3, [r1, r3]
 1310 0022 3BB9     		cbnz	r3, .L91
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1311              		.loc 1 1119 5 discriminator 1 view .LVU360
 1312 0024 0123     		movs	r3, #1
 1313 0026 03FA02F2 		lsl	r2, r3, r2
 1314 002a 2549     		ldr	r1, .L102+4
 1315 002c 0B68     		ldr	r3, [r1]
 1316 002e 23EA0203 		bic	r3, r3, r2
 1317 0032 0B60     		str	r3, [r1]
 1318              	.L91:
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1319              		.loc 1 1123 29 view .LVU361
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1320              		.loc 1 1127 4 view .LVU362
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1321              		.loc 1 1127 8 is_stmt 0 view .LVU363
 1322 0034 A36A     		ldr	r3, [r4, #40]
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1323              		.loc 1 1127 6 view .LVU364
 1324 0036 1BB1     		cbz	r3, .L92
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1325              		.loc 1 1129 5 is_stmt 1 view .LVU365
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1326              		.loc 1 1129 14 is_stmt 0 view .LVU366
 1327 0038 04F11800 		add	r0, r4, #24
 1328 003c FFF7FEFF 		bl	uxListRemove
 1329              	.LVL96:
 1330              	.L92:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1331              		.loc 1 1133 29 is_stmt 1 view .LVU367
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1332              		.loc 1 1140 4 view .LVU368
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1333              		.loc 1 1140 16 is_stmt 0 view .LVU369
 1334 0040 204A     		ldr	r2, .L102+8
 1335 0042 1368     		ldr	r3, [r2]
 1336 0044 0133     		adds	r3, r3, #1
 1337 0046 1360     		str	r3, [r2]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1338              		.loc 1 1142 4 is_stmt 1 view .LVU370
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1339              		.loc 1 1142 14 is_stmt 0 view .LVU371
 1340 0048 1F4B     		ldr	r3, .L102+12
 1341 004a 1B68     		ldr	r3, [r3]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1342              		.loc 1 1142 6 view .LVU372
 1343 004c A342     		cmp	r3, r4
 1344 004e 15D0     		beq	.L100
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1345              		.loc 1 1165 5 is_stmt 1 view .LVU373
 1346 0050 1E4A     		ldr	r2, .L102+16
ARM GAS  /tmp/cc3EZotN.s 			page 121


 1347 0052 1368     		ldr	r3, [r2]
 1348 0054 013B     		subs	r3, r3, #1
 1349 0056 1360     		str	r3, [r2]
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1350              		.loc 1 1166 5 view .LVU374
 1351 0058 2046     		mov	r0, r4
 1352 005a FFF7FEFF 		bl	prvDeleteTCB
 1353              	.LVL97:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1354              		.loc 1 1170 5 view .LVU375
 1355 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1356              	.LVL98:
 1357              	.L94:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1358              		.loc 1 1173 29 view .LVU376
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1359              		.loc 1 1175 3 view .LVU377
 1360 0062 FFF7FEFF 		bl	vPortExitCritical
 1361              	.LVL99:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1362              		.loc 1 1179 3 view .LVU378
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1363              		.loc 1 1179 25 is_stmt 0 view .LVU379
 1364 0066 1A4B     		ldr	r3, .L102+20
 1365 0068 1B68     		ldr	r3, [r3]
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1366              		.loc 1 1179 5 view .LVU380
 1367 006a 1BB1     		cbz	r3, .L89
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1368              		.loc 1 1181 4 is_stmt 1 view .LVU381
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1369              		.loc 1 1181 14 is_stmt 0 view .LVU382
 1370 006c 164B     		ldr	r3, .L102+12
 1371 006e 1B68     		ldr	r3, [r3]
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1372              		.loc 1 1181 6 view .LVU383
 1373 0070 A342     		cmp	r3, r4
 1374 0072 0CD0     		beq	.L101
 1375              	.L89:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1376              		.loc 1 1191 2 view .LVU384
 1377 0074 38BD     		pop	{r3, r4, r5, pc}
 1378              	.LVL100:
 1379              	.L99:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1380              		.loc 1 1114 12 discriminator 1 view .LVU385
 1381 0076 144B     		ldr	r3, .L102+12
 1382 0078 1C68     		ldr	r4, [r3]
 1383              	.LVL101:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1384              		.loc 1 1114 12 discriminator 1 view .LVU386
 1385 007a C7E7     		b	.L90
 1386              	.LVL102:
 1387              	.L100:
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1388              		.loc 1 1149 5 is_stmt 1 view .LVU387
 1389 007c 2946     		mov	r1, r5
ARM GAS  /tmp/cc3EZotN.s 			page 122


 1390 007e 1548     		ldr	r0, .L102+24
 1391 0080 FFF7FEFF 		bl	vListInsertEnd
 1392              	.LVL103:
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1393              		.loc 1 1154 5 view .LVU388
 1394 0084 144A     		ldr	r2, .L102+28
 1395 0086 1368     		ldr	r3, [r2]
 1396 0088 0133     		adds	r3, r3, #1
 1397 008a 1360     		str	r3, [r2]
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1398              		.loc 1 1161 54 view .LVU389
 1399 008c E9E7     		b	.L94
 1400              	.L101:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1401              		.loc 1 1183 5 view .LVU390
 1402 008e 134B     		ldr	r3, .L102+32
 1403 0090 1B68     		ldr	r3, [r3]
 1404 0092 43B1     		cbz	r3, .L96
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1405              		.loc 1 1183 5 view .LVU391
 1406              	.LBB120:
 1407              	.LBI120:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1408              		.loc 2 191 30 view .LVU392
 1409              	.LBB121:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1410              		.loc 2 193 1 view .LVU393
 1411              		.loc 2 195 2 view .LVU394
 1412              		.syntax unified
 1413              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1414 0094 4FF05003 			mov r3, #80												
 1415 0098 83F31188 		msr basepri, r3											
 1416 009c BFF36F8F 		isb														
 1417 00a0 BFF34F8F 		dsb														
 1418              	
 1419              	@ 0 "" 2
 1420              	.LVL104:
 1421              		.thumb
 1422              		.syntax unified
 1423              	.L97:
 1424              		.loc 2 195 2 is_stmt 0 view .LVU395
 1425              	.LBE121:
 1426              	.LBE120:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1427              		.loc 1 1183 5 is_stmt 1 discriminator 1 view .LVU396
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1428              		.loc 1 1183 5 discriminator 1 view .LVU397
 1429 00a4 FEE7     		b	.L97
 1430              	.L96:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1431              		.loc 1 1183 46 discriminator 2 view .LVU398
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1432              		.loc 1 1184 5 discriminator 2 view .LVU399
 1433 00a6 4FF0E023 		mov	r3, #-536813568
 1434 00aa 4FF08052 		mov	r2, #268435456
 1435 00ae C3F8042D 		str	r2, [r3, #3332]
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 123


 1436              		.loc 1 1184 5 discriminator 2 view .LVU400
 1437              		.syntax unified
 1438              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1439 00b2 BFF34F8F 		dsb
 1440              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1441              		.loc 1 1184 5 discriminator 2 view .LVU401
 1442              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1443 00b6 BFF36F8F 		isb
 1444              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1445              		.loc 1 1184 27 discriminator 2 view .LVU402
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1446              		.loc 1 1188 29 discriminator 2 view .LVU403
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1447              		.loc 1 1191 2 is_stmt 0 discriminator 2 view .LVU404
 1448              		.thumb
 1449              		.syntax unified
 1450 00ba DBE7     		b	.L89
 1451              	.L103:
 1452              		.align	2
 1453              	.L102:
 1454 00bc 00000000 		.word	.LANCHOR4
 1455 00c0 00000000 		.word	.LANCHOR13
 1456 00c4 00000000 		.word	.LANCHOR12
 1457 00c8 00000000 		.word	.LANCHOR10
 1458 00cc 00000000 		.word	.LANCHOR9
 1459 00d0 00000000 		.word	.LANCHOR11
 1460 00d4 00000000 		.word	.LANCHOR7
 1461 00d8 00000000 		.word	.LANCHOR14
 1462 00dc 00000000 		.word	.LANCHOR16
 1463              		.cfi_endproc
 1464              	.LFE9:
 1466              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1467              		.align	1
 1468              		.global	uxTaskPriorityGet
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1473              	uxTaskPriorityGet:
 1474              	.LVL105:
 1475              	.LFB11:
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1476              		.loc 1 1399 2 is_stmt 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1480              		.loc 1 1399 2 is_stmt 0 view .LVU406
 1481 0000 10B5     		push	{r4, lr}
 1482              	.LCFI16:
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 4, -8
 1485              		.cfi_offset 14, -4
 1486 0002 0446     		mov	r4, r0
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1487              		.loc 1 1400 2 is_stmt 1 view .LVU407
ARM GAS  /tmp/cc3EZotN.s 			page 124


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1488              		.loc 1 1401 2 view .LVU408
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1489              		.loc 1 1403 3 view .LVU409
 1490 0004 FFF7FEFF 		bl	vPortEnterCritical
 1491              	.LVL106:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1492              		.loc 1 1407 4 view .LVU410
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1493              		.loc 1 1407 12 is_stmt 0 view .LVU411
 1494 0008 24B1     		cbz	r4, .L107
 1495              	.LVL107:
 1496              	.L105:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1497              		.loc 1 1408 4 is_stmt 1 discriminator 4 view .LVU412
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1498              		.loc 1 1408 13 is_stmt 0 discriminator 4 view .LVU413
 1499 000a E46A     		ldr	r4, [r4, #44]
 1500              	.LVL108:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1501              		.loc 1 1410 3 is_stmt 1 discriminator 4 view .LVU414
 1502 000c FFF7FEFF 		bl	vPortExitCritical
 1503              	.LVL109:
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1504              		.loc 1 1412 3 discriminator 4 view .LVU415
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1505              		.loc 1 1413 2 is_stmt 0 discriminator 4 view .LVU416
 1506 0010 2046     		mov	r0, r4
 1507 0012 10BD     		pop	{r4, pc}
 1508              	.LVL110:
 1509              	.L107:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1510              		.loc 1 1407 12 discriminator 1 view .LVU417
 1511 0014 014B     		ldr	r3, .L108
 1512 0016 1C68     		ldr	r4, [r3]
 1513              	.LVL111:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1514              		.loc 1 1407 12 discriminator 1 view .LVU418
 1515 0018 F7E7     		b	.L105
 1516              	.L109:
 1517 001a 00BF     		.align	2
 1518              	.L108:
 1519 001c 00000000 		.word	.LANCHOR10
 1520              		.cfi_endproc
 1521              	.LFE11:
 1523              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1524              		.align	1
 1525              		.global	uxTaskPriorityGetFromISR
 1526              		.syntax unified
 1527              		.thumb
 1528              		.thumb_func
 1530              	uxTaskPriorityGetFromISR:
 1531              	.LVL112:
 1532              	.LFB12:
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1533              		.loc 1 1421 2 is_stmt 1 view -0
 1534              		.cfi_startproc
ARM GAS  /tmp/cc3EZotN.s 			page 125


 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1537              		.loc 1 1421 2 is_stmt 0 view .LVU420
 1538 0000 10B5     		push	{r4, lr}
 1539              	.LCFI17:
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 4, -8
 1542              		.cfi_offset 14, -4
 1543 0002 0446     		mov	r4, r0
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1544              		.loc 1 1422 2 is_stmt 1 view .LVU421
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1545              		.loc 1 1423 2 view .LVU422
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1546              		.loc 1 1441 3 view .LVU423
 1547 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1548              	.LVL113:
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1549              		.loc 1 1443 3 view .LVU424
 1550              	.LBB122:
 1551              	.LBI122:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1552              		.loc 2 207 34 view .LVU425
 1553              	.LBB123:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1554              		.loc 2 209 1 view .LVU426
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1555              		.loc 2 211 2 view .LVU427
 1556              		.syntax unified
 1557              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1558 0008 EFF31183 			mrs r3, basepri											
 1559 000c 4FF05002 		mov r2, #80												
 1560 0010 82F31188 		msr basepri, r2											
 1561 0014 BFF36F8F 		isb														
 1562 0018 BFF34F8F 		dsb														
 1563              	
 1564              	@ 0 "" 2
 1565              	.LVL114:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
ARM GAS  /tmp/cc3EZotN.s 			page 126


 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1566              		.loc 2 223 2 view .LVU428
 1567              		.loc 2 223 2 is_stmt 0 view .LVU429
 1568              		.thumb
 1569              		.syntax unified
 1570              	.LBE123:
 1571              	.LBE122:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1572              		.loc 1 1447 4 is_stmt 1 view .LVU430
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1573              		.loc 1 1447 12 is_stmt 0 view .LVU431
 1574 001c 1CB1     		cbz	r4, .L113
 1575              	.LVL115:
 1576              	.L111:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1577              		.loc 1 1448 4 is_stmt 1 discriminator 4 view .LVU432
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1578              		.loc 1 1448 13 is_stmt 0 discriminator 4 view .LVU433
 1579 001e E06A     		ldr	r0, [r4, #44]
 1580              	.LVL116:
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1581              		.loc 1 1450 3 is_stmt 1 discriminator 4 view .LVU434
 1582              	.LBB124:
 1583              	.LBI124:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1584              		.loc 2 227 30 discriminator 4 view .LVU435
 1585              	.LBB125:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1586              		.loc 2 229 2 discriminator 4 view .LVU436
 1587              		.syntax unified
 1588              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1589 0020 83F31188 			msr basepri, r3	
 1590              	@ 0 "" 2
 1591              		.thumb
 1592              		.syntax unified
 1593              	.LBE125:
 1594              	.LBE124:
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1595              		.loc 1 1452 3 discriminator 4 view .LVU437
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1596              		.loc 1 1453 2 is_stmt 0 discriminator 4 view .LVU438
 1597 0024 10BD     		pop	{r4, pc}
 1598              	.LVL117:
 1599              	.L113:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1600              		.loc 1 1447 12 discriminator 1 view .LVU439
 1601 0026 014A     		ldr	r2, .L114
ARM GAS  /tmp/cc3EZotN.s 			page 127


 1602 0028 1468     		ldr	r4, [r2]
 1603              	.LVL118:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1604              		.loc 1 1447 12 discriminator 1 view .LVU440
 1605 002a F8E7     		b	.L111
 1606              	.L115:
 1607              		.align	2
 1608              	.L114:
 1609 002c 00000000 		.word	.LANCHOR10
 1610              		.cfi_endproc
 1611              	.LFE12:
 1613              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1614              		.align	1
 1615              		.global	vTaskPrioritySet
 1616              		.syntax unified
 1617              		.thumb
 1618              		.thumb_func
 1620              	vTaskPrioritySet:
 1621              	.LVL119:
 1622              	.LFB13:
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1623              		.loc 1 1461 2 is_stmt 1 view -0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1627              		.loc 1 1461 2 is_stmt 0 view .LVU442
 1628 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1629              	.LCFI18:
 1630              		.cfi_def_cfa_offset 24
 1631              		.cfi_offset 3, -24
 1632              		.cfi_offset 4, -20
 1633              		.cfi_offset 5, -16
 1634              		.cfi_offset 6, -12
 1635              		.cfi_offset 7, -8
 1636              		.cfi_offset 14, -4
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1637              		.loc 1 1462 2 is_stmt 1 view .LVU443
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1638              		.loc 1 1463 2 view .LVU444
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1639              		.loc 1 1464 2 view .LVU445
 1640              	.LVL120:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1641              		.loc 1 1466 3 view .LVU446
 1642 0002 0629     		cmp	r1, #6
 1643 0004 08D9     		bls	.L117
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1644              		.loc 1 1466 3 view .LVU447
 1645              	.LBB126:
 1646              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1647              		.loc 2 191 30 view .LVU448
 1648              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1649              		.loc 2 193 1 view .LVU449
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/cc3EZotN.s 			page 128


 1650              		.loc 2 195 2 view .LVU450
 1651              		.syntax unified
 1652              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1653 0006 4FF05003 			mov r3, #80												
 1654 000a 83F31188 		msr basepri, r3											
 1655 000e BFF36F8F 		isb														
 1656 0012 BFF34F8F 		dsb														
 1657              	
 1658              	@ 0 "" 2
 1659              	.LVL121:
 1660              		.thumb
 1661              		.syntax unified
 1662              	.L118:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1663              		.loc 2 195 2 is_stmt 0 view .LVU451
 1664              	.LBE127:
 1665              	.LBE126:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1666              		.loc 1 1466 3 is_stmt 1 discriminator 1 view .LVU452
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1667              		.loc 1 1466 3 discriminator 1 view .LVU453
 1668 0016 FEE7     		b	.L118
 1669              	.L117:
 1670 0018 0546     		mov	r5, r0
 1671 001a 0C46     		mov	r4, r1
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1672              		.loc 1 1466 59 view .LVU454
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1673              		.loc 1 1469 3 view .LVU455
 1674              	.LVL122:
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1675              		.loc 1 1475 28 view .LVU456
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1676              		.loc 1 1478 3 view .LVU457
 1677 001c FFF7FEFF 		bl	vPortEnterCritical
 1678              	.LVL123:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1679              		.loc 1 1482 4 view .LVU458
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1680              		.loc 1 1482 12 is_stmt 0 view .LVU459
 1681 0020 75B1     		cbz	r5, .L131
 1682              	.LVL124:
 1683              	.L119:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1684              		.loc 1 1484 50 is_stmt 1 discriminator 4 view .LVU460
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1685              		.loc 1 1488 5 discriminator 4 view .LVU461
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1686              		.loc 1 1488 27 is_stmt 0 discriminator 4 view .LVU462
 1687 0022 6B6D     		ldr	r3, [r5, #84]
 1688              	.LVL125:
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1689              		.loc 1 1496 4 is_stmt 1 discriminator 4 view .LVU463
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1690              		.loc 1 1496 6 is_stmt 0 discriminator 4 view .LVU464
 1691 0024 9C42     		cmp	r4, r3
 1692 0026 30D0     		beq	.L120
ARM GAS  /tmp/cc3EZotN.s 			page 129


1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1693              		.loc 1 1500 5 is_stmt 1 view .LVU465
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1694              		.loc 1 1500 7 is_stmt 0 view .LVU466
 1695 0028 0DD9     		bls	.L121
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1696              		.loc 1 1502 6 is_stmt 1 view .LVU467
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1697              		.loc 1 1502 16 is_stmt 0 view .LVU468
 1698 002a 2B4A     		ldr	r2, .L134
 1699 002c 1268     		ldr	r2, [r2]
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1700              		.loc 1 1502 8 view .LVU469
 1701 002e AA42     		cmp	r2, r5
 1702 0030 2ED0     		beq	.L127
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1703              		.loc 1 1507 7 is_stmt 1 view .LVU470
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1704              		.loc 1 1507 40 is_stmt 0 view .LVU471
 1705 0032 294A     		ldr	r2, .L134
 1706 0034 1268     		ldr	r2, [r2]
 1707 0036 D26A     		ldr	r2, [r2, #44]
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1708              		.loc 1 1507 9 view .LVU472
 1709 0038 A242     		cmp	r2, r4
 1710 003a 2BD9     		bls	.L128
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1711              		.loc 1 1464 13 view .LVU473
 1712 003c 0027     		movs	r7, #0
 1713 003e 07E0     		b	.L122
 1714              	.LVL126:
 1715              	.L131:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1716              		.loc 1 1482 12 discriminator 1 view .LVU474
 1717 0040 254B     		ldr	r3, .L134
 1718 0042 1D68     		ldr	r5, [r3]
 1719              	.LVL127:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1720              		.loc 1 1482 12 discriminator 1 view .LVU475
 1721 0044 EDE7     		b	.L119
 1722              	.LVL128:
 1723              	.L121:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1724              		.loc 1 1523 10 is_stmt 1 view .LVU476
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1725              		.loc 1 1523 20 is_stmt 0 view .LVU477
 1726 0046 244A     		ldr	r2, .L134
 1727 0048 1268     		ldr	r2, [r2]
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1728              		.loc 1 1523 12 view .LVU478
 1729 004a AA42     		cmp	r2, r5
 1730 004c 24D0     		beq	.L129
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1731              		.loc 1 1464 13 view .LVU479
 1732 004e 0027     		movs	r7, #0
 1733              	.L122:
 1734              	.LVL129:
ARM GAS  /tmp/cc3EZotN.s 			page 130


1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1735              		.loc 1 1535 5 is_stmt 1 view .LVU480
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1736              		.loc 1 1540 5 view .LVU481
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1737              		.loc 1 1540 27 is_stmt 0 view .LVU482
 1738 0050 EE6A     		ldr	r6, [r5, #44]
 1739              	.LVL130:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1740              		.loc 1 1546 6 is_stmt 1 view .LVU483
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1741              		.loc 1 1546 8 is_stmt 0 view .LVU484
 1742 0052 B342     		cmp	r3, r6
 1743 0054 22D0     		beq	.L132
 1744              	.L123:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1745              		.loc 1 1552 31 is_stmt 1 view .LVU485
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1746              		.loc 1 1556 6 view .LVU486
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1747              		.loc 1 1556 28 is_stmt 0 view .LVU487
 1748 0056 6C65     		str	r4, [r5, #84]
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1749              		.loc 1 1566 5 is_stmt 1 view .LVU488
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1750              		.loc 1 1566 11 is_stmt 0 view .LVU489
 1751 0058 AB69     		ldr	r3, [r5, #24]
 1752              	.LVL131:
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1753              		.loc 1 1566 7 view .LVU490
 1754 005a 002B     		cmp	r3, #0
 1755 005c 02DB     		blt	.L124
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1756              		.loc 1 1568 6 is_stmt 1 view .LVU491
 1757 005e C4F10704 		rsb	r4, r4, #7
 1758              	.LVL132:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1759              		.loc 1 1568 6 is_stmt 0 view .LVU492
 1760 0062 AC61     		str	r4, [r5, #24]
 1761              	.L124:
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1762              		.loc 1 1572 30 is_stmt 1 view .LVU493
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1763              		.loc 1 1579 5 view .LVU494
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1764              		.loc 1 1579 9 is_stmt 0 view .LVU495
 1765 0064 6969     		ldr	r1, [r5, #20]
 1766 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1767 006a 1C4B     		ldr	r3, .L134+4
 1768 006c 03EB8203 		add	r3, r3, r2, lsl #2
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1769              		.loc 1 1579 112 view .LVU496
 1770 0070 9942     		cmp	r1, r3
 1771 0072 15D0     		beq	.L133
 1772              	.LVL133:
 1773              	.L125:
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc3EZotN.s 			page 131


 1774              		.loc 1 1599 30 is_stmt 1 view .LVU497
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1775              		.loc 1 1602 5 view .LVU498
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1776              		.loc 1 1602 7 is_stmt 0 view .LVU499
 1777 0074 4FB1     		cbz	r7, .L120
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1778              		.loc 1 1604 6 is_stmt 1 view .LVU500
 1779 0076 4FF0E023 		mov	r3, #-536813568
 1780 007a 4FF08052 		mov	r2, #268435456
 1781 007e C3F8042D 		str	r2, [r3, #3332]
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1782              		.loc 1 1604 6 view .LVU501
 1783              		.syntax unified
 1784              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1785 0082 BFF34F8F 		dsb
 1786              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1787              		.loc 1 1604 6 view .LVU502
 1788              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1789 0086 BFF36F8F 		isb
 1790              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1791              		.loc 1 1604 37 view .LVU503
 1792              	.LVL134:
 1793              		.thumb
 1794              		.syntax unified
 1795              	.L120:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1796              		.loc 1 1608 30 view .LVU504
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1797              		.loc 1 1613 5 view .LVU505
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1798              		.loc 1 1616 3 view .LVU506
 1799 008a FFF7FEFF 		bl	vPortExitCritical
 1800              	.LVL135:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1801              		.loc 1 1617 2 is_stmt 0 view .LVU507
 1802 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1803              	.LVL136:
 1804              	.L127:
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1805              		.loc 1 1464 13 view .LVU508
 1806 0090 0027     		movs	r7, #0
 1807 0092 DDE7     		b	.L122
 1808              	.L128:
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1809              		.loc 1 1509 23 view .LVU509
 1810 0094 0127     		movs	r7, #1
 1811 0096 DBE7     		b	.L122
 1812              	.L129:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1813              		.loc 1 1528 21 view .LVU510
 1814 0098 0127     		movs	r7, #1
 1815 009a D9E7     		b	.L122
 1816              	.LVL137:
 1817              	.L132:
ARM GAS  /tmp/cc3EZotN.s 			page 132


1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1818              		.loc 1 1548 7 is_stmt 1 view .LVU511
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1819              		.loc 1 1548 25 is_stmt 0 view .LVU512
 1820 009c EC62     		str	r4, [r5, #44]
 1821 009e DAE7     		b	.L123
 1822              	.LVL138:
 1823              	.L133:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1824              		.loc 1 1584 6 is_stmt 1 view .LVU513
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1825              		.loc 1 1584 10 is_stmt 0 view .LVU514
 1826 00a0 2C1D     		adds	r4, r5, #4
 1827 00a2 2046     		mov	r0, r4
 1828 00a4 FFF7FEFF 		bl	uxListRemove
 1829              	.LVL139:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1830              		.loc 1 1584 8 view .LVU515
 1831 00a8 30B9     		cbnz	r0, .L126
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1832              		.loc 1 1589 7 is_stmt 1 view .LVU516
 1833 00aa 0122     		movs	r2, #1
 1834 00ac B240     		lsls	r2, r2, r6
 1835 00ae 0C49     		ldr	r1, .L134+8
 1836 00b0 0B68     		ldr	r3, [r1]
 1837 00b2 23EA0203 		bic	r3, r3, r2
 1838 00b6 0B60     		str	r3, [r1]
 1839              	.L126:
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1840              		.loc 1 1593 31 view .LVU517
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1841              		.loc 1 1595 6 view .LVU518
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1842              		.loc 1 1595 6 view .LVU519
 1843 00b8 E86A     		ldr	r0, [r5, #44]
 1844 00ba 0123     		movs	r3, #1
 1845 00bc 8340     		lsls	r3, r3, r0
 1846 00be 084A     		ldr	r2, .L134+8
 1847 00c0 1168     		ldr	r1, [r2]
 1848 00c2 0B43     		orrs	r3, r3, r1
 1849 00c4 1360     		str	r3, [r2]
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1850              		.loc 1 1595 6 view .LVU520
 1851 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1852 00ca 2146     		mov	r1, r4
 1853 00cc 034B     		ldr	r3, .L134+4
 1854 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1855 00d2 FFF7FEFF 		bl	vListInsertEnd
 1856              	.LVL140:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1857              		.loc 1 1595 36 view .LVU521
 1858 00d6 CDE7     		b	.L125
 1859              	.L135:
 1860              		.align	2
 1861              	.L134:
 1862 00d8 00000000 		.word	.LANCHOR10
 1863 00dc 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cc3EZotN.s 			page 133


 1864 00e0 00000000 		.word	.LANCHOR13
 1865              		.cfi_endproc
 1866              	.LFE13:
 1868              		.section	.text.vTaskResume,"ax",%progbits
 1869              		.align	1
 1870              		.global	vTaskResume
 1871              		.syntax unified
 1872              		.thumb
 1873              		.thumb_func
 1875              	vTaskResume:
 1876              	.LVL141:
 1877              	.LFB16:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1878              		.loc 1 1772 2 view -0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1882              		.loc 1 1772 2 is_stmt 0 view .LVU523
 1883 0000 38B5     		push	{r3, r4, r5, lr}
 1884              	.LCFI19:
 1885              		.cfi_def_cfa_offset 16
 1886              		.cfi_offset 3, -16
 1887              		.cfi_offset 4, -12
 1888              		.cfi_offset 5, -8
 1889              		.cfi_offset 14, -4
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1890              		.loc 1 1773 2 is_stmt 1 view .LVU524
 1891              	.LVL142:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1892              		.loc 1 1776 3 view .LVU525
 1893 0002 68B1     		cbz	r0, .L142
 1894 0004 0446     		mov	r4, r0
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1895              		.loc 1 1776 32 discriminator 1 view .LVU526
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1896              		.loc 1 1780 3 discriminator 1 view .LVU527
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1897              		.loc 1 1780 36 is_stmt 0 discriminator 1 view .LVU528
 1898 0006 1D4B     		ldr	r3, .L144
 1899 0008 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1900              		.loc 1 1780 25 discriminator 1 view .LVU529
 1901 000a 8342     		cmp	r3, r0
 1902 000c 07D0     		beq	.L136
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1903              		.loc 1 1782 4 is_stmt 1 view .LVU530
 1904 000e FFF7FEFF 		bl	vPortEnterCritical
 1905              	.LVL143:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1906              		.loc 1 1784 5 view .LVU531
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1907              		.loc 1 1784 9 is_stmt 0 view .LVU532
 1908 0012 2046     		mov	r0, r4
 1909 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1910              	.LVL144:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc3EZotN.s 			page 134


 1911              		.loc 1 1784 7 view .LVU533
 1912 0018 58B9     		cbnz	r0, .L143
 1913              	.L140:
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1914              		.loc 1 1808 30 is_stmt 1 view .LVU534
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1915              		.loc 1 1811 4 view .LVU535
 1916 001a FFF7FEFF 		bl	vPortExitCritical
 1917              	.LVL145:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1918              		.loc 1 1815 28 view .LVU536
 1919              	.L136:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1920              		.loc 1 1817 2 is_stmt 0 view .LVU537
 1921 001e 38BD     		pop	{r3, r4, r5, pc}
 1922              	.LVL146:
 1923              	.L142:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1924              		.loc 1 1776 3 is_stmt 1 view .LVU538
 1925              	.LBB128:
 1926              	.LBI128:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1927              		.loc 2 191 30 view .LVU539
 1928              	.LBB129:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1929              		.loc 2 193 1 view .LVU540
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1930              		.loc 2 195 2 view .LVU541
 1931              		.syntax unified
 1932              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1933 0020 4FF05003 			mov r3, #80												
 1934 0024 83F31188 		msr basepri, r3											
 1935 0028 BFF36F8F 		isb														
 1936 002c BFF34F8F 		dsb														
 1937              	
 1938              	@ 0 "" 2
 1939              	.LVL147:
 1940              		.thumb
 1941              		.syntax unified
 1942              	.L138:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1943              		.loc 2 195 2 is_stmt 0 view .LVU542
 1944              	.LBE129:
 1945              	.LBE128:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1946              		.loc 1 1776 3 is_stmt 1 discriminator 1 view .LVU543
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1947              		.loc 1 1776 3 discriminator 1 view .LVU544
 1948 0030 FEE7     		b	.L138
 1949              	.LVL148:
 1950              	.L143:
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1951              		.loc 1 1786 31 view .LVU545
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1952              		.loc 1 1790 6 view .LVU546
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1953              		.loc 1 1790 15 is_stmt 0 view .LVU547
ARM GAS  /tmp/cc3EZotN.s 			page 135


 1954 0032 251D     		adds	r5, r4, #4
 1955 0034 2846     		mov	r0, r5
 1956 0036 FFF7FEFF 		bl	uxListRemove
 1957              	.LVL149:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1958              		.loc 1 1791 6 is_stmt 1 view .LVU548
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1959              		.loc 1 1791 6 view .LVU549
 1960 003a E06A     		ldr	r0, [r4, #44]
 1961 003c 0123     		movs	r3, #1
 1962 003e 8340     		lsls	r3, r3, r0
 1963 0040 0F4A     		ldr	r2, .L144+4
 1964 0042 1168     		ldr	r1, [r2]
 1965 0044 0B43     		orrs	r3, r3, r1
 1966 0046 1360     		str	r3, [r2]
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1967              		.loc 1 1791 6 view .LVU550
 1968 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1969 004c 2946     		mov	r1, r5
 1970 004e 0D4B     		ldr	r3, .L144+8
 1971 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1972 0054 FFF7FEFF 		bl	vListInsertEnd
 1973              	.LVL150:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1974              		.loc 1 1791 36 view .LVU551
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1975              		.loc 1 1794 6 view .LVU552
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1976              		.loc 1 1794 15 is_stmt 0 view .LVU553
 1977 0058 E26A     		ldr	r2, [r4, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1978              		.loc 1 1794 43 view .LVU554
 1979 005a 084B     		ldr	r3, .L144
 1980 005c 1B68     		ldr	r3, [r3]
 1981 005e DB6A     		ldr	r3, [r3, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1982              		.loc 1 1794 8 view .LVU555
 1983 0060 9A42     		cmp	r2, r3
 1984 0062 DAD3     		bcc	.L140
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1985              		.loc 1 1799 7 is_stmt 1 view .LVU556
 1986 0064 4FF0E023 		mov	r3, #-536813568
 1987 0068 4FF08052 		mov	r2, #268435456
 1988 006c C3F8042D 		str	r2, [r3, #3332]
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1989              		.loc 1 1799 7 view .LVU557
 1990              		.syntax unified
 1991              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1992 0070 BFF34F8F 		dsb
 1993              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1994              		.loc 1 1799 7 view .LVU558
 1995              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1996 0074 BFF36F8F 		isb
 1997              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1998              		.loc 1 1799 38 view .LVU559
ARM GAS  /tmp/cc3EZotN.s 			page 136


 1999              		.thumb
 2000              		.syntax unified
 2001 0078 CFE7     		b	.L140
 2002              	.L145:
 2003 007a 00BF     		.align	2
 2004              	.L144:
 2005 007c 00000000 		.word	.LANCHOR10
 2006 0080 00000000 		.word	.LANCHOR13
 2007 0084 00000000 		.word	.LANCHOR4
 2008              		.cfi_endproc
 2009              	.LFE16:
 2011              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2012              		.align	1
 2013              		.global	xTaskResumeFromISR
 2014              		.syntax unified
 2015              		.thumb
 2016              		.thumb_func
 2018              	xTaskResumeFromISR:
 2019              	.LVL151:
 2020              	.LFB17:
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2021              		.loc 1 1826 2 view -0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2025              		.loc 1 1826 2 is_stmt 0 view .LVU561
 2026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2027              	.LCFI20:
 2028              		.cfi_def_cfa_offset 24
 2029              		.cfi_offset 3, -24
 2030              		.cfi_offset 4, -20
 2031              		.cfi_offset 5, -16
 2032              		.cfi_offset 6, -12
 2033              		.cfi_offset 7, -8
 2034              		.cfi_offset 14, -4
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2035              		.loc 1 1827 2 is_stmt 1 view .LVU562
 2036              	.LVL152:
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2037              		.loc 1 1828 2 view .LVU563
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2038              		.loc 1 1829 2 view .LVU564
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2039              		.loc 1 1831 3 view .LVU565
 2040 0002 90B3     		cbz	r0, .L154
 2041 0004 0546     		mov	r5, r0
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2042              		.loc 1 1831 32 discriminator 2 view .LVU566
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2043              		.loc 1 1849 3 discriminator 2 view .LVU567
 2044 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2045              	.LVL153:
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2046              		.loc 1 1851 3 discriminator 2 view .LVU568
 2047              	.LBB130:
 2048              	.LBI130:
ARM GAS  /tmp/cc3EZotN.s 			page 137


 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2049              		.loc 2 207 34 discriminator 2 view .LVU569
 2050              	.LBB131:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2051              		.loc 2 209 1 discriminator 2 view .LVU570
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2052              		.loc 2 211 2 discriminator 2 view .LVU571
 2053              		.syntax unified
 2054              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2055 000a EFF31184 			mrs r4, basepri											
 2056 000e 4FF05003 		mov r3, #80												
 2057 0012 83F31188 		msr basepri, r3											
 2058 0016 BFF36F8F 		isb														
 2059 001a BFF34F8F 		dsb														
 2060              	
 2061              	@ 0 "" 2
 2062              	.LVL154:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2063              		.loc 2 223 2 discriminator 2 view .LVU572
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2064              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU573
 2065              		.thumb
 2066              		.syntax unified
 2067              	.LBE131:
 2068              	.LBE130:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2069              		.loc 1 1853 4 is_stmt 1 discriminator 2 view .LVU574
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2070              		.loc 1 1853 8 is_stmt 0 discriminator 2 view .LVU575
 2071 001e 2846     		mov	r0, r5
 2072 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2073              	.LVL155:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2074              		.loc 1 1853 6 discriminator 2 view .LVU576
 2075 0024 0646     		mov	r6, r0
 2076 0026 E0B1     		cbz	r0, .L149
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2077              		.loc 1 1855 39 is_stmt 1 view .LVU577
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2078              		.loc 1 1858 5 view .LVU578
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2079              		.loc 1 1858 30 is_stmt 0 view .LVU579
 2080 0028 194B     		ldr	r3, .L155
 2081 002a 1B68     		ldr	r3, [r3]
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2082              		.loc 1 1858 7 view .LVU580
 2083 002c 43BB     		cbnz	r3, .L150
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2084              		.loc 1 1862 6 is_stmt 1 view .LVU581
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2085              		.loc 1 1862 15 is_stmt 0 view .LVU582
 2086 002e EA6A     		ldr	r2, [r5, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2087              		.loc 1 1862 43 view .LVU583
 2088 0030 184B     		ldr	r3, .L155+4
 2089 0032 1B68     		ldr	r3, [r3]
 2090 0034 DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cc3EZotN.s 			page 138


1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2091              		.loc 1 1862 8 view .LVU584
 2092 0036 9A42     		cmp	r2, r3
 2093 0038 20D2     		bcs	.L152
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2094              		.loc 1 1827 13 view .LVU585
 2095 003a 0026     		movs	r6, #0
 2096              	.L151:
 2097              	.LVL156:
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2098              		.loc 1 1868 31 is_stmt 1 view .LVU586
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2099              		.loc 1 1871 6 view .LVU587
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2100              		.loc 1 1871 15 is_stmt 0 view .LVU588
 2101 003c 2F1D     		adds	r7, r5, #4
 2102 003e 3846     		mov	r0, r7
 2103 0040 FFF7FEFF 		bl	uxListRemove
 2104              	.LVL157:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2105              		.loc 1 1872 6 is_stmt 1 view .LVU589
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2106              		.loc 1 1872 6 view .LVU590
 2107 0044 E86A     		ldr	r0, [r5, #44]
 2108 0046 0123     		movs	r3, #1
 2109 0048 8340     		lsls	r3, r3, r0
 2110 004a 134A     		ldr	r2, .L155+8
 2111 004c 1168     		ldr	r1, [r2]
 2112 004e 0B43     		orrs	r3, r3, r1
 2113 0050 1360     		str	r3, [r2]
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2114              		.loc 1 1872 6 view .LVU591
 2115 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2116 0056 3946     		mov	r1, r7
 2117 0058 104B     		ldr	r3, .L155+12
 2118 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2119 005e FFF7FEFF 		bl	vListInsertEnd
 2120              	.LVL158:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2121              		.loc 1 1872 36 view .LVU592
 2122              	.L149:
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2123              		.loc 1 1884 29 view .LVU593
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2124              		.loc 1 1887 3 view .LVU594
 2125              	.LBB132:
 2126              	.LBI132:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2127              		.loc 2 227 30 view .LVU595
 2128              	.LBB133:
 2129              		.loc 2 229 2 view .LVU596
 2130              		.syntax unified
 2131              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2132 0062 84F31188 			msr basepri, r4	
 2133              	@ 0 "" 2
 2134              		.thumb
 2135              		.syntax unified
ARM GAS  /tmp/cc3EZotN.s 			page 139


 2136              	.LBE133:
 2137              	.LBE132:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2138              		.loc 1 1889 3 view .LVU597
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2139              		.loc 1 1890 2 is_stmt 0 view .LVU598
 2140 0066 3046     		mov	r0, r6
 2141 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2142              	.LVL159:
 2143              	.L154:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2144              		.loc 1 1831 3 is_stmt 1 view .LVU599
 2145              	.LBB134:
 2146              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2147              		.loc 2 191 30 view .LVU600
 2148              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2149              		.loc 2 193 1 view .LVU601
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2150              		.loc 2 195 2 view .LVU602
 2151              		.syntax unified
 2152              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2153 006a 4FF05003 			mov r3, #80												
 2154 006e 83F31188 		msr basepri, r3											
 2155 0072 BFF36F8F 		isb														
 2156 0076 BFF34F8F 		dsb														
 2157              	
 2158              	@ 0 "" 2
 2159              	.LVL160:
 2160              		.thumb
 2161              		.syntax unified
 2162              	.L148:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2163              		.loc 2 195 2 is_stmt 0 view .LVU603
 2164              	.LBE135:
 2165              	.LBE134:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2166              		.loc 1 1831 3 is_stmt 1 discriminator 1 view .LVU604
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2167              		.loc 1 1831 3 discriminator 1 view .LVU605
 2168 007a FEE7     		b	.L148
 2169              	.LVL161:
 2170              	.L152:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2171              		.loc 1 1864 22 is_stmt 0 view .LVU606
 2172 007c 0126     		movs	r6, #1
 2173 007e DDE7     		b	.L151
 2174              	.L150:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2175              		.loc 1 1879 6 is_stmt 1 view .LVU607
 2176 0080 05F11801 		add	r1, r5, #24
 2177 0084 0648     		ldr	r0, .L155+16
 2178 0086 FFF7FEFF 		bl	vListInsertEnd
 2179              	.LVL162:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2180              		.loc 1 1827 13 is_stmt 0 view .LVU608
ARM GAS  /tmp/cc3EZotN.s 			page 140


 2181 008a 0026     		movs	r6, #0
 2182 008c E9E7     		b	.L149
 2183              	.L156:
 2184 008e 00BF     		.align	2
 2185              	.L155:
 2186 0090 00000000 		.word	.LANCHOR16
 2187 0094 00000000 		.word	.LANCHOR10
 2188 0098 00000000 		.word	.LANCHOR13
 2189 009c 00000000 		.word	.LANCHOR4
 2190 00a0 00000000 		.word	.LANCHOR1
 2191              		.cfi_endproc
 2192              	.LFE17:
 2194              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2195              		.align	2
 2196              	.LC0:
 2197 0000 49444C45 		.ascii	"IDLE\000"
 2197      00
 2198              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2199              		.align	1
 2200              		.global	vTaskStartScheduler
 2201              		.syntax unified
 2202              		.thumb
 2203              		.thumb_func
 2205              	vTaskStartScheduler:
 2206              	.LFB18:
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2207              		.loc 1 1896 1 is_stmt 1 view -0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 16
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211 0000 10B5     		push	{r4, lr}
 2212              	.LCFI21:
 2213              		.cfi_def_cfa_offset 8
 2214              		.cfi_offset 4, -8
 2215              		.cfi_offset 14, -4
 2216 0002 88B0     		sub	sp, sp, #32
 2217              	.LCFI22:
 2218              		.cfi_def_cfa_offset 40
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2219              		.loc 1 1897 1 view .LVU610
 2220              	.LBB136:
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2221              		.loc 1 1902 3 view .LVU611
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2222              		.loc 1 1902 17 is_stmt 0 view .LVU612
 2223 0004 0024     		movs	r4, #0
 2224 0006 0594     		str	r4, [sp, #20]
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2225              		.loc 1 1903 3 is_stmt 1 view .LVU613
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2226              		.loc 1 1903 16 is_stmt 0 view .LVU614
 2227 0008 0694     		str	r4, [sp, #24]
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2228              		.loc 1 1904 3 is_stmt 1 view .LVU615
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2229              		.loc 1 1908 3 view .LVU616
 2230 000a 07AA     		add	r2, sp, #28
ARM GAS  /tmp/cc3EZotN.s 			page 141


 2231 000c 06A9     		add	r1, sp, #24
 2232 000e 05A8     		add	r0, sp, #20
 2233 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2234              	.LVL163:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2235              		.loc 1 1909 3 view .LVU617
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2236              		.loc 1 1909 21 is_stmt 0 view .LVU618
 2237 0014 059B     		ldr	r3, [sp, #20]
 2238 0016 0293     		str	r3, [sp, #8]
 2239 0018 069B     		ldr	r3, [sp, #24]
 2240 001a 0193     		str	r3, [sp, #4]
 2241 001c 0094     		str	r4, [sp]
 2242 001e 2346     		mov	r3, r4
 2243 0020 079A     		ldr	r2, [sp, #28]
 2244 0022 1049     		ldr	r1, .L161
 2245 0024 1048     		ldr	r0, .L161+4
 2246 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2247              	.LVL164:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2248              		.loc 1 1909 19 view .LVU619
 2249 002a 104B     		ldr	r3, .L161+8
 2250 002c 1860     		str	r0, [r3]
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2251              		.loc 1 1917 3 is_stmt 1 view .LVU620
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2252              		.loc 1 1917 5 is_stmt 0 view .LVU621
 2253 002e B8B1     		cbz	r0, .L157
 2254              	.LVL165:
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2255              		.loc 1 1917 5 view .LVU622
 2256              	.LBE136:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2257              		.loc 1 1951 2 is_stmt 1 view .LVU623
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2258              		.loc 1 1967 3 view .LVU624
 2259              	.LBB137:
 2260              	.LBI137:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2261              		.loc 2 191 30 view .LVU625
 2262              	.LBB138:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2263              		.loc 2 193 1 view .LVU626
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2264              		.loc 2 195 2 view .LVU627
 2265              		.syntax unified
 2266              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2267 0030 4FF05003 			mov r3, #80												
 2268 0034 83F31188 		msr basepri, r3											
 2269 0038 BFF36F8F 		isb														
 2270 003c BFF34F8F 		dsb														
 2271              	
 2272              	@ 0 "" 2
 2273              		.thumb
 2274              		.syntax unified
 2275              	.LBE138:
 2276              	.LBE137:
ARM GAS  /tmp/cc3EZotN.s 			page 142


1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2277              		.loc 1 1973 4 view .LVU628
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2278              		.loc 1 1973 33 is_stmt 0 view .LVU629
 2279 0040 0B4B     		ldr	r3, .L161+12
 2280 0042 1B68     		ldr	r3, [r3]
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2281              		.loc 1 1973 18 view .LVU630
 2282 0044 6033     		adds	r3, r3, #96
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2283              		.loc 1 1973 16 view .LVU631
 2284 0046 0B4A     		ldr	r2, .L161+16
 2285 0048 1360     		str	r3, [r2]
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2286              		.loc 1 1977 3 is_stmt 1 view .LVU632
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2287              		.loc 1 1977 24 is_stmt 0 view .LVU633
 2288 004a 0B4B     		ldr	r3, .L161+20
 2289 004c 4FF0FF32 		mov	r2, #-1
 2290 0050 1A60     		str	r2, [r3]
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2291              		.loc 1 1978 3 is_stmt 1 view .LVU634
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2292              		.loc 1 1978 21 is_stmt 0 view .LVU635
 2293 0052 0A4B     		ldr	r3, .L161+24
 2294 0054 0122     		movs	r2, #1
 2295 0056 1A60     		str	r2, [r3]
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2296              		.loc 1 1979 3 is_stmt 1 view .LVU636
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2297              		.loc 1 1979 14 is_stmt 0 view .LVU637
 2298 0058 094B     		ldr	r3, .L161+28
 2299 005a 1C60     		str	r4, [r3]
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2300              		.loc 1 1987 43 is_stmt 1 view .LVU638
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2301              		.loc 1 1991 3 view .LVU639
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2302              		.loc 1 1991 7 is_stmt 0 view .LVU640
 2303 005c FFF7FEFF 		bl	xPortStartScheduler
 2304              	.LVL166:
 2305              	.L157:
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2306              		.loc 1 2012 1 view .LVU641
 2307 0060 08B0     		add	sp, sp, #32
 2308              	.LCFI23:
 2309              		.cfi_def_cfa_offset 8
 2310              		@ sp needed
 2311 0062 10BD     		pop	{r4, pc}
 2312              	.L162:
 2313              		.align	2
 2314              	.L161:
 2315 0064 00000000 		.word	.LC0
 2316 0068 00000000 		.word	prvIdleTask
 2317 006c 00000000 		.word	.LANCHOR17
 2318 0070 00000000 		.word	.LANCHOR10
 2319 0074 00000000 		.word	_impure_ptr
ARM GAS  /tmp/cc3EZotN.s 			page 143


 2320 0078 00000000 		.word	.LANCHOR3
 2321 007c 00000000 		.word	.LANCHOR11
 2322 0080 00000000 		.word	.LANCHOR15
 2323              		.cfi_endproc
 2324              	.LFE18:
 2326              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2327              		.align	1
 2328              		.global	vTaskEndScheduler
 2329              		.syntax unified
 2330              		.thumb
 2331              		.thumb_func
 2333              	vTaskEndScheduler:
 2334              	.LFB19:
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2335              		.loc 1 2016 1 is_stmt 1 view -0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 0
 2338              		@ frame_needed = 0, uses_anonymous_args = 0
 2339 0000 08B5     		push	{r3, lr}
 2340              	.LCFI24:
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 3, -8
 2343              		.cfi_offset 14, -4
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2344              		.loc 1 2020 2 view .LVU643
 2345              	.LBB139:
 2346              	.LBI139:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2347              		.loc 2 191 30 view .LVU644
 2348              	.LBB140:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2349              		.loc 2 193 1 view .LVU645
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2350              		.loc 2 195 2 view .LVU646
 2351              		.syntax unified
 2352              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2353 0002 4FF05003 			mov r3, #80												
 2354 0006 83F31188 		msr basepri, r3											
 2355 000a BFF36F8F 		isb														
 2356 000e BFF34F8F 		dsb														
 2357              	
 2358              	@ 0 "" 2
 2359              		.thumb
 2360              		.syntax unified
 2361              	.LBE140:
 2362              	.LBE139:
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2363              		.loc 1 2021 2 view .LVU647
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2364              		.loc 1 2021 20 is_stmt 0 view .LVU648
 2365 0012 034B     		ldr	r3, .L165
 2366 0014 0022     		movs	r2, #0
 2367 0016 1A60     		str	r2, [r3]
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2368              		.loc 1 2022 2 is_stmt 1 view .LVU649
 2369 0018 FFF7FEFF 		bl	vPortEndScheduler
 2370              	.LVL167:
ARM GAS  /tmp/cc3EZotN.s 			page 144


2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2371              		.loc 1 2023 1 is_stmt 0 view .LVU650
 2372 001c 08BD     		pop	{r3, pc}
 2373              	.L166:
 2374 001e 00BF     		.align	2
 2375              	.L165:
 2376 0020 00000000 		.word	.LANCHOR11
 2377              		.cfi_endproc
 2378              	.LFE19:
 2380              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2381              		.align	1
 2382              		.global	vTaskSuspendAll
 2383              		.syntax unified
 2384              		.thumb
 2385              		.thumb_func
 2387              	vTaskSuspendAll:
 2388              	.LFB20:
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2389              		.loc 1 2027 1 is_stmt 1 view -0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              		@ link register save eliminated.
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2394              		.loc 1 2032 2 view .LVU652
 2395 0000 024A     		ldr	r2, .L168
 2396 0002 1368     		ldr	r3, [r2]
 2397 0004 0133     		adds	r3, r3, #1
 2398 0006 1360     		str	r3, [r2]
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2399              		.loc 1 2033 1 is_stmt 0 view .LVU653
 2400 0008 7047     		bx	lr
 2401              	.L169:
 2402 000a 00BF     		.align	2
 2403              	.L168:
 2404 000c 00000000 		.word	.LANCHOR16
 2405              		.cfi_endproc
 2406              	.LFE20:
 2408              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2409              		.align	1
 2410              		.global	xTaskGetTickCount
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2415              	xTaskGetTickCount:
 2416              	.LFB22:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2417              		.loc 1 2210 1 is_stmt 1 view -0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              		@ link register save eliminated.
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2422              		.loc 1 2211 1 view .LVU655
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2423              		.loc 1 2214 32 view .LVU656
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc3EZotN.s 			page 145


 2424              		.loc 1 2216 3 view .LVU657
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2425              		.loc 1 2216 10 is_stmt 0 view .LVU658
 2426 0000 014B     		ldr	r3, .L171
 2427 0002 1868     		ldr	r0, [r3]
 2428              	.LVL168:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2429              		.loc 1 2218 31 is_stmt 1 view .LVU659
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2430              		.loc 1 2220 2 view .LVU660
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2431              		.loc 1 2221 1 is_stmt 0 view .LVU661
 2432 0004 7047     		bx	lr
 2433              	.L172:
 2434 0006 00BF     		.align	2
 2435              	.L171:
 2436 0008 00000000 		.word	.LANCHOR15
 2437              		.cfi_endproc
 2438              	.LFE22:
 2440              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2441              		.align	1
 2442              		.global	xTaskGetTickCountFromISR
 2443              		.syntax unified
 2444              		.thumb
 2445              		.thumb_func
 2447              	xTaskGetTickCountFromISR:
 2448              	.LFB23:
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2449              		.loc 1 2225 1 is_stmt 1 view -0
 2450              		.cfi_startproc
 2451              		@ args = 0, pretend = 0, frame = 0
 2452              		@ frame_needed = 0, uses_anonymous_args = 0
 2453 0000 08B5     		push	{r3, lr}
 2454              	.LCFI25:
 2455              		.cfi_def_cfa_offset 8
 2456              		.cfi_offset 3, -8
 2457              		.cfi_offset 14, -4
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2458              		.loc 1 2226 1 view .LVU663
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2459              		.loc 1 2227 1 view .LVU664
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2460              		.loc 1 2243 2 view .LVU665
 2461 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2462              	.LVL169:
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2463              		.loc 1 2245 2 view .LVU666
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2464              		.loc 1 2247 3 view .LVU667
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2465              		.loc 1 2247 11 is_stmt 0 view .LVU668
 2466 0006 014B     		ldr	r3, .L175
 2467 0008 1868     		ldr	r0, [r3]
 2468              	.LVL170:
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2469              		.loc 1 2249 2 is_stmt 1 view .LVU669
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cc3EZotN.s 			page 146


 2470              		.loc 1 2251 2 view .LVU670
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2471              		.loc 1 2252 1 is_stmt 0 view .LVU671
 2472 000a 08BD     		pop	{r3, pc}
 2473              	.L176:
 2474              		.align	2
 2475              	.L175:
 2476 000c 00000000 		.word	.LANCHOR15
 2477              		.cfi_endproc
 2478              	.LFE23:
 2480              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2481              		.align	1
 2482              		.global	uxTaskGetNumberOfTasks
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2487              	uxTaskGetNumberOfTasks:
 2488              	.LFB24:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2489              		.loc 1 2256 1 is_stmt 1 view -0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 0
 2492              		@ frame_needed = 0, uses_anonymous_args = 0
 2493              		@ link register save eliminated.
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2494              		.loc 1 2259 2 view .LVU673
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2495              		.loc 1 2259 9 is_stmt 0 view .LVU674
 2496 0000 014B     		ldr	r3, .L178
 2497 0002 1868     		ldr	r0, [r3]
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2498              		.loc 1 2260 1 view .LVU675
 2499 0004 7047     		bx	lr
 2500              	.L179:
 2501 0006 00BF     		.align	2
 2502              	.L178:
 2503 0008 00000000 		.word	.LANCHOR9
 2504              		.cfi_endproc
 2505              	.LFE24:
 2507              		.section	.text.pcTaskGetName,"ax",%progbits
 2508              		.align	1
 2509              		.global	pcTaskGetName
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2514              	pcTaskGetName:
 2515              	.LVL171:
 2516              	.LFB25:
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2517              		.loc 1 2264 1 is_stmt 1 view -0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 0
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 2521              		@ link register save eliminated.
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2522              		.loc 1 2265 1 view .LVU677
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
ARM GAS  /tmp/cc3EZotN.s 			page 147


 2523              		.loc 1 2269 2 view .LVU678
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2524              		.loc 1 2269 10 is_stmt 0 view .LVU679
 2525 0000 0346     		mov	r3, r0
 2526 0002 18B1     		cbz	r0, .L184
 2527              	.LVL172:
 2528              	.L181:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2529              		.loc 1 2270 2 is_stmt 1 discriminator 4 view .LVU680
 2530 0004 2BB1     		cbz	r3, .L185
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2531              		.loc 1 2270 23 discriminator 2 view .LVU681
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2532              		.loc 1 2271 2 discriminator 2 view .LVU682
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2533              		.loc 1 2272 1 is_stmt 0 discriminator 2 view .LVU683
 2534 0006 03F13400 		add	r0, r3, #52
 2535 000a 7047     		bx	lr
 2536              	.LVL173:
 2537              	.L184:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2538              		.loc 1 2269 10 discriminator 1 view .LVU684
 2539 000c 054B     		ldr	r3, .L186
 2540 000e 1B68     		ldr	r3, [r3]
 2541              	.LVL174:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2542              		.loc 1 2269 10 discriminator 1 view .LVU685
 2543 0010 F8E7     		b	.L181
 2544              	.LVL175:
 2545              	.L185:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2546              		.loc 1 2270 2 is_stmt 1 view .LVU686
 2547              	.LBB141:
 2548              	.LBI141:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2549              		.loc 2 191 30 view .LVU687
 2550              	.LBB142:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2551              		.loc 2 193 1 view .LVU688
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2552              		.loc 2 195 2 view .LVU689
 2553              		.syntax unified
 2554              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2555 0012 4FF05003 			mov r3, #80												
 2556 0016 83F31188 		msr basepri, r3											
 2557 001a BFF36F8F 		isb														
 2558 001e BFF34F8F 		dsb														
 2559              	
 2560              	@ 0 "" 2
 2561              	.LVL176:
 2562              		.thumb
 2563              		.syntax unified
 2564              	.L183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2565              		.loc 2 195 2 is_stmt 0 view .LVU690
 2566              	.LBE142:
 2567              	.LBE141:
ARM GAS  /tmp/cc3EZotN.s 			page 148


2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2568              		.loc 1 2270 2 is_stmt 1 discriminator 1 view .LVU691
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2569              		.loc 1 2270 2 discriminator 1 view .LVU692
 2570 0022 FEE7     		b	.L183
 2571              	.L187:
 2572              		.align	2
 2573              	.L186:
 2574 0024 00000000 		.word	.LANCHOR10
 2575              		.cfi_endproc
 2576              	.LFE25:
 2578              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2579              		.align	1
 2580              		.global	xTaskIncrementTick
 2581              		.syntax unified
 2582              		.thumb
 2583              		.thumb_func
 2585              	xTaskIncrementTick:
 2586              	.LFB26:
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2587              		.loc 1 2584 1 view -0
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 0
 2590              		@ frame_needed = 0, uses_anonymous_args = 0
 2591 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2592              	.LCFI26:
 2593              		.cfi_def_cfa_offset 24
 2594              		.cfi_offset 3, -24
 2595              		.cfi_offset 4, -20
 2596              		.cfi_offset 5, -16
 2597              		.cfi_offset 6, -12
 2598              		.cfi_offset 7, -8
 2599              		.cfi_offset 14, -4
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2600              		.loc 1 2585 1 view .LVU694
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2601              		.loc 1 2586 1 view .LVU695
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2602              		.loc 1 2587 1 view .LVU696
 2603              	.LVL177:
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2604              		.loc 1 2592 40 view .LVU697
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2605              		.loc 1 2593 2 view .LVU698
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2606              		.loc 1 2593 27 is_stmt 0 view .LVU699
 2607 0002 3A4B     		ldr	r3, .L209
 2608 0004 1B68     		ldr	r3, [r3]
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2609              		.loc 1 2593 4 view .LVU700
 2610 0006 002B     		cmp	r3, #0
 2611 0008 64D1     		bne	.L189
 2612              	.LBB143:
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2613              		.loc 1 2597 3 is_stmt 1 view .LVU701
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2614              		.loc 1 2597 49 is_stmt 0 view .LVU702
ARM GAS  /tmp/cc3EZotN.s 			page 149


 2615 000a 394B     		ldr	r3, .L209+4
 2616 000c 1D68     		ldr	r5, [r3]
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2617              		.loc 1 2597 20 view .LVU703
 2618 000e 0135     		adds	r5, r5, #1
 2619              	.LVL178:
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2620              		.loc 1 2601 3 is_stmt 1 view .LVU704
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2621              		.loc 1 2601 14 is_stmt 0 view .LVU705
 2622 0010 1D60     		str	r5, [r3]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2623              		.loc 1 2603 3 is_stmt 1 view .LVU706
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2624              		.loc 1 2603 5 is_stmt 0 view .LVU707
 2625 0012 C5B9     		cbnz	r5, .L190
 2626              	.LBB144:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2627              		.loc 1 2605 4 is_stmt 1 view .LVU708
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2628              		.loc 1 2605 4 view .LVU709
 2629 0014 374B     		ldr	r3, .L209+8
 2630 0016 1B68     		ldr	r3, [r3]
 2631 0018 1B68     		ldr	r3, [r3]
 2632 001a 43B1     		cbz	r3, .L191
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2633              		.loc 1 2605 4 view .LVU710
 2634              	.LBB145:
 2635              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2636              		.loc 2 191 30 view .LVU711
 2637              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2638              		.loc 2 193 1 view .LVU712
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2639              		.loc 2 195 2 view .LVU713
 2640              		.syntax unified
 2641              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2642 001c 4FF05003 			mov r3, #80												
 2643 0020 83F31188 		msr basepri, r3											
 2644 0024 BFF36F8F 		isb														
 2645 0028 BFF34F8F 		dsb														
 2646              	
 2647              	@ 0 "" 2
 2648              	.LVL179:
 2649              		.thumb
 2650              		.syntax unified
 2651              	.L192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2652              		.loc 2 195 2 is_stmt 0 view .LVU714
 2653              	.LBE146:
 2654              	.LBE145:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2655              		.loc 1 2605 4 is_stmt 1 discriminator 1 view .LVU715
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2656              		.loc 1 2605 4 discriminator 1 view .LVU716
 2657 002c FEE7     		b	.L192
ARM GAS  /tmp/cc3EZotN.s 			page 150


 2658              	.L191:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2659              		.loc 1 2605 4 discriminator 2 view .LVU717
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2660              		.loc 1 2605 4 discriminator 2 view .LVU718
 2661 002e 314A     		ldr	r2, .L209+8
 2662 0030 1168     		ldr	r1, [r2]
 2663              	.LVL180:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2664              		.loc 1 2605 4 discriminator 2 view .LVU719
 2665 0032 314B     		ldr	r3, .L209+12
 2666 0034 1868     		ldr	r0, [r3]
 2667 0036 1060     		str	r0, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2668              		.loc 1 2605 4 discriminator 2 view .LVU720
 2669 0038 1960     		str	r1, [r3]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2670              		.loc 1 2605 4 discriminator 2 view .LVU721
 2671 003a 304A     		ldr	r2, .L209+16
 2672 003c 1368     		ldr	r3, [r2]
 2673 003e 0133     		adds	r3, r3, #1
 2674 0040 1360     		str	r3, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2675              		.loc 1 2605 4 discriminator 2 view .LVU722
 2676 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2677              	.LVL181:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2678              		.loc 1 2605 4 is_stmt 0 discriminator 2 view .LVU723
 2679              	.LBE144:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2680              		.loc 1 2605 30 is_stmt 1 discriminator 2 view .LVU724
 2681              	.L190:
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2682              		.loc 1 2609 28 view .LVU725
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2683              		.loc 1 2616 3 view .LVU726
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2684              		.loc 1 2616 23 is_stmt 0 view .LVU727
 2685 0046 2E4B     		ldr	r3, .L209+20
 2686 0048 1B68     		ldr	r3, [r3]
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2687              		.loc 1 2616 5 view .LVU728
 2688 004a AB42     		cmp	r3, r5
 2689 004c 38D9     		bls	.L202
 2690              	.LBE143:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2691              		.loc 1 2587 12 view .LVU729
 2692 004e 0027     		movs	r7, #0
 2693              	.LVL182:
 2694              	.L194:
 2695              	.LBB147:
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2696              		.loc 1 2699 4 is_stmt 1 view .LVU730
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2697              		.loc 1 2699 8 is_stmt 0 view .LVU731
 2698 0050 2C4B     		ldr	r3, .L209+24
 2699 0052 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 151


 2700 0054 DB6A     		ldr	r3, [r3, #44]
 2701 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2702 005a 9A00     		lsls	r2, r3, #2
 2703 005c 2A4B     		ldr	r3, .L209+28
 2704 005e 9B58     		ldr	r3, [r3, r2]
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2705              		.loc 1 2699 6 view .LVU732
 2706 0060 012B     		cmp	r3, #1
 2707 0062 3CD9     		bls	.L200
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2708              		.loc 1 2701 21 view .LVU733
 2709 0064 0127     		movs	r7, #1
 2710              	.LVL183:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2711              		.loc 1 2701 21 view .LVU734
 2712 0066 3AE0     		b	.L200
 2713              	.LVL184:
 2714              	.L203:
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2715              		.loc 1 2682 24 view .LVU735
 2716 0068 0127     		movs	r7, #1
 2717              	.LVL185:
 2718              	.L193:
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2719              		.loc 1 2618 4 is_stmt 1 view .LVU736
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2720              		.loc 1 2620 5 view .LVU737
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2721              		.loc 1 2620 9 is_stmt 0 view .LVU738
 2722 006a 224B     		ldr	r3, .L209+8
 2723 006c 1B68     		ldr	r3, [r3]
 2724 006e 1B68     		ldr	r3, [r3]
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2725              		.loc 1 2620 48 view .LVU739
 2726 0070 43B3     		cbz	r3, .L207
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2727              		.loc 1 2636 6 is_stmt 1 view .LVU740
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2728              		.loc 1 2636 26 is_stmt 0 view .LVU741
 2729 0072 204B     		ldr	r3, .L209+8
 2730 0074 1B68     		ldr	r3, [r3]
 2731 0076 DB68     		ldr	r3, [r3, #12]
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2732              		.loc 1 2636 12 view .LVU742
 2733 0078 DC68     		ldr	r4, [r3, #12]
 2734              	.LVL186:
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2735              		.loc 1 2637 6 is_stmt 1 view .LVU743
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2736              		.loc 1 2637 17 is_stmt 0 view .LVU744
 2737 007a 6368     		ldr	r3, [r4, #4]
 2738              	.LVL187:
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2739              		.loc 1 2639 6 is_stmt 1 view .LVU745
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2740              		.loc 1 2639 8 is_stmt 0 view .LVU746
 2741 007c 9D42     		cmp	r5, r3
ARM GAS  /tmp/cc3EZotN.s 			page 152


 2742 007e 26D3     		bcc	.L208
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2743              		.loc 1 2651 31 is_stmt 1 view .LVU747
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2744              		.loc 1 2655 6 view .LVU748
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2745              		.loc 1 2655 15 is_stmt 0 view .LVU749
 2746 0080 261D     		adds	r6, r4, #4
 2747 0082 3046     		mov	r0, r6
 2748 0084 FFF7FEFF 		bl	uxListRemove
 2749              	.LVL188:
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2750              		.loc 1 2659 6 is_stmt 1 view .LVU750
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2751              		.loc 1 2659 10 is_stmt 0 view .LVU751
 2752 0088 A36A     		ldr	r3, [r4, #40]
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2753              		.loc 1 2659 8 view .LVU752
 2754 008a 1BB1     		cbz	r3, .L197
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2755              		.loc 1 2661 7 is_stmt 1 view .LVU753
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2756              		.loc 1 2661 16 is_stmt 0 view .LVU754
 2757 008c 04F11800 		add	r0, r4, #24
 2758 0090 FFF7FEFF 		bl	uxListRemove
 2759              	.LVL189:
 2760              	.L197:
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2761              		.loc 1 2665 31 is_stmt 1 view .LVU755
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2762              		.loc 1 2670 6 view .LVU756
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2763              		.loc 1 2670 6 view .LVU757
 2764 0094 E36A     		ldr	r3, [r4, #44]
 2765 0096 0122     		movs	r2, #1
 2766 0098 9A40     		lsls	r2, r2, r3
 2767 009a 1C49     		ldr	r1, .L209+32
 2768 009c 0868     		ldr	r0, [r1]
 2769 009e 0243     		orrs	r2, r2, r0
 2770 00a0 0A60     		str	r2, [r1]
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2771              		.loc 1 2670 6 view .LVU758
 2772 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2773 00a6 9A00     		lsls	r2, r3, #2
 2774 00a8 3146     		mov	r1, r6
 2775 00aa 1748     		ldr	r0, .L209+28
 2776 00ac 1044     		add	r0, r0, r2
 2777 00ae FFF7FEFF 		bl	vListInsertEnd
 2778              	.LVL190:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2779              		.loc 1 2670 36 view .LVU759
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2780              		.loc 1 2680 7 view .LVU760
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2781              		.loc 1 2680 16 is_stmt 0 view .LVU761
 2782 00b2 E26A     		ldr	r2, [r4, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/cc3EZotN.s 			page 153


 2783              		.loc 1 2680 44 view .LVU762
 2784 00b4 134B     		ldr	r3, .L209+24
 2785 00b6 1B68     		ldr	r3, [r3]
 2786 00b8 DB6A     		ldr	r3, [r3, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2787              		.loc 1 2680 9 view .LVU763
 2788 00ba 9A42     		cmp	r2, r3
 2789 00bc D4D2     		bcs	.L203
 2790 00be D4E7     		b	.L193
 2791              	.LVL191:
 2792              	.L202:
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2793              		.loc 1 2680 9 view .LVU764
 2794              	.LBE147:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2795              		.loc 1 2587 12 view .LVU765
 2796 00c0 0027     		movs	r7, #0
 2797 00c2 D2E7     		b	.L193
 2798              	.LVL192:
 2799              	.L207:
 2800              	.LBB148:
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2801              		.loc 1 2627 6 is_stmt 1 view .LVU766
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2802              		.loc 1 2627 27 is_stmt 0 view .LVU767
 2803 00c4 0E4B     		ldr	r3, .L209+20
 2804 00c6 4FF0FF32 		mov	r2, #-1
 2805 00ca 1A60     		str	r2, [r3]
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2806              		.loc 1 2628 6 is_stmt 1 view .LVU768
 2807 00cc C0E7     		b	.L194
 2808              	.LVL193:
 2809              	.L208:
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2810              		.loc 1 2646 7 view .LVU769
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2811              		.loc 1 2646 28 is_stmt 0 view .LVU770
 2812 00ce 0C4A     		ldr	r2, .L209+20
 2813 00d0 1360     		str	r3, [r2]
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2814              		.loc 1 2647 7 is_stmt 1 view .LVU771
 2815 00d2 BDE7     		b	.L194
 2816              	.LVL194:
 2817              	.L189:
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2818              		.loc 1 2647 7 is_stmt 0 view .LVU772
 2819              	.LBE148:
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2820              		.loc 1 2727 3 is_stmt 1 view .LVU773
 2821 00d4 0E4A     		ldr	r2, .L209+36
 2822 00d6 1368     		ldr	r3, [r2]
 2823 00d8 0133     		adds	r3, r3, #1
 2824 00da 1360     		str	r3, [r2]
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2825              		.loc 1 2587 12 is_stmt 0 view .LVU774
 2826 00dc 0027     		movs	r7, #0
 2827              	.LVL195:
ARM GAS  /tmp/cc3EZotN.s 			page 154


 2828              	.L200:
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2829              		.loc 1 2740 3 is_stmt 1 view .LVU775
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2830              		.loc 1 2740 21 is_stmt 0 view .LVU776
 2831 00de 0D4B     		ldr	r3, .L209+40
 2832 00e0 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2833              		.loc 1 2740 5 view .LVU777
 2834 00e2 03B1     		cbz	r3, .L188
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2835              		.loc 1 2742 20 view .LVU778
 2836 00e4 0127     		movs	r7, #1
 2837              	.LVL196:
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2838              		.loc 1 2746 28 is_stmt 1 view .LVU779
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2839              		.loc 1 2751 2 view .LVU780
 2840              	.L188:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2841              		.loc 1 2752 1 is_stmt 0 view .LVU781
 2842 00e6 3846     		mov	r0, r7
 2843 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2844              	.L210:
 2845 00ea 00BF     		.align	2
 2846              	.L209:
 2847 00ec 00000000 		.word	.LANCHOR16
 2848 00f0 00000000 		.word	.LANCHOR15
 2849 00f4 00000000 		.word	.LANCHOR2
 2850 00f8 00000000 		.word	.LANCHOR8
 2851 00fc 00000000 		.word	.LANCHOR18
 2852 0100 00000000 		.word	.LANCHOR3
 2853 0104 00000000 		.word	.LANCHOR10
 2854 0108 00000000 		.word	.LANCHOR4
 2855 010c 00000000 		.word	.LANCHOR13
 2856 0110 00000000 		.word	.LANCHOR19
 2857 0114 00000000 		.word	.LANCHOR20
 2858              		.cfi_endproc
 2859              	.LFE26:
 2861              		.section	.text.xTaskResumeAll,"ax",%progbits
 2862              		.align	1
 2863              		.global	xTaskResumeAll
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2868              	xTaskResumeAll:
 2869              	.LFB21:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2870              		.loc 1 2100 1 is_stmt 1 view -0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 0
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
 2874 0000 38B5     		push	{r3, r4, r5, lr}
 2875              	.LCFI27:
 2876              		.cfi_def_cfa_offset 16
 2877              		.cfi_offset 3, -16
 2878              		.cfi_offset 4, -12
ARM GAS  /tmp/cc3EZotN.s 			page 155


 2879              		.cfi_offset 5, -8
 2880              		.cfi_offset 14, -4
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2881              		.loc 1 2101 1 view .LVU783
 2882              	.LVL197:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2883              		.loc 1 2102 1 view .LVU784
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2884              		.loc 1 2106 2 view .LVU785
 2885 0002 354B     		ldr	r3, .L227
 2886 0004 1B68     		ldr	r3, [r3]
 2887 0006 43B9     		cbnz	r3, .L212
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2888              		.loc 1 2106 2 view .LVU786
 2889              	.LBB149:
 2890              	.LBI149:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2891              		.loc 2 191 30 view .LVU787
 2892              	.LBB150:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2893              		.loc 2 193 1 view .LVU788
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2894              		.loc 2 195 2 view .LVU789
 2895              		.syntax unified
 2896              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2897 0008 4FF05003 			mov r3, #80												
 2898 000c 83F31188 		msr basepri, r3											
 2899 0010 BFF36F8F 		isb														
 2900 0014 BFF34F8F 		dsb														
 2901              	
 2902              	@ 0 "" 2
 2903              	.LVL198:
 2904              		.thumb
 2905              		.syntax unified
 2906              	.L213:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2907              		.loc 2 195 2 is_stmt 0 view .LVU790
 2908              	.LBE150:
 2909              	.LBE149:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2910              		.loc 1 2106 2 is_stmt 1 discriminator 1 view .LVU791
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2911              		.loc 1 2106 2 discriminator 1 view .LVU792
 2912 0018 FEE7     		b	.L213
 2913              	.L212:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2914              		.loc 1 2106 38 discriminator 2 view .LVU793
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2915              		.loc 1 2113 2 discriminator 2 view .LVU794
 2916 001a FFF7FEFF 		bl	vPortEnterCritical
 2917              	.LVL199:
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2918              		.loc 1 2115 3 discriminator 2 view .LVU795
 2919 001e 2E4B     		ldr	r3, .L227
 2920 0020 1A68     		ldr	r2, [r3]
 2921 0022 013A     		subs	r2, r2, #1
 2922 0024 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 156


2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2923              		.loc 1 2117 3 discriminator 2 view .LVU796
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2924              		.loc 1 2117 28 is_stmt 0 discriminator 2 view .LVU797
 2925 0026 1B68     		ldr	r3, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2926              		.loc 1 2117 5 discriminator 2 view .LVU798
 2927 0028 002B     		cmp	r3, #0
 2928 002a 4FD1     		bne	.L222
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2929              		.loc 1 2119 4 is_stmt 1 view .LVU799
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2930              		.loc 1 2119 31 is_stmt 0 view .LVU800
 2931 002c 2B4B     		ldr	r3, .L227+4
 2932 002e 1B68     		ldr	r3, [r3]
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2933              		.loc 1 2119 6 view .LVU801
 2934 0030 0BB9     		cbnz	r3, .L223
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2935              		.loc 1 2102 12 view .LVU802
 2936 0032 0024     		movs	r4, #0
 2937 0034 4BE0     		b	.L214
 2938              	.L223:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2939              		.loc 1 2101 8 view .LVU803
 2940 0036 0024     		movs	r4, #0
 2941              	.LVL200:
 2942              	.L215:
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2943              		.loc 1 2138 31 is_stmt 1 view .LVU804
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2944              		.loc 1 2123 52 view .LVU805
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2945              		.loc 1 2123 12 is_stmt 0 view .LVU806
 2946 0038 294B     		ldr	r3, .L227+8
 2947 003a 1B68     		ldr	r3, [r3]
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2948              		.loc 1 2123 52 view .LVU807
 2949 003c 1BB3     		cbz	r3, .L225
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2950              		.loc 1 2125 6 is_stmt 1 view .LVU808
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2951              		.loc 1 2125 26 is_stmt 0 view .LVU809
 2952 003e 284B     		ldr	r3, .L227+8
 2953 0040 DB68     		ldr	r3, [r3, #12]
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2954              		.loc 1 2125 12 view .LVU810
 2955 0042 DC68     		ldr	r4, [r3, #12]
 2956              	.LVL201:
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2957              		.loc 1 2126 6 is_stmt 1 view .LVU811
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2958              		.loc 1 2126 15 is_stmt 0 view .LVU812
 2959 0044 04F11800 		add	r0, r4, #24
 2960 0048 FFF7FEFF 		bl	uxListRemove
 2961              	.LVL202:
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cc3EZotN.s 			page 157


 2962              		.loc 1 2127 6 is_stmt 1 view .LVU813
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2963              		.loc 1 2127 15 is_stmt 0 view .LVU814
 2964 004c 251D     		adds	r5, r4, #4
 2965 004e 2846     		mov	r0, r5
 2966 0050 FFF7FEFF 		bl	uxListRemove
 2967              	.LVL203:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2968              		.loc 1 2128 6 is_stmt 1 view .LVU815
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2969              		.loc 1 2128 6 view .LVU816
 2970 0054 E06A     		ldr	r0, [r4, #44]
 2971 0056 0123     		movs	r3, #1
 2972 0058 8340     		lsls	r3, r3, r0
 2973 005a 224A     		ldr	r2, .L227+12
 2974 005c 1168     		ldr	r1, [r2]
 2975 005e 0B43     		orrs	r3, r3, r1
 2976 0060 1360     		str	r3, [r2]
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2977              		.loc 1 2128 6 view .LVU817
 2978 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2979 0066 2946     		mov	r1, r5
 2980 0068 1F4B     		ldr	r3, .L227+16
 2981 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2982 006e FFF7FEFF 		bl	vListInsertEnd
 2983              	.LVL204:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2984              		.loc 1 2128 36 view .LVU818
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2985              		.loc 1 2132 6 view .LVU819
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2986              		.loc 1 2132 15 is_stmt 0 view .LVU820
 2987 0072 E26A     		ldr	r2, [r4, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2988              		.loc 1 2132 43 view .LVU821
 2989 0074 1D4B     		ldr	r3, .L227+20
 2990 0076 1B68     		ldr	r3, [r3]
 2991 0078 DB6A     		ldr	r3, [r3, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2992              		.loc 1 2132 8 view .LVU822
 2993 007a 9A42     		cmp	r2, r3
 2994 007c DCD3     		bcc	.L215
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2995              		.loc 1 2134 7 is_stmt 1 view .LVU823
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2996              		.loc 1 2134 21 is_stmt 0 view .LVU824
 2997 007e 1C4B     		ldr	r3, .L227+24
 2998 0080 0122     		movs	r2, #1
 2999 0082 1A60     		str	r2, [r3]
 3000 0084 D8E7     		b	.L215
 3001              	.L225:
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3002              		.loc 1 2142 5 is_stmt 1 view .LVU825
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3003              		.loc 1 2142 7 is_stmt 0 view .LVU826
 3004 0086 0CB1     		cbz	r4, .L218
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc3EZotN.s 			page 158


 3005              		.loc 1 2150 6 is_stmt 1 view .LVU827
 3006 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3007              	.LVL205:
 3008              	.L218:
 3009              	.LBB151:
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3010              		.loc 1 2158 6 view .LVU828
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3011              		.loc 1 2158 18 is_stmt 0 view .LVU829
 3012 008c 194B     		ldr	r3, .L227+28
 3013 008e 1C68     		ldr	r4, [r3]
 3014              	.LVL206:
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3015              		.loc 1 2160 6 is_stmt 1 view .LVU830
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3016              		.loc 1 2160 8 is_stmt 0 view .LVU831
 3017 0090 84B9     		cbnz	r4, .L221
 3018              	.L219:
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3019              		.loc 1 2179 31 is_stmt 1 view .LVU832
 3020              	.LBE151:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3021              		.loc 1 2183 5 view .LVU833
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3022              		.loc 1 2183 23 is_stmt 0 view .LVU834
 3023 0092 174B     		ldr	r3, .L227+24
 3024 0094 1C68     		ldr	r4, [r3]
 3025              	.LVL207:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3026              		.loc 1 2183 7 view .LVU835
 3027 0096 D4B1     		cbz	r4, .L214
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3028              		.loc 1 2187 7 is_stmt 1 view .LVU836
 3029              	.LVL208:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3030              		.loc 1 2190 6 view .LVU837
 3031 0098 4FF0E023 		mov	r3, #-536813568
 3032 009c 4FF08052 		mov	r2, #268435456
 3033 00a0 C3F8042D 		str	r2, [r3, #3332]
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3034              		.loc 1 2190 6 view .LVU838
 3035              		.syntax unified
 3036              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3037 00a4 BFF34F8F 		dsb
 3038              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3039              		.loc 1 2190 6 view .LVU839
 3040              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3041 00a8 BFF36F8F 		isb
 3042              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3043              		.loc 1 2190 37 view .LVU840
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3044              		.loc 1 2187 23 is_stmt 0 view .LVU841
 3045              		.thumb
 3046              		.syntax unified
 3047 00ac 0124     		movs	r4, #1
ARM GAS  /tmp/cc3EZotN.s 			page 159


 3048 00ae 0EE0     		b	.L214
 3049              	.LVL209:
 3050              	.L220:
 3051              	.LBB152:
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3052              		.loc 1 2170 33 is_stmt 1 view .LVU842
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 3053              		.loc 1 2172 8 view .LVU843
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3054              		.loc 1 2173 31 view .LVU844
 3055 00b0 013C     		subs	r4, r4, #1
 3056              	.LVL210:
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3057              		.loc 1 2173 31 is_stmt 0 view .LVU845
 3058 00b2 07D0     		beq	.L226
 3059              	.L221:
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3060              		.loc 1 2162 7 is_stmt 1 view .LVU846
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3061              		.loc 1 2164 8 view .LVU847
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3062              		.loc 1 2164 12 is_stmt 0 view .LVU848
 3063 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3064              	.LVL211:
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3065              		.loc 1 2164 10 view .LVU849
 3066 00b8 0028     		cmp	r0, #0
 3067 00ba F9D0     		beq	.L220
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3068              		.loc 1 2166 9 is_stmt 1 view .LVU850
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3069              		.loc 1 2166 23 is_stmt 0 view .LVU851
 3070 00bc 0C4B     		ldr	r3, .L227+24
 3071 00be 0122     		movs	r2, #1
 3072 00c0 1A60     		str	r2, [r3]
 3073 00c2 F5E7     		b	.L220
 3074              	.L226:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3075              		.loc 1 2175 7 is_stmt 1 view .LVU852
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3076              		.loc 1 2175 21 is_stmt 0 view .LVU853
 3077 00c4 0B4B     		ldr	r3, .L227+28
 3078 00c6 0022     		movs	r2, #0
 3079 00c8 1A60     		str	r2, [r3]
 3080 00ca E2E7     		b	.L219
 3081              	.LVL212:
 3082              	.L222:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3083              		.loc 1 2175 21 view .LVU854
 3084              	.LBE152:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3085              		.loc 1 2102 12 view .LVU855
 3086 00cc 0024     		movs	r4, #0
 3087              	.LVL213:
 3088              	.L214:
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3089              		.loc 1 2200 28 is_stmt 1 view .LVU856
ARM GAS  /tmp/cc3EZotN.s 			page 160


2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3090              		.loc 1 2203 2 view .LVU857
 3091 00ce FFF7FEFF 		bl	vPortExitCritical
 3092              	.LVL214:
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3093              		.loc 1 2205 2 view .LVU858
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3094              		.loc 1 2206 1 is_stmt 0 view .LVU859
 3095 00d2 2046     		mov	r0, r4
 3096 00d4 38BD     		pop	{r3, r4, r5, pc}
 3097              	.LVL215:
 3098              	.L228:
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3099              		.loc 1 2206 1 view .LVU860
 3100 00d6 00BF     		.align	2
 3101              	.L227:
 3102 00d8 00000000 		.word	.LANCHOR16
 3103 00dc 00000000 		.word	.LANCHOR9
 3104 00e0 00000000 		.word	.LANCHOR1
 3105 00e4 00000000 		.word	.LANCHOR13
 3106 00e8 00000000 		.word	.LANCHOR4
 3107 00ec 00000000 		.word	.LANCHOR10
 3108 00f0 00000000 		.word	.LANCHOR20
 3109 00f4 00000000 		.word	.LANCHOR19
 3110              		.cfi_endproc
 3111              	.LFE21:
 3113              		.section	.text.vTaskDelay,"ax",%progbits
 3114              		.align	1
 3115              		.global	vTaskDelay
 3116              		.syntax unified
 3117              		.thumb
 3118              		.thumb_func
 3120              	vTaskDelay:
 3121              	.LVL216:
 3122              	.LFB10:
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3123              		.loc 1 1283 2 is_stmt 1 view -0
 3124              		.cfi_startproc
 3125              		@ args = 0, pretend = 0, frame = 0
 3126              		@ frame_needed = 0, uses_anonymous_args = 0
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3127              		.loc 1 1283 2 is_stmt 0 view .LVU862
 3128 0000 10B5     		push	{r4, lr}
 3129              	.LCFI28:
 3130              		.cfi_def_cfa_offset 8
 3131              		.cfi_offset 4, -8
 3132              		.cfi_offset 14, -4
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3133              		.loc 1 1284 2 is_stmt 1 view .LVU863
 3134              	.LVL217:
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3135              		.loc 1 1287 3 view .LVU864
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3136              		.loc 1 1287 5 is_stmt 0 view .LVU865
 3137 0002 A8B1     		cbz	r0, .L230
 3138 0004 0446     		mov	r4, r0
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
ARM GAS  /tmp/cc3EZotN.s 			page 161


 3139              		.loc 1 1289 4 is_stmt 1 view .LVU866
 3140 0006 104B     		ldr	r3, .L235
 3141 0008 1B68     		ldr	r3, [r3]
 3142 000a 43B1     		cbz	r3, .L231
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3143              		.loc 1 1289 4 view .LVU867
 3144              	.LBB153:
 3145              	.LBI153:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3146              		.loc 2 191 30 view .LVU868
 3147              	.LBB154:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3148              		.loc 2 193 1 view .LVU869
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3149              		.loc 2 195 2 view .LVU870
 3150              		.syntax unified
 3151              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3152 000c 4FF05003 			mov r3, #80												
 3153 0010 83F31188 		msr basepri, r3											
 3154 0014 BFF36F8F 		isb														
 3155 0018 BFF34F8F 		dsb														
 3156              	
 3157              	@ 0 "" 2
 3158              	.LVL218:
 3159              		.thumb
 3160              		.syntax unified
 3161              	.L232:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3162              		.loc 2 195 2 is_stmt 0 view .LVU871
 3163              	.LBE154:
 3164              	.LBE153:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3165              		.loc 1 1289 4 is_stmt 1 discriminator 1 view .LVU872
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3166              		.loc 1 1289 4 discriminator 1 view .LVU873
 3167 001c FEE7     		b	.L232
 3168              	.L231:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3169              		.loc 1 1289 45 discriminator 2 view .LVU874
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3170              		.loc 1 1290 4 discriminator 2 view .LVU875
 3171 001e FFF7FEFF 		bl	vTaskSuspendAll
 3172              	.LVL219:
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3173              		.loc 1 1292 22 discriminator 2 view .LVU876
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3174              		.loc 1 1301 5 discriminator 2 view .LVU877
 3175 0022 0021     		movs	r1, #0
 3176 0024 2046     		mov	r0, r4
 3177 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3178              	.LVL220:
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3179              		.loc 1 1303 4 discriminator 2 view .LVU878
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3180              		.loc 1 1303 22 is_stmt 0 discriminator 2 view .LVU879
 3181 002a FFF7FEFF 		bl	xTaskResumeAll
 3182              	.LVL221:
ARM GAS  /tmp/cc3EZotN.s 			page 162


1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3183              		.loc 1 1307 28 is_stmt 1 discriminator 2 view .LVU880
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3184              		.loc 1 1312 3 discriminator 2 view .LVU881
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3185              		.loc 1 1312 5 is_stmt 0 discriminator 2 view .LVU882
 3186 002e 48B9     		cbnz	r0, .L229
 3187              	.LVL222:
 3188              	.L230:
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3189              		.loc 1 1314 4 is_stmt 1 view .LVU883
 3190 0030 4FF0E023 		mov	r3, #-536813568
 3191 0034 4FF08052 		mov	r2, #268435456
 3192 0038 C3F8042D 		str	r2, [r3, #3332]
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3193              		.loc 1 1314 4 view .LVU884
 3194              		.syntax unified
 3195              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3196 003c BFF34F8F 		dsb
 3197              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3198              		.loc 1 1314 4 view .LVU885
 3199              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3200 0040 BFF36F8F 		isb
 3201              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3202              		.loc 1 1314 26 view .LVU886
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3203              		.loc 1 1318 28 view .LVU887
 3204              		.thumb
 3205              		.syntax unified
 3206              	.L229:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3207              		.loc 1 1320 2 is_stmt 0 view .LVU888
 3208 0044 10BD     		pop	{r4, pc}
 3209              	.L236:
 3210 0046 00BF     		.align	2
 3211              	.L235:
 3212 0048 00000000 		.word	.LANCHOR16
 3213              		.cfi_endproc
 3214              	.LFE10:
 3216              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3217              		.align	1
 3218              		.global	vTaskSwitchContext
 3219              		.syntax unified
 3220              		.thumb
 3221              		.thumb_func
 3223              	vTaskSwitchContext:
 3224              	.LFB27:
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3225              		.loc 1 2846 1 is_stmt 1 view -0
 3226              		.cfi_startproc
 3227              		@ args = 0, pretend = 0, frame = 0
 3228              		@ frame_needed = 0, uses_anonymous_args = 0
 3229 0000 08B5     		push	{r3, lr}
 3230              	.LCFI29:
 3231              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3EZotN.s 			page 163


 3232              		.cfi_offset 3, -8
 3233              		.cfi_offset 14, -4
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3234              		.loc 1 2847 2 view .LVU890
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3235              		.loc 1 2847 27 is_stmt 0 view .LVU891
 3236 0002 294B     		ldr	r3, .L247
 3237 0004 1B68     		ldr	r3, [r3]
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3238              		.loc 1 2847 4 view .LVU892
 3239 0006 1BB1     		cbz	r3, .L238
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3240              		.loc 1 2851 3 is_stmt 1 view .LVU893
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3241              		.loc 1 2851 17 is_stmt 0 view .LVU894
 3242 0008 284B     		ldr	r3, .L247+4
 3243 000a 0122     		movs	r2, #1
 3244 000c 1A60     		str	r2, [r3]
 3245              	.L237:
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3246              		.loc 1 2901 1 view .LVU895
 3247 000e 08BD     		pop	{r3, pc}
 3248              	.L238:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3249              		.loc 1 2855 3 is_stmt 1 view .LVU896
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3250              		.loc 1 2855 17 is_stmt 0 view .LVU897
 3251 0010 264B     		ldr	r3, .L247+4
 3252 0012 0022     		movs	r2, #0
 3253 0014 1A60     		str	r2, [r3]
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3254              		.loc 1 2856 27 is_stmt 1 view .LVU898
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3255              		.loc 1 2886 3 view .LVU899
 3256 0016 264B     		ldr	r3, .L247+8
 3257 0018 1A68     		ldr	r2, [r3]
 3258 001a 1268     		ldr	r2, [r2]
 3259 001c 1B68     		ldr	r3, [r3]
 3260 001e 1B6B     		ldr	r3, [r3, #48]
 3261 0020 9A42     		cmp	r2, r3
 3262 0022 15D9     		bls	.L245
 3263              	.L240:
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3264              		.loc 1 2886 33 discriminator 3 view .LVU900
 3265              	.LBB155:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3266              		.loc 1 2890 3 discriminator 3 view .LVU901
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3267              		.loc 1 2890 3 discriminator 3 view .LVU902
 3268 0024 234B     		ldr	r3, .L247+12
 3269 0026 1B68     		ldr	r3, [r3]
 3270              	.LVL223:
 3271              	.LBB156:
 3272              	.LBI156:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 3273              		.loc 2 130 59 discriminator 3 view .LVU903
 3274              	.LBB157:
ARM GAS  /tmp/cc3EZotN.s 			page 164


 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3275              		.loc 2 132 2 discriminator 3 view .LVU904
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3276              		.loc 2 134 3 discriminator 3 view .LVU905
 3277              		.syntax unified
 3278              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3279 0028 B3FA83F3 		clz r3, r3
 3280              	@ 0 "" 2
 3281              	.LVL224:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3282              		.loc 2 134 3 is_stmt 0 discriminator 3 view .LVU906
 3283              		.thumb
 3284              		.syntax unified
 3285 002c DBB2     		uxtb	r3, r3
 3286              	.LVL225:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3287              		.loc 2 135 3 is_stmt 1 discriminator 3 view .LVU907
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3288              		.loc 2 135 3 is_stmt 0 discriminator 3 view .LVU908
 3289              	.LBE157:
 3290              	.LBE156:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3291              		.loc 1 2890 3 discriminator 3 view .LVU909
 3292 002e C3F11F03 		rsb	r3, r3, #31
 3293              	.LVL226:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3294              		.loc 1 2890 3 is_stmt 1 discriminator 3 view .LVU910
 3295 0032 03EB8301 		add	r1, r3, r3, lsl #2
 3296 0036 8A00     		lsls	r2, r1, #2
 3297 0038 1F49     		ldr	r1, .L247+16
 3298 003a 8A58     		ldr	r2, [r1, r2]
 3299 003c 7AB9     		cbnz	r2, .L241
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3300              		.loc 1 2890 3 view .LVU911
 3301              	.LBB158:
 3302              	.LBI158:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3303              		.loc 2 191 30 view .LVU912
 3304              	.LBB159:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3305              		.loc 2 193 1 view .LVU913
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3306              		.loc 2 195 2 view .LVU914
 3307              		.syntax unified
 3308              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3309 003e 4FF05003 			mov r3, #80												
 3310 0042 83F31188 		msr basepri, r3											
 3311 0046 BFF36F8F 		isb														
 3312 004a BFF34F8F 		dsb														
 3313              	
 3314              	@ 0 "" 2
 3315              	.LVL227:
 3316              		.thumb
 3317              		.syntax unified
 3318              	.L242:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3319              		.loc 2 195 2 is_stmt 0 view .LVU915
ARM GAS  /tmp/cc3EZotN.s 			page 165


 3320              	.LBE159:
 3321              	.LBE158:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3322              		.loc 1 2890 3 is_stmt 1 discriminator 1 view .LVU916
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3323              		.loc 1 2890 3 discriminator 1 view .LVU917
 3324 004e FEE7     		b	.L242
 3325              	.L245:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3326              		.loc 1 2890 3 is_stmt 0 discriminator 1 view .LVU918
 3327              	.LBE155:
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3328              		.loc 1 2886 3 is_stmt 1 discriminator 1 view .LVU919
 3329 0050 174B     		ldr	r3, .L247+8
 3330 0052 1868     		ldr	r0, [r3]
 3331 0054 1968     		ldr	r1, [r3]
 3332 0056 3431     		adds	r1, r1, #52
 3333 0058 FFF7FEFF 		bl	vApplicationStackOverflowHook
 3334              	.LVL228:
 3335 005c E2E7     		b	.L240
 3336              	.LVL229:
 3337              	.L241:
 3338              	.LBB162:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3339              		.loc 1 2890 3 discriminator 2 view .LVU920
 3340              	.LBB160:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3341              		.loc 1 2890 3 discriminator 2 view .LVU921
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3342              		.loc 1 2890 3 discriminator 2 view .LVU922
 3343 005e 1649     		ldr	r1, .L247+16
 3344 0060 03EB8300 		add	r0, r3, r3, lsl #2
 3345 0064 8200     		lsls	r2, r0, #2
 3346 0066 0A44     		add	r2, r2, r1
 3347 0068 5068     		ldr	r0, [r2, #4]
 3348 006a 4068     		ldr	r0, [r0, #4]
 3349 006c 5060     		str	r0, [r2, #4]
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3350              		.loc 1 2890 3 discriminator 2 view .LVU923
 3351 006e 03EB830C 		add	ip, r3, r3, lsl #2
 3352 0072 4FEA8C02 		lsl	r2, ip, #2
 3353 0076 0832     		adds	r2, r2, #8
 3354 0078 1144     		add	r1, r1, r2
 3355 007a 8842     		cmp	r0, r1
 3356 007c 0DD0     		beq	.L246
 3357              	.L243:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3358              		.loc 1 2890 3 discriminator 6 view .LVU924
 3359 007e 03EB8303 		add	r3, r3, r3, lsl #2
 3360              	.LVL230:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3361              		.loc 1 2890 3 is_stmt 0 discriminator 6 view .LVU925
 3362 0082 9A00     		lsls	r2, r3, #2
 3363 0084 0C4B     		ldr	r3, .L247+16
 3364 0086 1344     		add	r3, r3, r2
 3365 0088 5B68     		ldr	r3, [r3, #4]
 3366 008a DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc3EZotN.s 			page 166


 3367 008c 084B     		ldr	r3, .L247+8
 3368 008e 1A60     		str	r2, [r3]
 3369              	.LBE160:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3370              		.loc 1 2890 3 is_stmt 1 discriminator 6 view .LVU926
 3371              	.LBE162:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3372              		.loc 1 2890 37 discriminator 6 view .LVU927
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3373              		.loc 1 2891 26 discriminator 6 view .LVU928
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3374              		.loc 1 2897 4 discriminator 6 view .LVU929
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3375              		.loc 1 2897 33 is_stmt 0 discriminator 6 view .LVU930
 3376 0090 1B68     		ldr	r3, [r3]
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3377              		.loc 1 2897 18 discriminator 6 view .LVU931
 3378 0092 6033     		adds	r3, r3, #96
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3379              		.loc 1 2897 16 discriminator 6 view .LVU932
 3380 0094 094A     		ldr	r2, .L247+20
 3381 0096 1360     		str	r3, [r2]
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3382              		.loc 1 2901 1 discriminator 6 view .LVU933
 3383 0098 B9E7     		b	.L237
 3384              	.LVL231:
 3385              	.L246:
 3386              	.LBB163:
 3387              	.LBB161:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3388              		.loc 1 2890 3 is_stmt 1 discriminator 4 view .LVU934
 3389 009a 4068     		ldr	r0, [r0, #4]
 3390 009c 6246     		mov	r2, ip
 3391 009e 9100     		lsls	r1, r2, #2
 3392 00a0 054A     		ldr	r2, .L247+16
 3393 00a2 0A44     		add	r2, r2, r1
 3394 00a4 5060     		str	r0, [r2, #4]
 3395 00a6 EAE7     		b	.L243
 3396              	.L248:
 3397              		.align	2
 3398              	.L247:
 3399 00a8 00000000 		.word	.LANCHOR16
 3400 00ac 00000000 		.word	.LANCHOR20
 3401 00b0 00000000 		.word	.LANCHOR10
 3402 00b4 00000000 		.word	.LANCHOR13
 3403 00b8 00000000 		.word	.LANCHOR4
 3404 00bc 00000000 		.word	_impure_ptr
 3405              	.LBE161:
 3406              	.LBE163:
 3407              		.cfi_endproc
 3408              	.LFE27:
 3410              		.section	.text.vTaskSuspend,"ax",%progbits
 3411              		.align	1
 3412              		.global	vTaskSuspend
 3413              		.syntax unified
 3414              		.thumb
 3415              		.thumb_func
ARM GAS  /tmp/cc3EZotN.s 			page 167


 3417              	vTaskSuspend:
 3418              	.LVL232:
 3419              	.LFB14:
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3420              		.loc 1 1625 2 view -0
 3421              		.cfi_startproc
 3422              		@ args = 0, pretend = 0, frame = 0
 3423              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3424              		.loc 1 1625 2 is_stmt 0 view .LVU936
 3425 0000 38B5     		push	{r3, r4, r5, lr}
 3426              	.LCFI30:
 3427              		.cfi_def_cfa_offset 16
 3428              		.cfi_offset 3, -16
 3429              		.cfi_offset 4, -12
 3430              		.cfi_offset 5, -8
 3431              		.cfi_offset 14, -4
 3432 0002 0446     		mov	r4, r0
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3433              		.loc 1 1626 2 is_stmt 1 view .LVU937
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3434              		.loc 1 1628 3 view .LVU938
 3435 0004 FFF7FEFF 		bl	vPortEnterCritical
 3436              	.LVL233:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3437              		.loc 1 1632 4 view .LVU939
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3438              		.loc 1 1632 12 is_stmt 0 view .LVU940
 3439 0008 64B3     		cbz	r4, .L261
 3440              	.LVL234:
 3441              	.L250:
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3442              		.loc 1 1634 30 is_stmt 1 discriminator 4 view .LVU941
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3443              		.loc 1 1638 4 discriminator 4 view .LVU942
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3444              		.loc 1 1638 8 is_stmt 0 discriminator 4 view .LVU943
 3445 000a 251D     		adds	r5, r4, #4
 3446 000c 2846     		mov	r0, r5
 3447 000e FFF7FEFF 		bl	uxListRemove
 3448              	.LVL235:
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3449              		.loc 1 1638 6 discriminator 4 view .LVU944
 3450 0012 70B9     		cbnz	r0, .L251
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3451              		.loc 1 1640 5 is_stmt 1 view .LVU945
 3452 0014 E26A     		ldr	r2, [r4, #44]
 3453 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3454 001a 9B00     		lsls	r3, r3, #2
 3455 001c 2C49     		ldr	r1, .L265
 3456 001e CB58     		ldr	r3, [r1, r3]
 3457 0020 3BB9     		cbnz	r3, .L251
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3458              		.loc 1 1640 5 discriminator 1 view .LVU946
 3459 0022 0123     		movs	r3, #1
 3460 0024 03FA02F2 		lsl	r2, r3, r2
 3461 0028 2A49     		ldr	r1, .L265+4
ARM GAS  /tmp/cc3EZotN.s 			page 168


 3462 002a 0B68     		ldr	r3, [r1]
 3463 002c 23EA0203 		bic	r3, r3, r2
 3464 0030 0B60     		str	r3, [r1]
 3465              	.L251:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3466              		.loc 1 1644 29 view .LVU947
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3467              		.loc 1 1648 4 view .LVU948
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3468              		.loc 1 1648 8 is_stmt 0 view .LVU949
 3469 0032 A36A     		ldr	r3, [r4, #40]
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3470              		.loc 1 1648 6 view .LVU950
 3471 0034 1BB1     		cbz	r3, .L252
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3472              		.loc 1 1650 5 is_stmt 1 view .LVU951
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3473              		.loc 1 1650 14 is_stmt 0 view .LVU952
 3474 0036 04F11800 		add	r0, r4, #24
 3475 003a FFF7FEFF 		bl	uxListRemove
 3476              	.LVL236:
 3477              	.L252:
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3478              		.loc 1 1654 29 is_stmt 1 view .LVU953
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3479              		.loc 1 1657 4 view .LVU954
 3480 003e 2946     		mov	r1, r5
 3481 0040 2548     		ldr	r0, .L265+8
 3482 0042 FFF7FEFF 		bl	vListInsertEnd
 3483              	.LVL237:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3484              		.loc 1 1661 5 view .LVU955
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3485              		.loc 1 1661 14 is_stmt 0 view .LVU956
 3486 0046 94F88C34 		ldrb	r3, [r4, #1164]	@ zero_extendqisi2
 3487 004a DBB2     		uxtb	r3, r3
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3488              		.loc 1 1661 7 view .LVU957
 3489 004c 012B     		cmp	r3, #1
 3490 004e 0CD0     		beq	.L262
 3491              	.L253:
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3492              		.loc 1 1670 3 is_stmt 1 view .LVU958
 3493 0050 FFF7FEFF 		bl	vPortExitCritical
 3494              	.LVL238:
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3495              		.loc 1 1672 3 view .LVU959
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3496              		.loc 1 1672 25 is_stmt 0 view .LVU960
 3497 0054 214B     		ldr	r3, .L265+12
 3498 0056 1B68     		ldr	r3, [r3]
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3499              		.loc 1 1672 5 view .LVU961
 3500 0058 5BB9     		cbnz	r3, .L263
 3501              	.L254:
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3502              		.loc 1 1684 28 is_stmt 1 view .LVU962
ARM GAS  /tmp/cc3EZotN.s 			page 169


1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3503              		.loc 1 1687 3 view .LVU963
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3504              		.loc 1 1687 13 is_stmt 0 view .LVU964
 3505 005a 214B     		ldr	r3, .L265+16
 3506 005c 1B68     		ldr	r3, [r3]
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3507              		.loc 1 1687 5 view .LVU965
 3508 005e A342     		cmp	r3, r4
 3509 0060 0ED0     		beq	.L264
 3510              	.L249:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3511              		.loc 1 1718 2 view .LVU966
 3512 0062 38BD     		pop	{r3, r4, r5, pc}
 3513              	.LVL239:
 3514              	.L261:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3515              		.loc 1 1632 12 discriminator 1 view .LVU967
 3516 0064 1E4B     		ldr	r3, .L265+16
 3517 0066 1C68     		ldr	r4, [r3]
 3518              	.LVL240:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3519              		.loc 1 1632 12 discriminator 1 view .LVU968
 3520 0068 CFE7     		b	.L250
 3521              	.LVL241:
 3522              	.L262:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3523              		.loc 1 1665 6 is_stmt 1 view .LVU969
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3524              		.loc 1 1665 27 is_stmt 0 view .LVU970
 3525 006a 0023     		movs	r3, #0
 3526 006c 84F88C34 		strb	r3, [r4, #1164]
 3527 0070 EEE7     		b	.L253
 3528              	.L263:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3529              		.loc 1 1676 4 is_stmt 1 view .LVU971
 3530 0072 FFF7FEFF 		bl	vPortEnterCritical
 3531              	.LVL242:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3532              		.loc 1 1678 5 view .LVU972
 3533 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3534              	.LVL243:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3535              		.loc 1 1680 4 view .LVU973
 3536 007a FFF7FEFF 		bl	vPortExitCritical
 3537              	.LVL244:
 3538 007e ECE7     		b	.L254
 3539              	.L264:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3540              		.loc 1 1689 4 view .LVU974
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3541              		.loc 1 1689 26 is_stmt 0 view .LVU975
 3542 0080 164B     		ldr	r3, .L265+12
 3543 0082 1B68     		ldr	r3, [r3]
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3544              		.loc 1 1689 6 view .LVU976
 3545 0084 B3B1     		cbz	r3, .L256
ARM GAS  /tmp/cc3EZotN.s 			page 170


1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3546              		.loc 1 1692 5 is_stmt 1 view .LVU977
 3547 0086 174B     		ldr	r3, .L265+20
 3548 0088 1B68     		ldr	r3, [r3]
 3549 008a 43B1     		cbz	r3, .L257
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3550              		.loc 1 1692 5 view .LVU978
 3551              	.LBB164:
 3552              	.LBI164:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3553              		.loc 2 191 30 view .LVU979
 3554              	.LBB165:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3555              		.loc 2 193 1 view .LVU980
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3556              		.loc 2 195 2 view .LVU981
 3557              		.syntax unified
 3558              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3559 008c 4FF05003 			mov r3, #80												
 3560 0090 83F31188 		msr basepri, r3											
 3561 0094 BFF36F8F 		isb														
 3562 0098 BFF34F8F 		dsb														
 3563              	
 3564              	@ 0 "" 2
 3565              	.LVL245:
 3566              		.thumb
 3567              		.syntax unified
 3568              	.L258:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3569              		.loc 2 195 2 is_stmt 0 view .LVU982
 3570              	.LBE165:
 3571              	.LBE164:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3572              		.loc 1 1692 5 is_stmt 1 discriminator 1 view .LVU983
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3573              		.loc 1 1692 5 discriminator 1 view .LVU984
 3574 009c FEE7     		b	.L258
 3575              	.L257:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3576              		.loc 1 1692 46 discriminator 2 view .LVU985
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3577              		.loc 1 1693 5 discriminator 2 view .LVU986
 3578 009e 4FF0E023 		mov	r3, #-536813568
 3579 00a2 4FF08052 		mov	r2, #268435456
 3580 00a6 C3F8042D 		str	r2, [r3, #3332]
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3581              		.loc 1 1693 5 discriminator 2 view .LVU987
 3582              		.syntax unified
 3583              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3584 00aa BFF34F8F 		dsb
 3585              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3586              		.loc 1 1693 5 discriminator 2 view .LVU988
 3587              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3588 00ae BFF36F8F 		isb
 3589              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 171


 3590              		.loc 1 1693 27 discriminator 2 view .LVU989
 3591              		.thumb
 3592              		.syntax unified
 3593 00b2 D6E7     		b	.L249
 3594              	.L256:
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3595              		.loc 1 1700 5 view .LVU990
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3596              		.loc 1 1700 9 is_stmt 0 view .LVU991
 3597 00b4 084B     		ldr	r3, .L265+8
 3598 00b6 1A68     		ldr	r2, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3599              		.loc 1 1700 56 view .LVU992
 3600 00b8 0B4B     		ldr	r3, .L265+24
 3601 00ba 1B68     		ldr	r3, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3602              		.loc 1 1700 7 view .LVU993
 3603 00bc 9A42     		cmp	r2, r3
 3604 00be 03D1     		bne	.L259
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3605              		.loc 1 1706 6 is_stmt 1 view .LVU994
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3606              		.loc 1 1706 19 is_stmt 0 view .LVU995
 3607 00c0 074B     		ldr	r3, .L265+16
 3608 00c2 0022     		movs	r2, #0
 3609 00c4 1A60     		str	r2, [r3]
 3610 00c6 CCE7     		b	.L249
 3611              	.L259:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3612              		.loc 1 1710 6 is_stmt 1 view .LVU996
 3613 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3614              	.LVL246:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3615              		.loc 1 1716 28 view .LVU997
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3616              		.loc 1 1718 2 is_stmt 0 view .LVU998
 3617 00cc C9E7     		b	.L249
 3618              	.L266:
 3619 00ce 00BF     		.align	2
 3620              	.L265:
 3621 00d0 00000000 		.word	.LANCHOR4
 3622 00d4 00000000 		.word	.LANCHOR13
 3623 00d8 00000000 		.word	.LANCHOR0
 3624 00dc 00000000 		.word	.LANCHOR11
 3625 00e0 00000000 		.word	.LANCHOR10
 3626 00e4 00000000 		.word	.LANCHOR16
 3627 00e8 00000000 		.word	.LANCHOR9
 3628              		.cfi_endproc
 3629              	.LFE14:
 3631              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3632              		.align	1
 3633              		.global	vTaskPlaceOnEventList
 3634              		.syntax unified
 3635              		.thumb
 3636              		.thumb_func
 3638              	vTaskPlaceOnEventList:
 3639              	.LVL247:
ARM GAS  /tmp/cc3EZotN.s 			page 172


 3640              	.LFB28:
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3641              		.loc 1 2905 1 is_stmt 1 view -0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3645              		.loc 1 2906 2 view .LVU1000
 3646 0000 58B1     		cbz	r0, .L272
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3647              		.loc 1 2905 1 is_stmt 0 discriminator 2 view .LVU1001
 3648 0002 10B5     		push	{r4, lr}
 3649              	.LCFI31:
 3650              		.cfi_def_cfa_offset 8
 3651              		.cfi_offset 4, -8
 3652              		.cfi_offset 14, -4
 3653 0004 0C46     		mov	r4, r1
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3654              		.loc 1 2906 29 is_stmt 1 discriminator 2 view .LVU1002
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3655              		.loc 1 2915 2 discriminator 2 view .LVU1003
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3656              		.loc 1 2915 43 is_stmt 0 discriminator 2 view .LVU1004
 3657 0006 094A     		ldr	r2, .L273
 3658 0008 1168     		ldr	r1, [r2]
 3659              	.LVL248:
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3660              		.loc 1 2915 2 discriminator 2 view .LVU1005
 3661 000a 1831     		adds	r1, r1, #24
 3662 000c FFF7FEFF 		bl	vListInsert
 3663              	.LVL249:
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3664              		.loc 1 2917 2 is_stmt 1 discriminator 2 view .LVU1006
 3665 0010 0121     		movs	r1, #1
 3666 0012 2046     		mov	r0, r4
 3667 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3668              	.LVL250:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3669              		.loc 1 2918 1 is_stmt 0 discriminator 2 view .LVU1007
 3670 0018 10BD     		pop	{r4, pc}
 3671              	.LVL251:
 3672              	.L272:
 3673              	.LCFI32:
 3674              		.cfi_def_cfa_offset 0
 3675              		.cfi_restore 4
 3676              		.cfi_restore 14
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3677              		.loc 1 2906 2 is_stmt 1 view .LVU1008
 3678              	.LBB166:
 3679              	.LBI166:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3680              		.loc 2 191 30 view .LVU1009
 3681              	.LBB167:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3682              		.loc 2 193 1 view .LVU1010
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3683              		.loc 2 195 2 view .LVU1011
ARM GAS  /tmp/cc3EZotN.s 			page 173


 3684              		.syntax unified
 3685              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3686 001a 4FF05003 			mov r3, #80												
 3687 001e 83F31188 		msr basepri, r3											
 3688 0022 BFF36F8F 		isb														
 3689 0026 BFF34F8F 		dsb														
 3690              	
 3691              	@ 0 "" 2
 3692              	.LVL252:
 3693              		.thumb
 3694              		.syntax unified
 3695              	.L269:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3696              		.loc 2 195 2 is_stmt 0 view .LVU1012
 3697              	.LBE167:
 3698              	.LBE166:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3699              		.loc 1 2906 2 is_stmt 1 discriminator 1 view .LVU1013
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3700              		.loc 1 2906 2 discriminator 1 view .LVU1014
 3701 002a FEE7     		b	.L269
 3702              	.L274:
 3703              		.align	2
 3704              	.L273:
 3705 002c 00000000 		.word	.LANCHOR10
 3706              		.cfi_endproc
 3707              	.LFE28:
 3709              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3710              		.align	1
 3711              		.global	vTaskPlaceOnUnorderedEventList
 3712              		.syntax unified
 3713              		.thumb
 3714              		.thumb_func
 3716              	vTaskPlaceOnUnorderedEventList:
 3717              	.LVL253:
 3718              	.LFB29:
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3719              		.loc 1 2922 1 view -0
 3720              		.cfi_startproc
 3721              		@ args = 0, pretend = 0, frame = 0
 3722              		@ frame_needed = 0, uses_anonymous_args = 0
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3723              		.loc 1 2923 2 view .LVU1016
 3724 0000 70B1     		cbz	r0, .L282
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3725              		.loc 1 2922 1 is_stmt 0 discriminator 2 view .LVU1017
 3726 0002 10B5     		push	{r4, lr}
 3727              	.LCFI33:
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 4, -8
 3730              		.cfi_offset 14, -4
 3731 0004 1446     		mov	r4, r2
 3732 0006 0246     		mov	r2, r0
 3733              	.LVL254:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3734              		.loc 1 2923 29 is_stmt 1 discriminator 2 view .LVU1018
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 174


 3735              		.loc 1 2927 2 discriminator 2 view .LVU1019
 3736 0008 114B     		ldr	r3, .L283
 3737 000a 1B68     		ldr	r3, [r3]
 3738 000c 8BB9     		cbnz	r3, .L278
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3739              		.loc 1 2927 2 view .LVU1020
 3740              	.LBB168:
 3741              	.LBI168:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3742              		.loc 2 191 30 view .LVU1021
 3743              	.LBB169:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3744              		.loc 2 193 1 view .LVU1022
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3745              		.loc 2 195 2 view .LVU1023
 3746              		.syntax unified
 3747              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3748 000e 4FF05003 			mov r3, #80												
 3749 0012 83F31188 		msr basepri, r3											
 3750 0016 BFF36F8F 		isb														
 3751 001a BFF34F8F 		dsb														
 3752              	
 3753              	@ 0 "" 2
 3754              	.LVL255:
 3755              		.thumb
 3756              		.syntax unified
 3757              	.L279:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3758              		.loc 2 195 2 is_stmt 0 view .LVU1024
 3759              	.LBE169:
 3760              	.LBE168:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3761              		.loc 1 2927 2 is_stmt 1 discriminator 2 view .LVU1025
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3762              		.loc 1 2927 2 discriminator 2 view .LVU1026
 3763 001e FEE7     		b	.L279
 3764              	.LVL256:
 3765              	.L282:
 3766              	.LCFI34:
 3767              		.cfi_def_cfa_offset 0
 3768              		.cfi_restore 4
 3769              		.cfi_restore 14
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3770              		.loc 1 2923 2 view .LVU1027
 3771              	.LBB170:
 3772              	.LBI170:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3773              		.loc 2 191 30 view .LVU1028
 3774              	.LBB171:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3775              		.loc 2 193 1 view .LVU1029
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3776              		.loc 2 195 2 view .LVU1030
 3777              		.syntax unified
 3778              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3779 0020 4FF05003 			mov r3, #80												
 3780 0024 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cc3EZotN.s 			page 175


 3781 0028 BFF36F8F 		isb														
 3782 002c BFF34F8F 		dsb														
 3783              	
 3784              	@ 0 "" 2
 3785              	.LVL257:
 3786              		.thumb
 3787              		.syntax unified
 3788              	.L277:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3789              		.loc 2 195 2 is_stmt 0 view .LVU1031
 3790              	.LBE171:
 3791              	.LBE170:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3792              		.loc 1 2923 2 is_stmt 1 discriminator 1 view .LVU1032
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3793              		.loc 1 2923 2 discriminator 1 view .LVU1033
 3794 0030 FEE7     		b	.L277
 3795              	.LVL258:
 3796              	.L278:
 3797              	.LCFI35:
 3798              		.cfi_def_cfa_offset 8
 3799              		.cfi_offset 4, -8
 3800              		.cfi_offset 14, -4
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3801              		.loc 1 2927 43 discriminator 2 view .LVU1034
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3802              		.loc 1 2932 2 discriminator 2 view .LVU1035
 3803 0032 084B     		ldr	r3, .L283+4
 3804 0034 1868     		ldr	r0, [r3]
 3805              	.LVL259:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3806              		.loc 1 2932 2 is_stmt 0 discriminator 2 view .LVU1036
 3807 0036 41F00041 		orr	r1, r1, #-2147483648
 3808              	.LVL260:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3809              		.loc 1 2932 2 discriminator 2 view .LVU1037
 3810 003a 8161     		str	r1, [r0, #24]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3811              		.loc 1 2939 2 is_stmt 1 discriminator 2 view .LVU1038
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3812              		.loc 1 2939 46 is_stmt 0 discriminator 2 view .LVU1039
 3813 003c 1968     		ldr	r1, [r3]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3814              		.loc 1 2939 2 discriminator 2 view .LVU1040
 3815 003e 1831     		adds	r1, r1, #24
 3816 0040 1046     		mov	r0, r2
 3817 0042 FFF7FEFF 		bl	vListInsertEnd
 3818              	.LVL261:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3819              		.loc 1 2941 2 is_stmt 1 discriminator 2 view .LVU1041
 3820 0046 0121     		movs	r1, #1
 3821 0048 2046     		mov	r0, r4
 3822 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3823              	.LVL262:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3824              		.loc 1 2942 1 is_stmt 0 discriminator 2 view .LVU1042
 3825 004e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc3EZotN.s 			page 176


 3826              	.LVL263:
 3827              	.L284:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3828              		.loc 1 2942 1 discriminator 2 view .LVU1043
 3829              		.align	2
 3830              	.L283:
 3831 0050 00000000 		.word	.LANCHOR16
 3832 0054 00000000 		.word	.LANCHOR10
 3833              		.cfi_endproc
 3834              	.LFE29:
 3836              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3837              		.align	1
 3838              		.global	xTaskRemoveFromEventList
 3839              		.syntax unified
 3840              		.thumb
 3841              		.thumb_func
 3843              	xTaskRemoveFromEventList:
 3844              	.LVL264:
 3845              	.LFB30:
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3846              		.loc 1 2979 1 is_stmt 1 view -0
 3847              		.cfi_startproc
 3848              		@ args = 0, pretend = 0, frame = 0
 3849              		@ frame_needed = 0, uses_anonymous_args = 0
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3850              		.loc 1 2979 1 is_stmt 0 view .LVU1045
 3851 0000 38B5     		push	{r3, r4, r5, lr}
 3852              	.LCFI36:
 3853              		.cfi_def_cfa_offset 16
 3854              		.cfi_offset 3, -16
 3855              		.cfi_offset 4, -12
 3856              		.cfi_offset 5, -8
 3857              		.cfi_offset 14, -4
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3858              		.loc 1 2980 1 is_stmt 1 view .LVU1046
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3859              		.loc 1 2981 1 view .LVU1047
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3860              		.loc 1 2996 2 view .LVU1048
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3861              		.loc 1 2996 31 is_stmt 0 view .LVU1049
 3862 0002 C368     		ldr	r3, [r0, #12]
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3863              		.loc 1 2996 17 view .LVU1050
 3864 0004 DC68     		ldr	r4, [r3, #12]
 3865              	.LVL265:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3866              		.loc 1 2997 2 is_stmt 1 view .LVU1051
 3867 0006 24B3     		cbz	r4, .L293
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3868              		.loc 1 2997 32 discriminator 2 view .LVU1052
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3869              		.loc 1 2998 2 discriminator 2 view .LVU1053
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3870              		.loc 1 2998 11 is_stmt 0 discriminator 2 view .LVU1054
 3871 0008 04F11805 		add	r5, r4, #24
 3872 000c 2846     		mov	r0, r5
ARM GAS  /tmp/cc3EZotN.s 			page 177


 3873              	.LVL266:
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3874              		.loc 1 2998 11 discriminator 2 view .LVU1055
 3875 000e FFF7FEFF 		bl	uxListRemove
 3876              	.LVL267:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3877              		.loc 1 3000 2 is_stmt 1 discriminator 2 view .LVU1056
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3878              		.loc 1 3000 27 is_stmt 0 discriminator 2 view .LVU1057
 3879 0012 184B     		ldr	r3, .L294
 3880 0014 1B68     		ldr	r3, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3881              		.loc 1 3000 4 discriminator 2 view .LVU1058
 3882 0016 2BBB     		cbnz	r3, .L288
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3883              		.loc 1 3002 3 is_stmt 1 view .LVU1059
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3884              		.loc 1 3002 12 is_stmt 0 view .LVU1060
 3885 0018 251D     		adds	r5, r4, #4
 3886 001a 2846     		mov	r0, r5
 3887 001c FFF7FEFF 		bl	uxListRemove
 3888              	.LVL268:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3889              		.loc 1 3003 3 is_stmt 1 view .LVU1061
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3890              		.loc 1 3003 3 view .LVU1062
 3891 0020 E06A     		ldr	r0, [r4, #44]
 3892 0022 0123     		movs	r3, #1
 3893 0024 8340     		lsls	r3, r3, r0
 3894 0026 144A     		ldr	r2, .L294+4
 3895 0028 1168     		ldr	r1, [r2]
 3896 002a 0B43     		orrs	r3, r3, r1
 3897 002c 1360     		str	r3, [r2]
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3898              		.loc 1 3003 3 view .LVU1063
 3899 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3900 0032 2946     		mov	r1, r5
 3901 0034 114B     		ldr	r3, .L294+8
 3902 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3903 003a FFF7FEFF 		bl	vListInsertEnd
 3904              	.LVL269:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3905              		.loc 1 3003 42 view .LVU1064
 3906              	.L289:
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3907              		.loc 1 3012 2 view .LVU1065
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3908              		.loc 1 3012 20 is_stmt 0 view .LVU1066
 3909 003e E26A     		ldr	r2, [r4, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3910              		.loc 1 3012 47 view .LVU1067
 3911 0040 0F4B     		ldr	r3, .L294+12
 3912 0042 1B68     		ldr	r3, [r3]
 3913 0044 DB6A     		ldr	r3, [r3, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3914              		.loc 1 3012 4 view .LVU1068
 3915 0046 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc3EZotN.s 			page 178


 3916 0048 11D9     		bls	.L291
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3917              		.loc 1 3017 3 is_stmt 1 view .LVU1069
 3918              	.LVL270:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3919              		.loc 1 3021 3 view .LVU1070
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3920              		.loc 1 3021 17 is_stmt 0 view .LVU1071
 3921 004a 0120     		movs	r0, #1
 3922 004c 0D4B     		ldr	r3, .L294+16
 3923 004e 1860     		str	r0, [r3]
 3924              	.LVL271:
 3925              	.L285:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3926              		.loc 1 3043 1 view .LVU1072
 3927 0050 38BD     		pop	{r3, r4, r5, pc}
 3928              	.LVL272:
 3929              	.L293:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3930              		.loc 1 2997 2 is_stmt 1 view .LVU1073
 3931              	.LBB172:
 3932              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3933              		.loc 2 191 30 view .LVU1074
 3934              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3935              		.loc 2 193 1 view .LVU1075
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3936              		.loc 2 195 2 view .LVU1076
 3937              		.syntax unified
 3938              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3939 0052 4FF05003 			mov r3, #80												
 3940 0056 83F31188 		msr basepri, r3											
 3941 005a BFF36F8F 		isb														
 3942 005e BFF34F8F 		dsb														
 3943              	
 3944              	@ 0 "" 2
 3945              	.LVL273:
 3946              		.thumb
 3947              		.syntax unified
 3948              	.L287:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3949              		.loc 2 195 2 is_stmt 0 view .LVU1077
 3950              	.LBE173:
 3951              	.LBE172:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3952              		.loc 1 2997 2 is_stmt 1 discriminator 1 view .LVU1078
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3953              		.loc 1 2997 2 discriminator 1 view .LVU1079
 3954 0062 FEE7     		b	.L287
 3955              	.LVL274:
 3956              	.L288:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3957              		.loc 1 3009 3 view .LVU1080
 3958 0064 2946     		mov	r1, r5
 3959 0066 0848     		ldr	r0, .L294+20
 3960 0068 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/cc3EZotN.s 			page 179


 3961              	.LVL275:
 3962 006c E7E7     		b	.L289
 3963              	.L291:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3964              		.loc 1 3025 11 is_stmt 0 view .LVU1081
 3965 006e 0020     		movs	r0, #0
 3966              	.LVL276:
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3967              		.loc 1 3042 2 is_stmt 1 view .LVU1082
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3968              		.loc 1 3042 9 is_stmt 0 view .LVU1083
 3969 0070 EEE7     		b	.L285
 3970              	.L295:
 3971 0072 00BF     		.align	2
 3972              	.L294:
 3973 0074 00000000 		.word	.LANCHOR16
 3974 0078 00000000 		.word	.LANCHOR13
 3975 007c 00000000 		.word	.LANCHOR4
 3976 0080 00000000 		.word	.LANCHOR10
 3977 0084 00000000 		.word	.LANCHOR20
 3978 0088 00000000 		.word	.LANCHOR1
 3979              		.cfi_endproc
 3980              	.LFE30:
 3982              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3983              		.align	1
 3984              		.global	vTaskRemoveFromUnorderedEventList
 3985              		.syntax unified
 3986              		.thumb
 3987              		.thumb_func
 3989              	vTaskRemoveFromUnorderedEventList:
 3990              	.LVL277:
 3991              	.LFB31:
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3992              		.loc 1 3047 1 is_stmt 1 view -0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 0
 3995              		@ frame_needed = 0, uses_anonymous_args = 0
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3996              		.loc 1 3047 1 is_stmt 0 view .LVU1085
 3997 0000 38B5     		push	{r3, r4, r5, lr}
 3998              	.LCFI37:
 3999              		.cfi_def_cfa_offset 16
 4000              		.cfi_offset 3, -16
 4001              		.cfi_offset 4, -12
 4002              		.cfi_offset 5, -8
 4003              		.cfi_offset 14, -4
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4004              		.loc 1 3048 1 is_stmt 1 view .LVU1086
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4005              		.loc 1 3052 2 view .LVU1087
 4006 0002 1C4B     		ldr	r3, .L304
 4007 0004 1B68     		ldr	r3, [r3]
 4008 0006 43B9     		cbnz	r3, .L297
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4009              		.loc 1 3052 2 view .LVU1088
 4010              	.LBB174:
 4011              	.LBI174:
ARM GAS  /tmp/cc3EZotN.s 			page 180


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4012              		.loc 2 191 30 view .LVU1089
 4013              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4014              		.loc 2 193 1 view .LVU1090
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4015              		.loc 2 195 2 view .LVU1091
 4016              		.syntax unified
 4017              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4018 0008 4FF05003 			mov r3, #80												
 4019 000c 83F31188 		msr basepri, r3											
 4020 0010 BFF36F8F 		isb														
 4021 0014 BFF34F8F 		dsb														
 4022              	
 4023              	@ 0 "" 2
 4024              	.LVL278:
 4025              		.thumb
 4026              		.syntax unified
 4027              	.L298:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4028              		.loc 2 195 2 is_stmt 0 view .LVU1092
 4029              	.LBE175:
 4030              	.LBE174:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4031              		.loc 1 3052 2 is_stmt 1 discriminator 1 view .LVU1093
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4032              		.loc 1 3052 2 discriminator 1 view .LVU1094
 4033 0018 FEE7     		b	.L298
 4034              	.L297:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4035              		.loc 1 3052 49 discriminator 2 view .LVU1095
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4036              		.loc 1 3055 2 discriminator 2 view .LVU1096
 4037 001a 41F00041 		orr	r1, r1, #-2147483648
 4038              	.LVL279:
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4039              		.loc 1 3055 2 is_stmt 0 discriminator 2 view .LVU1097
 4040 001e 0160     		str	r1, [r0]
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4041              		.loc 1 3059 2 is_stmt 1 discriminator 2 view .LVU1098
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4042              		.loc 1 3059 17 is_stmt 0 discriminator 2 view .LVU1099
 4043 0020 C468     		ldr	r4, [r0, #12]
 4044              	.LVL280:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4045              		.loc 1 3060 2 is_stmt 1 discriminator 2 view .LVU1100
 4046 0022 F4B1     		cbz	r4, .L303
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4047              		.loc 1 3060 32 discriminator 2 view .LVU1101
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4048              		.loc 1 3061 2 discriminator 2 view .LVU1102
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4049              		.loc 1 3061 11 is_stmt 0 discriminator 2 view .LVU1103
 4050 0024 FFF7FEFF 		bl	uxListRemove
 4051              	.LVL281:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4052              		.loc 1 3066 2 is_stmt 1 discriminator 2 view .LVU1104
ARM GAS  /tmp/cc3EZotN.s 			page 181


3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4053              		.loc 1 3066 11 is_stmt 0 discriminator 2 view .LVU1105
 4054 0028 251D     		adds	r5, r4, #4
 4055 002a 2846     		mov	r0, r5
 4056 002c FFF7FEFF 		bl	uxListRemove
 4057              	.LVL282:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4058              		.loc 1 3067 2 is_stmt 1 discriminator 2 view .LVU1106
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4059              		.loc 1 3067 2 discriminator 2 view .LVU1107
 4060 0030 E06A     		ldr	r0, [r4, #44]
 4061 0032 0123     		movs	r3, #1
 4062 0034 8340     		lsls	r3, r3, r0
 4063 0036 104A     		ldr	r2, .L304+4
 4064 0038 1168     		ldr	r1, [r2]
 4065 003a 0B43     		orrs	r3, r3, r1
 4066 003c 1360     		str	r3, [r2]
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4067              		.loc 1 3067 2 discriminator 2 view .LVU1108
 4068 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4069 0042 2946     		mov	r1, r5
 4070 0044 0D4B     		ldr	r3, .L304+8
 4071 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4072 004a FFF7FEFF 		bl	vListInsertEnd
 4073              	.LVL283:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4074              		.loc 1 3067 41 discriminator 2 view .LVU1109
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4075              		.loc 1 3069 2 discriminator 2 view .LVU1110
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4076              		.loc 1 3069 20 is_stmt 0 discriminator 2 view .LVU1111
 4077 004e E26A     		ldr	r2, [r4, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4078              		.loc 1 3069 47 discriminator 2 view .LVU1112
 4079 0050 0B4B     		ldr	r3, .L304+12
 4080 0052 1B68     		ldr	r3, [r3]
 4081 0054 DB6A     		ldr	r3, [r3, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4082              		.loc 1 3069 4 discriminator 2 view .LVU1113
 4083 0056 9A42     		cmp	r2, r3
 4084 0058 02D9     		bls	.L296
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4085              		.loc 1 3075 3 is_stmt 1 view .LVU1114
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4086              		.loc 1 3075 17 is_stmt 0 view .LVU1115
 4087 005a 0A4B     		ldr	r3, .L304+16
 4088 005c 0122     		movs	r2, #1
 4089 005e 1A60     		str	r2, [r3]
 4090              	.L296:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4091              		.loc 1 3077 1 view .LVU1116
 4092 0060 38BD     		pop	{r3, r4, r5, pc}
 4093              	.LVL284:
 4094              	.L303:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4095              		.loc 1 3060 2 is_stmt 1 view .LVU1117
 4096              	.LBB176:
ARM GAS  /tmp/cc3EZotN.s 			page 182


 4097              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4098              		.loc 2 191 30 view .LVU1118
 4099              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4100              		.loc 2 193 1 view .LVU1119
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4101              		.loc 2 195 2 view .LVU1120
 4102              		.syntax unified
 4103              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4104 0062 4FF05003 			mov r3, #80												
 4105 0066 83F31188 		msr basepri, r3											
 4106 006a BFF36F8F 		isb														
 4107 006e BFF34F8F 		dsb														
 4108              	
 4109              	@ 0 "" 2
 4110              	.LVL285:
 4111              		.thumb
 4112              		.syntax unified
 4113              	.L300:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4114              		.loc 2 195 2 is_stmt 0 view .LVU1121
 4115              	.LBE177:
 4116              	.LBE176:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4117              		.loc 1 3060 2 is_stmt 1 discriminator 2 view .LVU1122
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4118              		.loc 1 3060 2 discriminator 2 view .LVU1123
 4119 0072 FEE7     		b	.L300
 4120              	.L305:
 4121              		.align	2
 4122              	.L304:
 4123 0074 00000000 		.word	.LANCHOR16
 4124 0078 00000000 		.word	.LANCHOR13
 4125 007c 00000000 		.word	.LANCHOR4
 4126 0080 00000000 		.word	.LANCHOR10
 4127 0084 00000000 		.word	.LANCHOR20
 4128              		.cfi_endproc
 4129              	.LFE31:
 4131              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4132              		.align	1
 4133              		.global	vTaskSetTimeOutState
 4134              		.syntax unified
 4135              		.thumb
 4136              		.thumb_func
 4138              	vTaskSetTimeOutState:
 4139              	.LVL286:
 4140              	.LFB32:
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4141              		.loc 1 3081 1 view -0
 4142              		.cfi_startproc
 4143              		@ args = 0, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4145              		.loc 1 3082 2 view .LVU1125
 4146 0000 60B1     		cbz	r0, .L311
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
ARM GAS  /tmp/cc3EZotN.s 			page 183


 4147              		.loc 1 3081 1 is_stmt 0 discriminator 2 view .LVU1126
 4148 0002 10B5     		push	{r4, lr}
 4149              	.LCFI38:
 4150              		.cfi_def_cfa_offset 8
 4151              		.cfi_offset 4, -8
 4152              		.cfi_offset 14, -4
 4153 0004 0446     		mov	r4, r0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4154              		.loc 1 3082 27 is_stmt 1 discriminator 2 view .LVU1127
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4155              		.loc 1 3083 2 discriminator 2 view .LVU1128
 4156 0006 FFF7FEFF 		bl	vPortEnterCritical
 4157              	.LVL287:
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4158              		.loc 1 3085 3 discriminator 2 view .LVU1129
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4159              		.loc 1 3085 29 is_stmt 0 discriminator 2 view .LVU1130
 4160 000a 094B     		ldr	r3, .L312
 4161 000c 1B68     		ldr	r3, [r3]
 4162 000e 2360     		str	r3, [r4]
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4163              		.loc 1 3086 3 is_stmt 1 discriminator 2 view .LVU1131
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4164              		.loc 1 3086 30 is_stmt 0 discriminator 2 view .LVU1132
 4165 0010 084B     		ldr	r3, .L312+4
 4166 0012 1B68     		ldr	r3, [r3]
 4167 0014 6360     		str	r3, [r4, #4]
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4168              		.loc 1 3088 2 is_stmt 1 discriminator 2 view .LVU1133
 4169 0016 FFF7FEFF 		bl	vPortExitCritical
 4170              	.LVL288:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4171              		.loc 1 3089 1 is_stmt 0 discriminator 2 view .LVU1134
 4172 001a 10BD     		pop	{r4, pc}
 4173              	.LVL289:
 4174              	.L311:
 4175              	.LCFI39:
 4176              		.cfi_def_cfa_offset 0
 4177              		.cfi_restore 4
 4178              		.cfi_restore 14
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4179              		.loc 1 3082 2 is_stmt 1 view .LVU1135
 4180              	.LBB178:
 4181              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4182              		.loc 2 191 30 view .LVU1136
 4183              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4184              		.loc 2 193 1 view .LVU1137
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4185              		.loc 2 195 2 view .LVU1138
 4186              		.syntax unified
 4187              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4188 001c 4FF05003 			mov r3, #80												
 4189 0020 83F31188 		msr basepri, r3											
 4190 0024 BFF36F8F 		isb														
 4191 0028 BFF34F8F 		dsb														
ARM GAS  /tmp/cc3EZotN.s 			page 184


 4192              	
 4193              	@ 0 "" 2
 4194              	.LVL290:
 4195              		.thumb
 4196              		.syntax unified
 4197              	.L308:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4198              		.loc 2 195 2 is_stmt 0 view .LVU1139
 4199              	.LBE179:
 4200              	.LBE178:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4201              		.loc 1 3082 2 is_stmt 1 discriminator 1 view .LVU1140
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4202              		.loc 1 3082 2 discriminator 1 view .LVU1141
 4203 002c FEE7     		b	.L308
 4204              	.L313:
 4205 002e 00BF     		.align	2
 4206              	.L312:
 4207 0030 00000000 		.word	.LANCHOR18
 4208 0034 00000000 		.word	.LANCHOR15
 4209              		.cfi_endproc
 4210              	.LFE32:
 4212              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4213              		.align	1
 4214              		.global	vTaskInternalSetTimeOutState
 4215              		.syntax unified
 4216              		.thumb
 4217              		.thumb_func
 4219              	vTaskInternalSetTimeOutState:
 4220              	.LVL291:
 4221              	.LFB33:
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4222              		.loc 1 3093 1 view -0
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 0
 4225              		@ frame_needed = 0, uses_anonymous_args = 0
 4226              		@ link register save eliminated.
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4227              		.loc 1 3095 2 view .LVU1143
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4228              		.loc 1 3095 28 is_stmt 0 view .LVU1144
 4229 0000 034B     		ldr	r3, .L315
 4230 0002 1B68     		ldr	r3, [r3]
 4231 0004 0360     		str	r3, [r0]
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4232              		.loc 1 3096 2 is_stmt 1 view .LVU1145
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4233              		.loc 1 3096 29 is_stmt 0 view .LVU1146
 4234 0006 034B     		ldr	r3, .L315+4
 4235 0008 1B68     		ldr	r3, [r3]
 4236 000a 4360     		str	r3, [r0, #4]
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4237              		.loc 1 3097 1 view .LVU1147
 4238 000c 7047     		bx	lr
 4239              	.L316:
 4240 000e 00BF     		.align	2
 4241              	.L315:
ARM GAS  /tmp/cc3EZotN.s 			page 185


 4242 0010 00000000 		.word	.LANCHOR18
 4243 0014 00000000 		.word	.LANCHOR15
 4244              		.cfi_endproc
 4245              	.LFE33:
 4247              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4248              		.align	1
 4249              		.global	xTaskCheckForTimeOut
 4250              		.syntax unified
 4251              		.thumb
 4252              		.thumb_func
 4254              	xTaskCheckForTimeOut:
 4255              	.LVL292:
 4256              	.LFB34:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4257              		.loc 1 3101 1 is_stmt 1 view -0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 0
 4260              		@ frame_needed = 0, uses_anonymous_args = 0
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4261              		.loc 1 3102 1 view .LVU1149
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4262              		.loc 1 3104 2 view .LVU1150
 4263 0000 D8B1     		cbz	r0, .L329
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4264              		.loc 1 3101 1 is_stmt 0 discriminator 2 view .LVU1151
 4265 0002 70B5     		push	{r4, r5, r6, lr}
 4266              	.LCFI40:
 4267              		.cfi_def_cfa_offset 16
 4268              		.cfi_offset 4, -16
 4269              		.cfi_offset 5, -12
 4270              		.cfi_offset 6, -8
 4271              		.cfi_offset 14, -4
 4272 0004 0C46     		mov	r4, r1
 4273 0006 0546     		mov	r5, r0
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4274              		.loc 1 3104 27 is_stmt 1 discriminator 2 view .LVU1152
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4275              		.loc 1 3105 2 discriminator 2 view .LVU1153
 4276 0008 01B3     		cbz	r1, .L330
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4277              		.loc 1 3105 31 discriminator 2 view .LVU1154
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4278              		.loc 1 3107 2 discriminator 2 view .LVU1155
 4279 000a FFF7FEFF 		bl	vPortEnterCritical
 4280              	.LVL293:
 4281              	.LBB180:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4282              		.loc 1 3110 3 discriminator 2 view .LVU1156
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4283              		.loc 1 3110 20 is_stmt 0 discriminator 2 view .LVU1157
 4284 000e 1B4B     		ldr	r3, .L332
 4285 0010 1968     		ldr	r1, [r3]
 4286              	.LVL294:
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4287              		.loc 1 3111 3 is_stmt 1 discriminator 2 view .LVU1158
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4288              		.loc 1 3111 62 is_stmt 0 discriminator 2 view .LVU1159
ARM GAS  /tmp/cc3EZotN.s 			page 186


 4289 0012 6B68     		ldr	r3, [r5, #4]
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4290              		.loc 1 3111 20 discriminator 2 view .LVU1160
 4291 0014 C81A     		subs	r0, r1, r3
 4292              	.LVL295:
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4293              		.loc 1 3125 4 is_stmt 1 discriminator 2 view .LVU1161
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4294              		.loc 1 3125 8 is_stmt 0 discriminator 2 view .LVU1162
 4295 0016 2268     		ldr	r2, [r4]
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4296              		.loc 1 3125 6 discriminator 2 view .LVU1163
 4297 0018 B2F1FF3F 		cmp	r2, #-1
 4298 001c 27D0     		beq	.L325
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4299              		.loc 1 3135 3 is_stmt 1 view .LVU1164
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4300              		.loc 1 3135 25 is_stmt 0 view .LVU1165
 4301 001e 184E     		ldr	r6, .L332+4
 4302 0020 3668     		ldr	r6, [r6]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4303              		.loc 1 3135 5 view .LVU1166
 4304 0022 D5F800C0 		ldr	ip, [r5]
 4305 0026 B445     		cmp	ip, r6
 4306 0028 01D0     		beq	.L323
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4307              		.loc 1 3135 56 discriminator 1 view .LVU1167
 4308 002a 8B42     		cmp	r3, r1
 4309 002c 24D9     		bls	.L326
 4310              	.L323:
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4311              		.loc 1 3144 8 is_stmt 1 view .LVU1168
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4312              		.loc 1 3144 10 is_stmt 0 view .LVU1169
 4313 002e 8242     		cmp	r2, r0
 4314 0030 15D8     		bhi	.L331
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4315              		.loc 1 3153 4 is_stmt 1 view .LVU1170
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4316              		.loc 1 3153 19 is_stmt 0 view .LVU1171
 4317 0032 0023     		movs	r3, #0
 4318 0034 2360     		str	r3, [r4]
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4319              		.loc 1 3154 4 is_stmt 1 view .LVU1172
 4320              	.LVL296:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4321              		.loc 1 3154 12 is_stmt 0 view .LVU1173
 4322 0036 0124     		movs	r4, #1
 4323              	.LVL297:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4324              		.loc 1 3154 12 view .LVU1174
 4325 0038 1AE0     		b	.L322
 4326              	.LVL298:
 4327              	.L329:
 4328              	.LCFI41:
 4329              		.cfi_def_cfa_offset 0
 4330              		.cfi_restore 4
ARM GAS  /tmp/cc3EZotN.s 			page 187


 4331              		.cfi_restore 5
 4332              		.cfi_restore 6
 4333              		.cfi_restore 14
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4334              		.loc 1 3154 12 view .LVU1175
 4335              	.LBE180:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4336              		.loc 1 3104 2 is_stmt 1 view .LVU1176
 4337              	.LBB181:
 4338              	.LBI181:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4339              		.loc 2 191 30 view .LVU1177
 4340              	.LBB182:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4341              		.loc 2 193 1 view .LVU1178
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4342              		.loc 2 195 2 view .LVU1179
 4343              		.syntax unified
 4344              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4345 003a 4FF05003 			mov r3, #80												
 4346 003e 83F31188 		msr basepri, r3											
 4347 0042 BFF36F8F 		isb														
 4348 0046 BFF34F8F 		dsb														
 4349              	
 4350              	@ 0 "" 2
 4351              	.LVL299:
 4352              		.thumb
 4353              		.syntax unified
 4354              	.L319:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4355              		.loc 2 195 2 is_stmt 0 view .LVU1180
 4356              	.LBE182:
 4357              	.LBE181:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4358              		.loc 1 3104 2 is_stmt 1 discriminator 1 view .LVU1181
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4359              		.loc 1 3104 2 discriminator 1 view .LVU1182
 4360 004a FEE7     		b	.L319
 4361              	.L330:
 4362              	.LCFI42:
 4363              		.cfi_def_cfa_offset 16
 4364              		.cfi_offset 4, -16
 4365              		.cfi_offset 5, -12
 4366              		.cfi_offset 6, -8
 4367              		.cfi_offset 14, -4
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4368              		.loc 1 3105 2 view .LVU1183
 4369              	.LBB183:
 4370              	.LBI183:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4371              		.loc 2 191 30 view .LVU1184
 4372              	.LBB184:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4373              		.loc 2 193 1 view .LVU1185
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4374              		.loc 2 195 2 view .LVU1186
 4375              		.syntax unified
ARM GAS  /tmp/cc3EZotN.s 			page 188


 4376              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4377 004c 4FF05003 			mov r3, #80												
 4378 0050 83F31188 		msr basepri, r3											
 4379 0054 BFF36F8F 		isb														
 4380 0058 BFF34F8F 		dsb														
 4381              	
 4382              	@ 0 "" 2
 4383              	.LVL300:
 4384              		.thumb
 4385              		.syntax unified
 4386              	.L321:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4387              		.loc 2 195 2 is_stmt 0 view .LVU1187
 4388              	.LBE184:
 4389              	.LBE183:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4390              		.loc 1 3105 2 is_stmt 1 discriminator 2 view .LVU1188
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4391              		.loc 1 3105 2 discriminator 2 view .LVU1189
 4392 005c FEE7     		b	.L321
 4393              	.LVL301:
 4394              	.L331:
 4395              	.LBB185:
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4396              		.loc 1 3147 4 view .LVU1190
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4397              		.loc 1 3147 19 is_stmt 0 view .LVU1191
 4398 005e 5B1A     		subs	r3, r3, r1
 4399 0060 1344     		add	r3, r3, r2
 4400 0062 2360     		str	r3, [r4]
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4401              		.loc 1 3148 4 is_stmt 1 view .LVU1192
 4402 0064 2846     		mov	r0, r5
 4403              	.LVL302:
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4404              		.loc 1 3148 4 is_stmt 0 view .LVU1193
 4405 0066 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4406              	.LVL303:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4407              		.loc 1 3149 4 is_stmt 1 view .LVU1194
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4408              		.loc 1 3149 12 is_stmt 0 view .LVU1195
 4409 006a 0024     		movs	r4, #0
 4410              	.LVL304:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4411              		.loc 1 3149 12 view .LVU1196
 4412 006c 00E0     		b	.L322
 4413              	.LVL305:
 4414              	.L325:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4415              		.loc 1 3130 13 view .LVU1197
 4416 006e 0024     		movs	r4, #0
 4417              	.LVL306:
 4418              	.L322:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4419              		.loc 1 3130 13 view .LVU1198
 4420              	.LBE185:
ARM GAS  /tmp/cc3EZotN.s 			page 189


3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4421              		.loc 1 3157 2 is_stmt 1 view .LVU1199
 4422 0070 FFF7FEFF 		bl	vPortExitCritical
 4423              	.LVL307:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4424              		.loc 1 3159 2 view .LVU1200
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4425              		.loc 1 3160 1 is_stmt 0 view .LVU1201
 4426 0074 2046     		mov	r0, r4
 4427 0076 70BD     		pop	{r4, r5, r6, pc}
 4428              	.LVL308:
 4429              	.L326:
 4430              	.LBB186:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4431              		.loc 1 3142 12 view .LVU1202
 4432 0078 0124     		movs	r4, #1
 4433              	.LVL309:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4434              		.loc 1 3142 12 view .LVU1203
 4435 007a F9E7     		b	.L322
 4436              	.L333:
 4437              		.align	2
 4438              	.L332:
 4439 007c 00000000 		.word	.LANCHOR15
 4440 0080 00000000 		.word	.LANCHOR18
 4441              	.LBE186:
 4442              		.cfi_endproc
 4443              	.LFE34:
 4445              		.section	.text.vTaskMissedYield,"ax",%progbits
 4446              		.align	1
 4447              		.global	vTaskMissedYield
 4448              		.syntax unified
 4449              		.thumb
 4450              		.thumb_func
 4452              	vTaskMissedYield:
 4453              	.LFB35:
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4454              		.loc 1 3164 1 is_stmt 1 view -0
 4455              		.cfi_startproc
 4456              		@ args = 0, pretend = 0, frame = 0
 4457              		@ frame_needed = 0, uses_anonymous_args = 0
 4458              		@ link register save eliminated.
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4459              		.loc 1 3165 2 view .LVU1205
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4460              		.loc 1 3165 16 is_stmt 0 view .LVU1206
 4461 0000 014B     		ldr	r3, .L335
 4462 0002 0122     		movs	r2, #1
 4463 0004 1A60     		str	r2, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4464              		.loc 1 3166 1 view .LVU1207
 4465 0006 7047     		bx	lr
 4466              	.L336:
 4467              		.align	2
 4468              	.L335:
 4469 0008 00000000 		.word	.LANCHOR20
 4470              		.cfi_endproc
ARM GAS  /tmp/cc3EZotN.s 			page 190


 4471              	.LFE35:
 4473              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4474              		.align	1
 4475              		.global	xTaskGetCurrentTaskHandle
 4476              		.syntax unified
 4477              		.thumb
 4478              		.thumb_func
 4480              	xTaskGetCurrentTaskHandle:
 4481              	.LFB41:
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4482              		.loc 1 3751 2 is_stmt 1 view -0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 0
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
 4486              		@ link register save eliminated.
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4487              		.loc 1 3752 2 view .LVU1209
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4488              		.loc 1 3757 3 view .LVU1210
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4489              		.loc 1 3757 11 is_stmt 0 view .LVU1211
 4490 0000 014B     		ldr	r3, .L338
 4491 0002 1868     		ldr	r0, [r3]
 4492              	.LVL310:
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4493              		.loc 1 3759 3 is_stmt 1 view .LVU1212
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4494              		.loc 1 3760 2 is_stmt 0 view .LVU1213
 4495 0004 7047     		bx	lr
 4496              	.L339:
 4497 0006 00BF     		.align	2
 4498              	.L338:
 4499 0008 00000000 		.word	.LANCHOR10
 4500              		.cfi_endproc
 4501              	.LFE41:
 4503              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4504              		.align	1
 4505              		.global	xTaskGetSchedulerState
 4506              		.syntax unified
 4507              		.thumb
 4508              		.thumb_func
 4510              	xTaskGetSchedulerState:
 4511              	.LFB42:
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4512              		.loc 1 3768 2 is_stmt 1 view -0
 4513              		.cfi_startproc
 4514              		@ args = 0, pretend = 0, frame = 0
 4515              		@ frame_needed = 0, uses_anonymous_args = 0
 4516              		@ link register save eliminated.
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4517              		.loc 1 3769 2 view .LVU1215
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4518              		.loc 1 3771 3 view .LVU1216
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4519              		.loc 1 3771 25 is_stmt 0 view .LVU1217
 4520 0000 054B     		ldr	r3, .L345
 4521 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3EZotN.s 			page 191


3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4522              		.loc 1 3771 5 view .LVU1218
 4523 0004 33B1     		cbz	r3, .L342
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4524              		.loc 1 3777 4 is_stmt 1 view .LVU1219
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4525              		.loc 1 3777 29 is_stmt 0 view .LVU1220
 4526 0006 054B     		ldr	r3, .L345+4
 4527 0008 1B68     		ldr	r3, [r3]
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4528              		.loc 1 3777 6 view .LVU1221
 4529 000a 0BB1     		cbz	r3, .L344
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4530              		.loc 1 3783 13 view .LVU1222
 4531 000c 0020     		movs	r0, #0
 4532              	.LVL311:
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4533              		.loc 1 3787 3 is_stmt 1 view .LVU1223
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4534              		.loc 1 3788 2 is_stmt 0 view .LVU1224
 4535 000e 7047     		bx	lr
 4536              	.LVL312:
 4537              	.L344:
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4538              		.loc 1 3779 13 view .LVU1225
 4539 0010 0220     		movs	r0, #2
 4540 0012 7047     		bx	lr
 4541              	.L342:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4542              		.loc 1 3773 12 view .LVU1226
 4543 0014 0120     		movs	r0, #1
 4544 0016 7047     		bx	lr
 4545              	.L346:
 4546              		.align	2
 4547              	.L345:
 4548 0018 00000000 		.word	.LANCHOR11
 4549 001c 00000000 		.word	.LANCHOR16
 4550              		.cfi_endproc
 4551              	.LFE42:
 4553              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4554              		.align	1
 4555              		.global	xTaskPriorityInherit
 4556              		.syntax unified
 4557              		.thumb
 4558              		.thumb_func
 4560              	xTaskPriorityInherit:
 4561              	.LVL313:
 4562              	.LFB43:
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4563              		.loc 1 3796 2 is_stmt 1 view -0
 4564              		.cfi_startproc
 4565              		@ args = 0, pretend = 0, frame = 0
 4566              		@ frame_needed = 0, uses_anonymous_args = 0
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4567              		.loc 1 3797 2 view .LVU1228
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4568              		.loc 1 3798 2 view .LVU1229
ARM GAS  /tmp/cc3EZotN.s 			page 192


3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4569              		.loc 1 3803 3 view .LVU1230
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4570              		.loc 1 3803 5 is_stmt 0 view .LVU1231
 4571 0000 0028     		cmp	r0, #0
 4572 0002 51D0     		beq	.L354
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4573              		.loc 1 3796 2 view .LVU1232
 4574 0004 38B5     		push	{r3, r4, r5, lr}
 4575              	.LCFI43:
 4576              		.cfi_def_cfa_offset 16
 4577              		.cfi_offset 3, -16
 4578              		.cfi_offset 4, -12
 4579              		.cfi_offset 5, -8
 4580              		.cfi_offset 14, -4
 4581 0006 0446     		mov	r4, r0
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4582              		.loc 1 3808 4 is_stmt 1 view .LVU1233
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4583              		.loc 1 3808 24 is_stmt 0 view .LVU1234
 4584 0008 C36A     		ldr	r3, [r0, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4585              		.loc 1 3808 51 view .LVU1235
 4586 000a 294A     		ldr	r2, .L361
 4587 000c 1268     		ldr	r2, [r2]
 4588 000e D26A     		ldr	r2, [r2, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4589              		.loc 1 3808 6 view .LVU1236
 4590 0010 9342     		cmp	r3, r2
 4591 0012 41D2     		bcs	.L349
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4592              		.loc 1 3813 5 is_stmt 1 view .LVU1237
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4593              		.loc 1 3813 11 is_stmt 0 view .LVU1238
 4594 0014 8269     		ldr	r2, [r0, #24]
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4595              		.loc 1 3813 7 view .LVU1239
 4596 0016 002A     		cmp	r2, #0
 4597 0018 05DB     		blt	.L350
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4598              		.loc 1 3815 6 is_stmt 1 view .LVU1240
 4599 001a 254A     		ldr	r2, .L361
 4600 001c 1268     		ldr	r2, [r2]
 4601 001e D26A     		ldr	r2, [r2, #44]
 4602 0020 C2F10702 		rsb	r2, r2, #7
 4603 0024 8261     		str	r2, [r0, #24]
 4604              	.L350:
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4605              		.loc 1 3819 30 view .LVU1241
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4606              		.loc 1 3824 5 view .LVU1242
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4607              		.loc 1 3824 9 is_stmt 0 view .LVU1243
 4608 0026 6169     		ldr	r1, [r4, #20]
 4609 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4610 002c 214A     		ldr	r2, .L361+4
 4611 002e 02EB8303 		add	r3, r2, r3, lsl #2
ARM GAS  /tmp/cc3EZotN.s 			page 193


3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4612              		.loc 1 3824 130 view .LVU1244
 4613 0032 9942     		cmp	r1, r3
 4614 0034 05D0     		beq	.L360
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4615              		.loc 1 3842 6 is_stmt 1 view .LVU1245
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4616              		.loc 1 3842 49 is_stmt 0 view .LVU1246
 4617 0036 1E4B     		ldr	r3, .L361
 4618 0038 1B68     		ldr	r3, [r3]
 4619 003a DB6A     		ldr	r3, [r3, #44]
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4620              		.loc 1 3842 35 view .LVU1247
 4621 003c E362     		str	r3, [r4, #44]
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4622              		.loc 1 3848 13 view .LVU1248
 4623 003e 0120     		movs	r0, #1
 4624              	.LVL314:
 4625              	.L347:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4626              		.loc 1 3875 2 view .LVU1249
 4627 0040 38BD     		pop	{r3, r4, r5, pc}
 4628              	.LVL315:
 4629              	.L360:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4630              		.loc 1 3826 6 is_stmt 1 view .LVU1250
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4631              		.loc 1 3826 10 is_stmt 0 view .LVU1251
 4632 0042 251D     		adds	r5, r4, #4
 4633 0044 2846     		mov	r0, r5
 4634              	.LVL316:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4635              		.loc 1 3826 10 view .LVU1252
 4636 0046 FFF7FEFF 		bl	uxListRemove
 4637              	.LVL317:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4638              		.loc 1 3826 8 view .LVU1253
 4639 004a A0B1     		cbz	r0, .L352
 4640              	.L353:
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4641              		.loc 1 3832 31 is_stmt 1 view .LVU1254
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4642              		.loc 1 3836 6 view .LVU1255
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4643              		.loc 1 3836 49 is_stmt 0 view .LVU1256
 4644 004c 184B     		ldr	r3, .L361
 4645 004e 1B68     		ldr	r3, [r3]
 4646 0050 D86A     		ldr	r0, [r3, #44]
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4647              		.loc 1 3836 35 view .LVU1257
 4648 0052 E062     		str	r0, [r4, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4649              		.loc 1 3837 6 is_stmt 1 view .LVU1258
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4650              		.loc 1 3837 6 view .LVU1259
 4651 0054 0124     		movs	r4, #1
 4652              	.LVL318:
ARM GAS  /tmp/cc3EZotN.s 			page 194


3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4653              		.loc 1 3837 6 is_stmt 0 view .LVU1260
 4654 0056 04FA00F3 		lsl	r3, r4, r0
 4655 005a 174A     		ldr	r2, .L361+8
 4656 005c 1168     		ldr	r1, [r2]
 4657 005e 0B43     		orrs	r3, r3, r1
 4658 0060 1360     		str	r3, [r2]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4659              		.loc 1 3837 6 is_stmt 1 view .LVU1261
 4660 0062 00EB8000 		add	r0, r0, r0, lsl #2
 4661 0066 2946     		mov	r1, r5
 4662 0068 124B     		ldr	r3, .L361+4
 4663 006a 03EB8000 		add	r0, r3, r0, lsl #2
 4664 006e FFF7FEFF 		bl	vListInsertEnd
 4665              	.LVL319:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4666              		.loc 1 3837 47 view .LVU1262
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4667              		.loc 1 3848 13 is_stmt 0 view .LVU1263
 4668 0072 2046     		mov	r0, r4
 4669 0074 E4E7     		b	.L347
 4670              	.LVL320:
 4671              	.L352:
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4672              		.loc 1 3828 7 is_stmt 1 view .LVU1264
 4673 0076 E26A     		ldr	r2, [r4, #44]
 4674 0078 02EB8203 		add	r3, r2, r2, lsl #2
 4675 007c 9B00     		lsls	r3, r3, #2
 4676 007e 0D49     		ldr	r1, .L361+4
 4677 0080 CB58     		ldr	r3, [r1, r3]
 4678 0082 002B     		cmp	r3, #0
 4679 0084 E2D1     		bne	.L353
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4680              		.loc 1 3828 7 discriminator 1 view .LVU1265
 4681 0086 0123     		movs	r3, #1
 4682 0088 03FA02F2 		lsl	r2, r3, r2
 4683 008c 0A49     		ldr	r1, .L361+8
 4684 008e 0B68     		ldr	r3, [r1]
 4685 0090 23EA0203 		bic	r3, r3, r2
 4686 0094 0B60     		str	r3, [r1]
 4687 0096 D9E7     		b	.L353
 4688              	.LVL321:
 4689              	.L349:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4690              		.loc 1 3852 5 view .LVU1266
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4691              		.loc 1 3852 25 is_stmt 0 view .LVU1267
 4692 0098 426D     		ldr	r2, [r0, #84]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4693              		.loc 1 3852 56 view .LVU1268
 4694 009a 054B     		ldr	r3, .L361
 4695 009c 1B68     		ldr	r3, [r3]
 4696 009e DB6A     		ldr	r3, [r3, #44]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4697              		.loc 1 3852 7 view .LVU1269
 4698 00a0 9A42     		cmp	r2, r3
 4699 00a2 03D3     		bcc	.L355
ARM GAS  /tmp/cc3EZotN.s 			page 195


3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4700              		.loc 1 3798 13 view .LVU1270
 4701 00a4 0020     		movs	r0, #0
 4702              	.LVL322:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4703              		.loc 1 3798 13 view .LVU1271
 4704 00a6 CBE7     		b	.L347
 4705              	.LVL323:
 4706              	.L354:
 4707              	.LCFI44:
 4708              		.cfi_def_cfa_offset 0
 4709              		.cfi_restore 3
 4710              		.cfi_restore 4
 4711              		.cfi_restore 5
 4712              		.cfi_restore 14
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4713              		.loc 1 3798 13 view .LVU1272
 4714 00a8 0020     		movs	r0, #0
 4715              	.LVL324:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4716              		.loc 1 3875 2 view .LVU1273
 4717 00aa 7047     		bx	lr
 4718              	.LVL325:
 4719              	.L355:
 4720              	.LCFI45:
 4721              		.cfi_def_cfa_offset 16
 4722              		.cfi_offset 3, -16
 4723              		.cfi_offset 4, -12
 4724              		.cfi_offset 5, -8
 4725              		.cfi_offset 14, -4
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4726              		.loc 1 3861 14 view .LVU1274
 4727 00ac 0120     		movs	r0, #1
 4728              	.LVL326:
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4729              		.loc 1 3871 28 is_stmt 1 view .LVU1275
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4730              		.loc 1 3874 3 view .LVU1276
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4731              		.loc 1 3874 10 is_stmt 0 view .LVU1277
 4732 00ae C7E7     		b	.L347
 4733              	.L362:
 4734              		.align	2
 4735              	.L361:
 4736 00b0 00000000 		.word	.LANCHOR10
 4737 00b4 00000000 		.word	.LANCHOR4
 4738 00b8 00000000 		.word	.LANCHOR13
 4739              		.cfi_endproc
 4740              	.LFE43:
 4742              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4743              		.align	1
 4744              		.global	xTaskPriorityDisinherit
 4745              		.syntax unified
 4746              		.thumb
 4747              		.thumb_func
 4749              	xTaskPriorityDisinherit:
 4750              	.LVL327:
ARM GAS  /tmp/cc3EZotN.s 			page 196


 4751              	.LFB44:
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4752              		.loc 1 3883 2 is_stmt 1 view -0
 4753              		.cfi_startproc
 4754              		@ args = 0, pretend = 0, frame = 0
 4755              		@ frame_needed = 0, uses_anonymous_args = 0
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4756              		.loc 1 3884 2 view .LVU1279
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4757              		.loc 1 3885 2 view .LVU1280
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4758              		.loc 1 3887 3 view .LVU1281
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4759              		.loc 1 3887 5 is_stmt 0 view .LVU1282
 4760 0000 0028     		cmp	r0, #0
 4761 0002 4BD0     		beq	.L370
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4762              		.loc 1 3883 2 view .LVU1283
 4763 0004 38B5     		push	{r3, r4, r5, lr}
 4764              	.LCFI46:
 4765              		.cfi_def_cfa_offset 16
 4766              		.cfi_offset 3, -16
 4767              		.cfi_offset 4, -12
 4768              		.cfi_offset 5, -8
 4769              		.cfi_offset 14, -4
 4770 0006 0446     		mov	r4, r0
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4771              		.loc 1 3893 4 is_stmt 1 view .LVU1284
 4772 0008 264B     		ldr	r3, .L378
 4773 000a 1B68     		ldr	r3, [r3]
 4774 000c 8342     		cmp	r3, r0
 4775 000e 08D0     		beq	.L365
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4776              		.loc 1 3893 4 view .LVU1285
 4777              	.LBB187:
 4778              	.LBI187:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4779              		.loc 2 191 30 view .LVU1286
 4780              	.LBB188:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4781              		.loc 2 193 1 view .LVU1287
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4782              		.loc 2 195 2 view .LVU1288
 4783              		.syntax unified
 4784              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4785 0010 4FF05003 			mov r3, #80												
 4786 0014 83F31188 		msr basepri, r3											
 4787 0018 BFF36F8F 		isb														
 4788 001c BFF34F8F 		dsb														
 4789              	
 4790              	@ 0 "" 2
 4791              	.LVL328:
 4792              		.thumb
 4793              		.syntax unified
 4794              	.L366:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4795              		.loc 2 195 2 is_stmt 0 view .LVU1289
ARM GAS  /tmp/cc3EZotN.s 			page 197


 4796              	.LBE188:
 4797              	.LBE187:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4798              		.loc 1 3893 4 is_stmt 1 discriminator 1 view .LVU1290
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4799              		.loc 1 3893 4 discriminator 1 view .LVU1291
 4800 0020 FEE7     		b	.L366
 4801              	.L365:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4802              		.loc 1 3893 41 discriminator 2 view .LVU1292
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4803              		.loc 1 3894 4 discriminator 2 view .LVU1293
 4804 0022 836D     		ldr	r3, [r0, #88]
 4805 0024 43B9     		cbnz	r3, .L367
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4806              		.loc 1 3894 4 view .LVU1294
 4807              	.LBB189:
 4808              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4809              		.loc 2 191 30 view .LVU1295
 4810              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4811              		.loc 2 193 1 view .LVU1296
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4812              		.loc 2 195 2 view .LVU1297
 4813              		.syntax unified
 4814              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4815 0026 4FF05003 			mov r3, #80												
 4816 002a 83F31188 		msr basepri, r3											
 4817 002e BFF36F8F 		isb														
 4818 0032 BFF34F8F 		dsb														
 4819              	
 4820              	@ 0 "" 2
 4821              	.LVL329:
 4822              		.thumb
 4823              		.syntax unified
 4824              	.L368:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4825              		.loc 2 195 2 is_stmt 0 view .LVU1298
 4826              	.LBE190:
 4827              	.LBE189:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4828              		.loc 1 3894 4 is_stmt 1 discriminator 2 view .LVU1299
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4829              		.loc 1 3894 4 discriminator 2 view .LVU1300
 4830 0036 FEE7     		b	.L368
 4831              	.L367:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4832              		.loc 1 3894 40 discriminator 2 view .LVU1301
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4833              		.loc 1 3895 4 discriminator 2 view .LVU1302
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4834              		.loc 1 3895 28 is_stmt 0 discriminator 2 view .LVU1303
 4835 0038 013B     		subs	r3, r3, #1
 4836 003a 8365     		str	r3, [r0, #88]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4837              		.loc 1 3899 4 is_stmt 1 discriminator 2 view .LVU1304
ARM GAS  /tmp/cc3EZotN.s 			page 198


3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4838              		.loc 1 3899 13 is_stmt 0 discriminator 2 view .LVU1305
 4839 003c C16A     		ldr	r1, [r0, #44]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4840              		.loc 1 3899 34 discriminator 2 view .LVU1306
 4841 003e 426D     		ldr	r2, [r0, #84]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4842              		.loc 1 3899 6 discriminator 2 view .LVU1307
 4843 0040 9142     		cmp	r1, r2
 4844 0042 2DD0     		beq	.L371
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4845              		.loc 1 3902 5 is_stmt 1 view .LVU1308
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4846              		.loc 1 3902 7 is_stmt 0 view .LVU1309
 4847 0044 0BB1     		cbz	r3, .L377
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4848              		.loc 1 3885 13 view .LVU1310
 4849 0046 0020     		movs	r0, #0
 4850              	.LVL330:
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4851              		.loc 1 3951 28 is_stmt 1 view .LVU1311
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4852              		.loc 1 3954 3 view .LVU1312
 4853              	.L363:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4854              		.loc 1 3955 2 is_stmt 0 view .LVU1313
 4855 0048 38BD     		pop	{r3, r4, r5, pc}
 4856              	.LVL331:
 4857              	.L377:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4858              		.loc 1 3909 6 is_stmt 1 view .LVU1314
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4859              		.loc 1 3909 10 is_stmt 0 view .LVU1315
 4860 004a 051D     		adds	r5, r0, #4
 4861 004c 2846     		mov	r0, r5
 4862              	.LVL332:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4863              		.loc 1 3909 10 view .LVU1316
 4864 004e FFF7FEFF 		bl	uxListRemove
 4865              	.LVL333:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4866              		.loc 1 3909 8 view .LVU1317
 4867 0052 68B9     		cbnz	r0, .L369
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4868              		.loc 1 3911 7 is_stmt 1 view .LVU1318
 4869 0054 E36A     		ldr	r3, [r4, #44]
 4870 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4871 005a 9200     		lsls	r2, r2, #2
 4872 005c 1249     		ldr	r1, .L378+4
 4873 005e 8A58     		ldr	r2, [r1, r2]
 4874 0060 32B9     		cbnz	r2, .L369
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4875              		.loc 1 3911 7 discriminator 1 view .LVU1319
 4876 0062 0122     		movs	r2, #1
 4877 0064 9A40     		lsls	r2, r2, r3
 4878 0066 1149     		ldr	r1, .L378+8
 4879 0068 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/cc3EZotN.s 			page 199


 4880 006a 23EA0203 		bic	r3, r3, r2
 4881 006e 0B60     		str	r3, [r1]
 4882              	.L369:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4883              		.loc 1 3915 31 view .LVU1320
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4884              		.loc 1 3920 67 view .LVU1321
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4885              		.loc 1 3921 6 view .LVU1322
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4886              		.loc 1 3921 31 is_stmt 0 view .LVU1323
 4887 0070 606D     		ldr	r0, [r4, #84]
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4888              		.loc 1 3921 24 view .LVU1324
 4889 0072 E062     		str	r0, [r4, #44]
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4890              		.loc 1 3926 6 is_stmt 1 view .LVU1325
 4891 0074 C0F10703 		rsb	r3, r0, #7
 4892 0078 A361     		str	r3, [r4, #24]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4893              		.loc 1 3927 6 view .LVU1326
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4894              		.loc 1 3927 6 view .LVU1327
 4895 007a 0124     		movs	r4, #1
 4896              	.LVL334:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4897              		.loc 1 3927 6 is_stmt 0 view .LVU1328
 4898 007c 04FA00F3 		lsl	r3, r4, r0
 4899 0080 0A4A     		ldr	r2, .L378+8
 4900 0082 1168     		ldr	r1, [r2]
 4901 0084 0B43     		orrs	r3, r3, r1
 4902 0086 1360     		str	r3, [r2]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4903              		.loc 1 3927 6 is_stmt 1 view .LVU1329
 4904 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4905 008c 2946     		mov	r1, r5
 4906 008e 064B     		ldr	r3, .L378+4
 4907 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4908 0094 FFF7FEFF 		bl	vListInsertEnd
 4909              	.LVL335:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4910              		.loc 1 3927 36 view .LVU1330
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4911              		.loc 1 3937 6 view .LVU1331
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4912              		.loc 1 3937 14 is_stmt 0 view .LVU1332
 4913 0098 2046     		mov	r0, r4
 4914 009a D5E7     		b	.L363
 4915              	.LVL336:
 4916              	.L370:
 4917              	.LCFI47:
 4918              		.cfi_def_cfa_offset 0
 4919              		.cfi_restore 3
 4920              		.cfi_restore 4
 4921              		.cfi_restore 5
 4922              		.cfi_restore 14
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc3EZotN.s 			page 200


 4923              		.loc 1 3885 13 view .LVU1333
 4924 009c 0020     		movs	r0, #0
 4925              	.LVL337:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 3955 2 view .LVU1334
 4927 009e 7047     		bx	lr
 4928              	.LVL338:
 4929              	.L371:
 4930              	.LCFI48:
 4931              		.cfi_def_cfa_offset 16
 4932              		.cfi_offset 3, -16
 4933              		.cfi_offset 4, -12
 4934              		.cfi_offset 5, -8
 4935              		.cfi_offset 14, -4
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4936              		.loc 1 3885 13 view .LVU1335
 4937 00a0 0020     		movs	r0, #0
 4938              	.LVL339:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4939              		.loc 1 3885 13 view .LVU1336
 4940 00a2 D1E7     		b	.L363
 4941              	.L379:
 4942              		.align	2
 4943              	.L378:
 4944 00a4 00000000 		.word	.LANCHOR10
 4945 00a8 00000000 		.word	.LANCHOR4
 4946 00ac 00000000 		.word	.LANCHOR13
 4947              		.cfi_endproc
 4948              	.LFE44:
 4950              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4951              		.align	1
 4952              		.global	vTaskPriorityDisinheritAfterTimeout
 4953              		.syntax unified
 4954              		.thumb
 4955              		.thumb_func
 4957              	vTaskPriorityDisinheritAfterTimeout:
 4958              	.LVL340:
 4959              	.LFB45:
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4960              		.loc 1 3963 2 is_stmt 1 view -0
 4961              		.cfi_startproc
 4962              		@ args = 0, pretend = 0, frame = 0
 4963              		@ frame_needed = 0, uses_anonymous_args = 0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4964              		.loc 1 3964 2 view .LVU1338
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4965              		.loc 1 3965 2 view .LVU1339
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4966              		.loc 1 3966 2 view .LVU1340
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4967              		.loc 1 3968 3 view .LVU1341
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4968              		.loc 1 3968 5 is_stmt 0 view .LVU1342
 4969 0000 0028     		cmp	r0, #0
 4970 0002 55D0     		beq	.L390
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4971              		.loc 1 3963 2 view .LVU1343
ARM GAS  /tmp/cc3EZotN.s 			page 201


 4972 0004 38B5     		push	{r3, r4, r5, lr}
 4973              	.LCFI49:
 4974              		.cfi_def_cfa_offset 16
 4975              		.cfi_offset 3, -16
 4976              		.cfi_offset 4, -12
 4977              		.cfi_offset 5, -8
 4978              		.cfi_offset 14, -4
 4979 0006 0446     		mov	r4, r0
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4980              		.loc 1 3972 4 is_stmt 1 view .LVU1344
 4981 0008 836D     		ldr	r3, [r0, #88]
 4982 000a 43B9     		cbnz	r3, .L382
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4983              		.loc 1 3972 4 view .LVU1345
 4984              	.LBB191:
 4985              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4986              		.loc 2 191 30 view .LVU1346
 4987              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4988              		.loc 2 193 1 view .LVU1347
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4989              		.loc 2 195 2 view .LVU1348
 4990              		.syntax unified
 4991              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4992 000c 4FF05003 			mov r3, #80												
 4993 0010 83F31188 		msr basepri, r3											
 4994 0014 BFF36F8F 		isb														
 4995 0018 BFF34F8F 		dsb														
 4996              	
 4997              	@ 0 "" 2
 4998              	.LVL341:
 4999              		.thumb
 5000              		.syntax unified
 5001              	.L383:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5002              		.loc 2 195 2 is_stmt 0 view .LVU1349
 5003              	.LBE192:
 5004              	.LBE191:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5005              		.loc 1 3972 4 is_stmt 1 discriminator 1 view .LVU1350
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5006              		.loc 1 3972 4 discriminator 1 view .LVU1351
 5007 001c FEE7     		b	.L383
 5008              	.L382:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5009              		.loc 1 3972 40 discriminator 2 view .LVU1352
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5010              		.loc 1 3978 4 discriminator 2 view .LVU1353
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5011              		.loc 1 3978 13 is_stmt 0 discriminator 2 view .LVU1354
 5012 001e 426D     		ldr	r2, [r0, #84]
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5013              		.loc 1 3978 6 discriminator 2 view .LVU1355
 5014 0020 8A42     		cmp	r2, r1
 5015 0022 00D2     		bcs	.L384
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 202


 5016              		.loc 1 3980 21 view .LVU1356
 5017 0024 0A46     		mov	r2, r1
 5018              	.L384:
 5019              	.LVL342:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5020              		.loc 1 3988 4 is_stmt 1 view .LVU1357
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5021              		.loc 1 3988 13 is_stmt 0 view .LVU1358
 5022 0026 E16A     		ldr	r1, [r4, #44]
 5023              	.LVL343:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5024              		.loc 1 3988 6 view .LVU1359
 5025 0028 9142     		cmp	r1, r2
 5026 002a 01D0     		beq	.L380
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5027              		.loc 1 3994 5 is_stmt 1 view .LVU1360
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5028              		.loc 1 3994 7 is_stmt 0 view .LVU1361
 5029 002c 012B     		cmp	r3, #1
 5030 002e 00D0     		beq	.L393
 5031              	.LVL344:
 5032              	.L380:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5033              		.loc 1 4057 2 view .LVU1362
 5034 0030 38BD     		pop	{r3, r4, r5, pc}
 5035              	.LVL345:
 5036              	.L393:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5037              		.loc 1 3999 6 is_stmt 1 view .LVU1363
 5038 0032 204B     		ldr	r3, .L395
 5039 0034 1B68     		ldr	r3, [r3]
 5040 0036 A342     		cmp	r3, r4
 5041 0038 31D0     		beq	.L394
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5042              		.loc 1 3999 43 discriminator 2 view .LVU1364
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5043              		.loc 1 4004 67 discriminator 2 view .LVU1365
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5044              		.loc 1 4005 6 discriminator 2 view .LVU1366
 5045              	.LVL346:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5046              		.loc 1 4006 6 discriminator 2 view .LVU1367
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5047              		.loc 1 4006 24 is_stmt 0 discriminator 2 view .LVU1368
 5048 003a E262     		str	r2, [r4, #44]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5049              		.loc 1 4010 6 is_stmt 1 discriminator 2 view .LVU1369
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5050              		.loc 1 4010 12 is_stmt 0 discriminator 2 view .LVU1370
 5051 003c A369     		ldr	r3, [r4, #24]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5052              		.loc 1 4010 8 discriminator 2 view .LVU1371
 5053 003e 002B     		cmp	r3, #0
 5054 0040 02DB     		blt	.L387
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5055              		.loc 1 4012 7 is_stmt 1 view .LVU1372
 5056 0042 C2F10702 		rsb	r2, r2, #7
ARM GAS  /tmp/cc3EZotN.s 			page 203


 5057              	.LVL347:
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5058              		.loc 1 4012 7 is_stmt 0 view .LVU1373
 5059 0046 A261     		str	r2, [r4, #24]
 5060              	.L387:
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5061              		.loc 1 4016 31 is_stmt 1 view .LVU1374
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5062              		.loc 1 4025 6 view .LVU1375
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5063              		.loc 1 4025 10 is_stmt 0 view .LVU1376
 5064 0048 6269     		ldr	r2, [r4, #20]
 5065 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5066              	.LVL348:
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5067              		.loc 1 4025 10 view .LVU1377
 5068 004e 1A4B     		ldr	r3, .L395+4
 5069 0050 03EB8103 		add	r3, r3, r1, lsl #2
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5070              		.loc 1 4025 113 view .LVU1378
 5071 0054 9A42     		cmp	r2, r3
 5072 0056 EBD1     		bne	.L380
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5073              		.loc 1 4027 7 is_stmt 1 view .LVU1379
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5074              		.loc 1 4027 11 is_stmt 0 view .LVU1380
 5075 0058 251D     		adds	r5, r4, #4
 5076 005a 2846     		mov	r0, r5
 5077              	.LVL349:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5078              		.loc 1 4027 11 view .LVU1381
 5079 005c FFF7FEFF 		bl	uxListRemove
 5080              	.LVL350:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5081              		.loc 1 4027 9 view .LVU1382
 5082 0060 68B9     		cbnz	r0, .L388
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5083              		.loc 1 4029 8 is_stmt 1 view .LVU1383
 5084 0062 E36A     		ldr	r3, [r4, #44]
 5085 0064 03EB8302 		add	r2, r3, r3, lsl #2
 5086 0068 9200     		lsls	r2, r2, #2
 5087 006a 1349     		ldr	r1, .L395+4
 5088 006c 8A58     		ldr	r2, [r1, r2]
 5089 006e 32B9     		cbnz	r2, .L388
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5090              		.loc 1 4029 8 discriminator 1 view .LVU1384
 5091 0070 0122     		movs	r2, #1
 5092 0072 9A40     		lsls	r2, r2, r3
 5093 0074 1149     		ldr	r1, .L395+8
 5094 0076 0B68     		ldr	r3, [r1]
 5095 0078 23EA0203 		bic	r3, r3, r2
 5096 007c 0B60     		str	r3, [r1]
 5097              	.L388:
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5098              		.loc 1 4033 32 view .LVU1385
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5099              		.loc 1 4036 7 view .LVU1386
ARM GAS  /tmp/cc3EZotN.s 			page 204


4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5100              		.loc 1 4036 7 view .LVU1387
 5101 007e E06A     		ldr	r0, [r4, #44]
 5102 0080 0123     		movs	r3, #1
 5103 0082 8340     		lsls	r3, r3, r0
 5104 0084 0D4A     		ldr	r2, .L395+8
 5105 0086 1168     		ldr	r1, [r2]
 5106 0088 0B43     		orrs	r3, r3, r1
 5107 008a 1360     		str	r3, [r2]
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5108              		.loc 1 4036 7 view .LVU1388
 5109 008c 00EB8000 		add	r0, r0, r0, lsl #2
 5110 0090 2946     		mov	r1, r5
 5111 0092 094B     		ldr	r3, .L395+4
 5112 0094 03EB8000 		add	r0, r3, r0, lsl #2
 5113 0098 FFF7FEFF 		bl	vListInsertEnd
 5114              	.LVL351:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5115              		.loc 1 4036 37 view .LVU1389
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5116              		.loc 1 4055 28 view .LVU1390
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5117              		.loc 1 4057 2 is_stmt 0 view .LVU1391
 5118 009c C8E7     		b	.L380
 5119              	.LVL352:
 5120              	.L394:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5121              		.loc 1 3999 6 is_stmt 1 view .LVU1392
 5122              	.LBB193:
 5123              	.LBI193:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5124              		.loc 2 191 30 view .LVU1393
 5125              	.LBB194:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5126              		.loc 2 193 1 view .LVU1394
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5127              		.loc 2 195 2 view .LVU1395
 5128              		.syntax unified
 5129              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5130 009e 4FF05003 			mov r3, #80												
 5131 00a2 83F31188 		msr basepri, r3											
 5132 00a6 BFF36F8F 		isb														
 5133 00aa BFF34F8F 		dsb														
 5134              	
 5135              	@ 0 "" 2
 5136              	.LVL353:
 5137              		.thumb
 5138              		.syntax unified
 5139              	.L386:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5140              		.loc 2 195 2 is_stmt 0 view .LVU1396
 5141              	.LBE194:
 5142              	.LBE193:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5143              		.loc 1 3999 6 is_stmt 1 discriminator 2 view .LVU1397
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5144              		.loc 1 3999 6 discriminator 2 view .LVU1398
ARM GAS  /tmp/cc3EZotN.s 			page 205


 5145 00ae FEE7     		b	.L386
 5146              	.LVL354:
 5147              	.L390:
 5148              	.LCFI50:
 5149              		.cfi_def_cfa_offset 0
 5150              		.cfi_restore 3
 5151              		.cfi_restore 4
 5152              		.cfi_restore 5
 5153              		.cfi_restore 14
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5154              		.loc 1 3999 6 is_stmt 0 discriminator 2 view .LVU1399
 5155 00b0 7047     		bx	lr
 5156              	.L396:
 5157 00b2 00BF     		.align	2
 5158              	.L395:
 5159 00b4 00000000 		.word	.LANCHOR10
 5160 00b8 00000000 		.word	.LANCHOR4
 5161 00bc 00000000 		.word	.LANCHOR13
 5162              		.cfi_endproc
 5163              	.LFE45:
 5165              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5166              		.align	1
 5167              		.global	uxTaskResetEventItemValue
 5168              		.syntax unified
 5169              		.thumb
 5170              		.thumb_func
 5172              	uxTaskResetEventItemValue:
 5173              	.LFB46:
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5174              		.loc 1 4377 1 is_stmt 1 view -0
 5175              		.cfi_startproc
 5176              		@ args = 0, pretend = 0, frame = 0
 5177              		@ frame_needed = 0, uses_anonymous_args = 0
 5178              		@ link register save eliminated.
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5179              		.loc 1 4378 1 view .LVU1401
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5180              		.loc 1 4380 2 view .LVU1402
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5181              		.loc 1 4380 13 is_stmt 0 view .LVU1403
 5182 0000 044A     		ldr	r2, .L398
 5183 0002 1368     		ldr	r3, [r2]
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5184              		.loc 1 4380 11 view .LVU1404
 5185 0004 9869     		ldr	r0, [r3, #24]
 5186              	.LVL355:
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5187              		.loc 1 4384 2 is_stmt 1 view .LVU1405
 5188 0006 1368     		ldr	r3, [r2]
 5189 0008 DB6A     		ldr	r3, [r3, #44]
 5190 000a 1268     		ldr	r2, [r2]
 5191 000c C3F10703 		rsb	r3, r3, #7
 5192 0010 9361     		str	r3, [r2, #24]
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5193              		.loc 1 4386 2 view .LVU1406
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5194              		.loc 1 4387 1 is_stmt 0 view .LVU1407
ARM GAS  /tmp/cc3EZotN.s 			page 206


 5195 0012 7047     		bx	lr
 5196              	.L399:
 5197              		.align	2
 5198              	.L398:
 5199 0014 00000000 		.word	.LANCHOR10
 5200              		.cfi_endproc
 5201              	.LFE46:
 5203              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5204              		.align	1
 5205              		.global	pvTaskIncrementMutexHeldCount
 5206              		.syntax unified
 5207              		.thumb
 5208              		.thumb_func
 5210              	pvTaskIncrementMutexHeldCount:
 5211              	.LFB47:
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5212              		.loc 1 4393 2 is_stmt 1 view -0
 5213              		.cfi_startproc
 5214              		@ args = 0, pretend = 0, frame = 0
 5215              		@ frame_needed = 0, uses_anonymous_args = 0
 5216              		@ link register save eliminated.
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5217              		.loc 1 4396 3 view .LVU1409
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5218              		.loc 1 4396 20 is_stmt 0 view .LVU1410
 5219 0000 054B     		ldr	r3, .L402
 5220 0002 1B68     		ldr	r3, [r3]
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5221              		.loc 1 4396 5 view .LVU1411
 5222 0004 23B1     		cbz	r3, .L401
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5223              		.loc 1 4398 4 is_stmt 1 view .LVU1412
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5224              		.loc 1 4398 18 is_stmt 0 view .LVU1413
 5225 0006 044B     		ldr	r3, .L402
 5226 0008 1A68     		ldr	r2, [r3]
 5227 000a 936D     		ldr	r3, [r2, #88]
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5228              		.loc 1 4398 35 view .LVU1414
 5229 000c 0133     		adds	r3, r3, #1
 5230 000e 9365     		str	r3, [r2, #88]
 5231              	.L401:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5232              		.loc 1 4401 3 is_stmt 1 view .LVU1415
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5233              		.loc 1 4401 10 is_stmt 0 view .LVU1416
 5234 0010 014B     		ldr	r3, .L402
 5235 0012 1868     		ldr	r0, [r3]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5236              		.loc 1 4402 2 view .LVU1417
 5237 0014 7047     		bx	lr
 5238              	.L403:
 5239 0016 00BF     		.align	2
 5240              	.L402:
 5241 0018 00000000 		.word	.LANCHOR10
 5242              		.cfi_endproc
 5243              	.LFE47:
ARM GAS  /tmp/cc3EZotN.s 			page 207


 5245              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5246              		.align	1
 5247              		.global	ulTaskNotifyTake
 5248              		.syntax unified
 5249              		.thumb
 5250              		.thumb_func
 5252              	ulTaskNotifyTake:
 5253              	.LVL356:
 5254              	.LFB48:
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5255              		.loc 1 4410 2 is_stmt 1 view -0
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 0
 5258              		@ frame_needed = 0, uses_anonymous_args = 0
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5259              		.loc 1 4410 2 is_stmt 0 view .LVU1419
 5260 0000 38B5     		push	{r3, r4, r5, lr}
 5261              	.LCFI51:
 5262              		.cfi_def_cfa_offset 16
 5263              		.cfi_offset 3, -16
 5264              		.cfi_offset 4, -12
 5265              		.cfi_offset 5, -8
 5266              		.cfi_offset 14, -4
 5267 0002 0546     		mov	r5, r0
 5268 0004 0C46     		mov	r4, r1
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5269              		.loc 1 4411 2 is_stmt 1 view .LVU1420
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5270              		.loc 1 4413 3 view .LVU1421
 5271 0006 FFF7FEFF 		bl	vPortEnterCritical
 5272              	.LVL357:
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5273              		.loc 1 4416 4 view .LVU1422
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5274              		.loc 1 4416 20 is_stmt 0 view .LVU1423
 5275 000a 1C4B     		ldr	r3, .L410
 5276 000c 1B68     		ldr	r3, [r3]
 5277 000e D3F88834 		ldr	r3, [r3, #1160]
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5278              		.loc 1 4416 6 view .LVU1424
 5279 0012 2BB9     		cbnz	r3, .L405
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5280              		.loc 1 4419 5 is_stmt 1 view .LVU1425
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5281              		.loc 1 4419 17 is_stmt 0 view .LVU1426
 5282 0014 194B     		ldr	r3, .L410
 5283 0016 1B68     		ldr	r3, [r3]
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5284              		.loc 1 4419 33 view .LVU1427
 5285 0018 0122     		movs	r2, #1
 5286 001a 83F88C24 		strb	r2, [r3, #1164]
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5287              		.loc 1 4421 5 is_stmt 1 view .LVU1428
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5288              		.loc 1 4421 7 is_stmt 0 view .LVU1429
 5289 001e BCB9     		cbnz	r4, .L409
 5290              	.L405:
ARM GAS  /tmp/cc3EZotN.s 			page 208


4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5291              		.loc 1 4439 29 is_stmt 1 view .LVU1430
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5292              		.loc 1 4442 3 view .LVU1431
 5293 0020 FFF7FEFF 		bl	vPortExitCritical
 5294              	.LVL358:
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5295              		.loc 1 4444 3 view .LVU1432
 5296 0024 FFF7FEFF 		bl	vPortEnterCritical
 5297              	.LVL359:
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5298              		.loc 1 4446 27 view .LVU1433
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5299              		.loc 1 4447 4 view .LVU1434
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5300              		.loc 1 4447 27 is_stmt 0 view .LVU1435
 5301 0028 144B     		ldr	r3, .L410
 5302 002a 1B68     		ldr	r3, [r3]
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5303              		.loc 1 4447 13 view .LVU1436
 5304 002c D3F88844 		ldr	r4, [r3, #1160]
 5305              	.LVL360:
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5306              		.loc 1 4449 4 is_stmt 1 view .LVU1437
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5307              		.loc 1 4449 6 is_stmt 0 view .LVU1438
 5308 0030 2CB1     		cbz	r4, .L406
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5309              		.loc 1 4451 5 is_stmt 1 view .LVU1439
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5310              		.loc 1 4451 7 is_stmt 0 view .LVU1440
 5311 0032 E5B1     		cbz	r5, .L407
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5312              		.loc 1 4453 6 is_stmt 1 view .LVU1441
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5313              		.loc 1 4453 18 is_stmt 0 view .LVU1442
 5314 0034 114B     		ldr	r3, .L410
 5315 0036 1B68     		ldr	r3, [r3]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5316              		.loc 1 4453 36 view .LVU1443
 5317 0038 0022     		movs	r2, #0
 5318 003a C3F88824 		str	r2, [r3, #1160]
 5319              	.L406:
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5320              		.loc 1 4462 29 is_stmt 1 view .LVU1444
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5321              		.loc 1 4465 4 view .LVU1445
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5322              		.loc 1 4465 16 is_stmt 0 view .LVU1446
 5323 003e 0F4B     		ldr	r3, .L410
 5324 0040 1B68     		ldr	r3, [r3]
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5325              		.loc 1 4465 32 view .LVU1447
 5326 0042 0022     		movs	r2, #0
 5327 0044 83F88C24 		strb	r2, [r3, #1164]
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5328              		.loc 1 4467 3 is_stmt 1 view .LVU1448
ARM GAS  /tmp/cc3EZotN.s 			page 209


 5329 0048 FFF7FEFF 		bl	vPortExitCritical
 5330              	.LVL361:
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5331              		.loc 1 4469 3 view .LVU1449
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5332              		.loc 1 4470 2 is_stmt 0 view .LVU1450
 5333 004c 2046     		mov	r0, r4
 5334 004e 38BD     		pop	{r3, r4, r5, pc}
 5335              	.LVL362:
 5336              	.L409:
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5337              		.loc 1 4423 6 is_stmt 1 view .LVU1451
 5338 0050 1146     		mov	r1, r2
 5339 0052 2046     		mov	r0, r4
 5340 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5341              	.LVL363:
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5342              		.loc 1 4424 35 view .LVU1452
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5343              		.loc 1 4430 6 view .LVU1453
 5344 0058 4FF0E023 		mov	r3, #-536813568
 5345 005c 4FF08052 		mov	r2, #268435456
 5346 0060 C3F8042D 		str	r2, [r3, #3332]
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5347              		.loc 1 4430 6 view .LVU1454
 5348              		.syntax unified
 5349              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5350 0064 BFF34F8F 		dsb
 5351              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5352              		.loc 1 4430 6 view .LVU1455
 5353              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5354 0068 BFF36F8F 		isb
 5355              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5356              		.loc 1 4430 28 view .LVU1456
 5357              		.thumb
 5358              		.syntax unified
 5359 006c D8E7     		b	.L405
 5360              	.LVL364:
 5361              	.L407:
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5362              		.loc 1 4457 6 view .LVU1457
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5363              		.loc 1 4457 18 is_stmt 0 view .LVU1458
 5364 006e 034B     		ldr	r3, .L410
 5365 0070 1B68     		ldr	r3, [r3]
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5366              		.loc 1 4457 47 view .LVU1459
 5367 0072 621E     		subs	r2, r4, #1
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5368              		.loc 1 4457 36 view .LVU1460
 5369 0074 C3F88824 		str	r2, [r3, #1160]
 5370 0078 E1E7     		b	.L406
 5371              	.L411:
 5372 007a 00BF     		.align	2
 5373              	.L410:
ARM GAS  /tmp/cc3EZotN.s 			page 210


 5374 007c 00000000 		.word	.LANCHOR10
 5375              		.cfi_endproc
 5376              	.LFE48:
 5378              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5379              		.align	1
 5380              		.global	xTaskNotifyWait
 5381              		.syntax unified
 5382              		.thumb
 5383              		.thumb_func
 5385              	xTaskNotifyWait:
 5386              	.LVL365:
 5387              	.LFB49:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5388              		.loc 1 4478 2 is_stmt 1 view -0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5392              		.loc 1 4478 2 is_stmt 0 view .LVU1462
 5393 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5394              	.LCFI52:
 5395              		.cfi_def_cfa_offset 24
 5396              		.cfi_offset 3, -24
 5397              		.cfi_offset 4, -20
 5398              		.cfi_offset 5, -16
 5399              		.cfi_offset 6, -12
 5400              		.cfi_offset 7, -8
 5401              		.cfi_offset 14, -4
 5402 0002 0646     		mov	r6, r0
 5403 0004 0F46     		mov	r7, r1
 5404 0006 1446     		mov	r4, r2
 5405 0008 1D46     		mov	r5, r3
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5406              		.loc 1 4479 2 is_stmt 1 view .LVU1463
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5407              		.loc 1 4481 3 view .LVU1464
 5408 000a FFF7FEFF 		bl	vPortEnterCritical
 5409              	.LVL366:
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5410              		.loc 1 4484 4 view .LVU1465
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5411              		.loc 1 4484 20 is_stmt 0 view .LVU1466
 5412 000e 244B     		ldr	r3, .L420
 5413 0010 1B68     		ldr	r3, [r3]
 5414 0012 93F88C24 		ldrb	r2, [r3, #1164]	@ zero_extendqisi2
 5415 0016 D2B2     		uxtb	r2, r2
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5416              		.loc 1 4484 6 view .LVU1467
 5417 0018 022A     		cmp	r2, #2
 5418 001a 0CD0     		beq	.L413
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5419              		.loc 1 4489 5 is_stmt 1 view .LVU1468
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5420              		.loc 1 4489 35 is_stmt 0 view .LVU1469
 5421 001c 204A     		ldr	r2, .L420
 5422 001e 1168     		ldr	r1, [r2]
 5423 0020 D1F88834 		ldr	r3, [r1, #1160]
ARM GAS  /tmp/cc3EZotN.s 			page 211


 5424 0024 23EA0603 		bic	r3, r3, r6
 5425 0028 C1F88834 		str	r3, [r1, #1160]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5426              		.loc 1 4492 5 is_stmt 1 view .LVU1470
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5427              		.loc 1 4492 17 is_stmt 0 view .LVU1471
 5428 002c 1368     		ldr	r3, [r2]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5429              		.loc 1 4492 33 view .LVU1472
 5430 002e 0122     		movs	r2, #1
 5431 0030 83F88C24 		strb	r2, [r3, #1164]
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5432              		.loc 1 4494 5 is_stmt 1 view .LVU1473
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5433              		.loc 1 4494 7 is_stmt 0 view .LVU1474
 5434 0034 D5B9     		cbnz	r5, .L418
 5435              	.L413:
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5436              		.loc 1 4512 29 is_stmt 1 view .LVU1475
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5437              		.loc 1 4515 3 view .LVU1476
 5438 0036 FFF7FEFF 		bl	vPortExitCritical
 5439              	.LVL367:
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5440              		.loc 1 4517 3 view .LVU1477
 5441 003a FFF7FEFF 		bl	vPortEnterCritical
 5442              	.LVL368:
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5443              		.loc 1 4519 27 view .LVU1478
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5444              		.loc 1 4521 4 view .LVU1479
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5445              		.loc 1 4521 6 is_stmt 0 view .LVU1480
 5446 003e 24B1     		cbz	r4, .L414
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5447              		.loc 1 4525 5 is_stmt 1 view .LVU1481
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5448              		.loc 1 4525 41 is_stmt 0 view .LVU1482
 5449 0040 174B     		ldr	r3, .L420
 5450 0042 1B68     		ldr	r3, [r3]
 5451 0044 D3F88834 		ldr	r3, [r3, #1160]
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5452              		.loc 1 4525 27 view .LVU1483
 5453 0048 2360     		str	r3, [r4]
 5454              	.L414:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5455              		.loc 1 4532 4 is_stmt 1 view .LVU1484
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5456              		.loc 1 4532 20 is_stmt 0 view .LVU1485
 5457 004a 154B     		ldr	r3, .L420
 5458 004c 1B68     		ldr	r3, [r3]
 5459 004e 93F88C34 		ldrb	r3, [r3, #1164]	@ zero_extendqisi2
 5460 0052 DBB2     		uxtb	r3, r3
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5461              		.loc 1 4532 6 view .LVU1486
 5462 0054 022B     		cmp	r3, #2
 5463 0056 18D0     		beq	.L419
ARM GAS  /tmp/cc3EZotN.s 			page 212


4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5464              		.loc 1 4535 13 view .LVU1487
 5465 0058 0024     		movs	r4, #0
 5466              	.LVL369:
 5467              	.L415:
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5468              		.loc 1 4545 4 is_stmt 1 view .LVU1488
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5469              		.loc 1 4545 16 is_stmt 0 view .LVU1489
 5470 005a 114B     		ldr	r3, .L420
 5471 005c 1B68     		ldr	r3, [r3]
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5472              		.loc 1 4545 32 view .LVU1490
 5473 005e 0022     		movs	r2, #0
 5474 0060 83F88C24 		strb	r2, [r3, #1164]
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5475              		.loc 1 4547 3 is_stmt 1 view .LVU1491
 5476 0064 FFF7FEFF 		bl	vPortExitCritical
 5477              	.LVL370:
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5478              		.loc 1 4549 3 view .LVU1492
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5479              		.loc 1 4550 2 is_stmt 0 view .LVU1493
 5480 0068 2046     		mov	r0, r4
 5481 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5482              	.LVL371:
 5483              	.L418:
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5484              		.loc 1 4496 6 is_stmt 1 view .LVU1494
 5485 006c 1146     		mov	r1, r2
 5486 006e 2846     		mov	r0, r5
 5487 0070 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5488              	.LVL372:
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5489              		.loc 1 4497 35 view .LVU1495
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5490              		.loc 1 4503 6 view .LVU1496
 5491 0074 4FF0E023 		mov	r3, #-536813568
 5492 0078 4FF08052 		mov	r2, #268435456
 5493 007c C3F8042D 		str	r2, [r3, #3332]
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5494              		.loc 1 4503 6 view .LVU1497
 5495              		.syntax unified
 5496              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5497 0080 BFF34F8F 		dsb
 5498              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5499              		.loc 1 4503 6 view .LVU1498
 5500              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5501 0084 BFF36F8F 		isb
 5502              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5503              		.loc 1 4503 28 view .LVU1499
 5504              		.thumb
 5505              		.syntax unified
 5506 0088 D5E7     		b	.L413
 5507              	.L419:
ARM GAS  /tmp/cc3EZotN.s 			page 213


4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5508              		.loc 1 4541 5 view .LVU1500
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5509              		.loc 1 4541 35 is_stmt 0 view .LVU1501
 5510 008a 054B     		ldr	r3, .L420
 5511 008c 1A68     		ldr	r2, [r3]
 5512 008e D2F88834 		ldr	r3, [r2, #1160]
 5513 0092 23EA0703 		bic	r3, r3, r7
 5514 0096 C2F88834 		str	r3, [r2, #1160]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5515              		.loc 1 4542 5 is_stmt 1 view .LVU1502
 5516              	.LVL373:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5517              		.loc 1 4542 13 is_stmt 0 view .LVU1503
 5518 009a 0124     		movs	r4, #1
 5519              	.LVL374:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5520              		.loc 1 4542 13 view .LVU1504
 5521 009c DDE7     		b	.L415
 5522              	.L421:
 5523 009e 00BF     		.align	2
 5524              	.L420:
 5525 00a0 00000000 		.word	.LANCHOR10
 5526              		.cfi_endproc
 5527              	.LFE49:
 5529              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5530              		.align	1
 5531              		.global	xTaskGenericNotify
 5532              		.syntax unified
 5533              		.thumb
 5534              		.thumb_func
 5536              	xTaskGenericNotify:
 5537              	.LVL375:
 5538              	.LFB50:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5539              		.loc 1 4558 2 is_stmt 1 view -0
 5540              		.cfi_startproc
 5541              		@ args = 0, pretend = 0, frame = 0
 5542              		@ frame_needed = 0, uses_anonymous_args = 0
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5543              		.loc 1 4558 2 is_stmt 0 view .LVU1506
 5544 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5545              	.LCFI53:
 5546              		.cfi_def_cfa_offset 24
 5547              		.cfi_offset 3, -24
 5548              		.cfi_offset 4, -20
 5549              		.cfi_offset 5, -16
 5550              		.cfi_offset 6, -12
 5551              		.cfi_offset 7, -8
 5552              		.cfi_offset 14, -4
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5553              		.loc 1 4559 2 is_stmt 1 view .LVU1507
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5554              		.loc 1 4560 2 view .LVU1508
 5555              	.LVL376:
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5556              		.loc 1 4561 2 view .LVU1509
ARM GAS  /tmp/cc3EZotN.s 			page 214


4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5557              		.loc 1 4563 3 view .LVU1510
 5558 0002 B0B1     		cbz	r0, .L438
 5559 0004 0E46     		mov	r6, r1
 5560 0006 1746     		mov	r7, r2
 5561 0008 1C46     		mov	r4, r3
 5562 000a 0546     		mov	r5, r0
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5563              		.loc 1 4563 32 discriminator 2 view .LVU1511
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5564              		.loc 1 4564 3 discriminator 2 view .LVU1512
 5565              	.LVL377:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5566              		.loc 1 4566 3 discriminator 2 view .LVU1513
 5567 000c FFF7FEFF 		bl	vPortEnterCritical
 5568              	.LVL378:
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5569              		.loc 1 4568 4 discriminator 2 view .LVU1514
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5570              		.loc 1 4568 6 is_stmt 0 discriminator 2 view .LVU1515
 5571 0010 14B1     		cbz	r4, .L425
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5572              		.loc 1 4570 5 is_stmt 1 view .LVU1516
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5573              		.loc 1 4570 42 is_stmt 0 view .LVU1517
 5574 0012 D5F88834 		ldr	r3, [r5, #1160]
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5575              		.loc 1 4570 35 view .LVU1518
 5576 0016 2360     		str	r3, [r4]
 5577              	.L425:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5578              		.loc 1 4573 4 is_stmt 1 view .LVU1519
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5579              		.loc 1 4573 26 is_stmt 0 view .LVU1520
 5580 0018 95F88C34 		ldrb	r3, [r5, #1164]	@ zero_extendqisi2
 5581 001c DBB2     		uxtb	r3, r3
 5582              	.LVL379:
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5583              		.loc 1 4575 4 is_stmt 1 view .LVU1521
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5584              		.loc 1 4575 25 is_stmt 0 view .LVU1522
 5585 001e 0222     		movs	r2, #2
 5586 0020 85F88C24 		strb	r2, [r5, #1164]
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5587              		.loc 1 4577 4 is_stmt 1 view .LVU1523
 5588 0024 7A1E     		subs	r2, r7, #1
 5589 0026 032A     		cmp	r2, #3
 5590 0028 29D8     		bhi	.L435
 5591 002a DFE802F0 		tbb	[pc, r2]
 5592              	.L428:
 5593 002e 0B       		.byte	(.L431-.L428)/2
 5594 002f 17       		.byte	(.L430-.L428)/2
 5595 0030 1E       		.byte	(.L429-.L428)/2
 5596 0031 22       		.byte	(.L427-.L428)/2
 5597              	.LVL380:
 5598              		.p2align 1
 5599              	.L438:
ARM GAS  /tmp/cc3EZotN.s 			page 215


4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5600              		.loc 1 4563 3 view .LVU1524
 5601              	.LBB195:
 5602              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5603              		.loc 2 191 30 view .LVU1525
 5604              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5605              		.loc 2 193 1 view .LVU1526
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5606              		.loc 2 195 2 view .LVU1527
 5607              		.syntax unified
 5608              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5609 0032 4FF05003 			mov r3, #80												
 5610 0036 83F31188 		msr basepri, r3											
 5611 003a BFF36F8F 		isb														
 5612 003e BFF34F8F 		dsb														
 5613              	
 5614              	@ 0 "" 2
 5615              	.LVL381:
 5616              		.thumb
 5617              		.syntax unified
 5618              	.L424:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5619              		.loc 2 195 2 is_stmt 0 view .LVU1528
 5620              	.LBE196:
 5621              	.LBE195:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5622              		.loc 1 4563 3 is_stmt 1 discriminator 1 view .LVU1529
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5623              		.loc 1 4563 3 discriminator 1 view .LVU1530
 5624 0042 FEE7     		b	.L424
 5625              	.LVL382:
 5626              	.L431:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5627              		.loc 1 4580 6 view .LVU1531
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5628              		.loc 1 4580 29 is_stmt 0 view .LVU1532
 5629 0044 D5F88824 		ldr	r2, [r5, #1160]
 5630 0048 3243     		orrs	r2, r2, r6
 5631 004a C5F88824 		str	r2, [r5, #1160]
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5632              		.loc 1 4581 6 is_stmt 1 view .LVU1533
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5633              		.loc 1 4560 13 is_stmt 0 view .LVU1534
 5634 004e 0124     		movs	r4, #1
 5635              	.LVL383:
 5636              	.L426:
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5637              		.loc 1 4609 22 is_stmt 1 view .LVU1535
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5638              		.loc 1 4613 4 view .LVU1536
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5639              		.loc 1 4613 6 is_stmt 0 view .LVU1537
 5640 0050 012B     		cmp	r3, #1
 5641 0052 18D0     		beq	.L439
 5642              	.LVL384:
ARM GAS  /tmp/cc3EZotN.s 			page 216


 5643              	.L432:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5644              		.loc 1 4650 29 is_stmt 1 view .LVU1538
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5645              		.loc 1 4653 3 view .LVU1539
 5646 0054 FFF7FEFF 		bl	vPortExitCritical
 5647              	.LVL385:
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5648              		.loc 1 4655 3 view .LVU1540
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5649              		.loc 1 4656 2 is_stmt 0 view .LVU1541
 5650 0058 2046     		mov	r0, r4
 5651 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5652              	.LVL386:
 5653              	.L430:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5654              		.loc 1 4584 6 is_stmt 1 view .LVU1542
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5655              		.loc 1 4584 13 is_stmt 0 view .LVU1543
 5656 005c D5F88824 		ldr	r2, [r5, #1160]
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5657              		.loc 1 4584 32 view .LVU1544
 5658 0060 0132     		adds	r2, r2, #1
 5659 0062 C5F88824 		str	r2, [r5, #1160]
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5660              		.loc 1 4585 6 is_stmt 1 view .LVU1545
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5661              		.loc 1 4560 13 is_stmt 0 view .LVU1546
 5662 0066 0124     		movs	r4, #1
 5663              	.LVL387:
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5664              		.loc 1 4585 6 view .LVU1547
 5665 0068 F2E7     		b	.L426
 5666              	.LVL388:
 5667              	.L429:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5668              		.loc 1 4588 6 is_stmt 1 view .LVU1548
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5669              		.loc 1 4588 29 is_stmt 0 view .LVU1549
 5670 006a C5F88864 		str	r6, [r5, #1160]
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5671              		.loc 1 4589 6 is_stmt 1 view .LVU1550
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5672              		.loc 1 4560 13 is_stmt 0 view .LVU1551
 5673 006e 0124     		movs	r4, #1
 5674              	.LVL389:
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5675              		.loc 1 4589 6 view .LVU1552
 5676 0070 EEE7     		b	.L426
 5677              	.LVL390:
 5678              	.L427:
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5679              		.loc 1 4592 6 is_stmt 1 view .LVU1553
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5680              		.loc 1 4592 8 is_stmt 0 view .LVU1554
 5681 0072 022B     		cmp	r3, #2
 5682 0074 05D0     		beq	.L436
ARM GAS  /tmp/cc3EZotN.s 			page 217


4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5683              		.loc 1 4594 7 is_stmt 1 view .LVU1555
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5684              		.loc 1 4594 30 is_stmt 0 view .LVU1556
 5685 0076 C5F88864 		str	r6, [r5, #1160]
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5686              		.loc 1 4560 13 view .LVU1557
 5687 007a 0124     		movs	r4, #1
 5688              	.LVL391:
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5689              		.loc 1 4560 13 view .LVU1558
 5690 007c E8E7     		b	.L426
 5691              	.LVL392:
 5692              	.L435:
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5693              		.loc 1 4577 4 view .LVU1559
 5694 007e 0124     		movs	r4, #1
 5695              	.LVL393:
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5696              		.loc 1 4577 4 view .LVU1560
 5697 0080 E6E7     		b	.L426
 5698              	.LVL394:
 5699              	.L436:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5700              		.loc 1 4599 15 view .LVU1561
 5701 0082 0024     		movs	r4, #0
 5702              	.LVL395:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5703              		.loc 1 4599 15 view .LVU1562
 5704 0084 E4E7     		b	.L426
 5705              	.LVL396:
 5706              	.L439:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5707              		.loc 1 4615 5 is_stmt 1 view .LVU1563
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5708              		.loc 1 4615 14 is_stmt 0 view .LVU1564
 5709 0086 2E1D     		adds	r6, r5, #4
 5710              	.LVL397:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5711              		.loc 1 4615 14 view .LVU1565
 5712 0088 3046     		mov	r0, r6
 5713 008a FFF7FEFF 		bl	uxListRemove
 5714              	.LVL398:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5715              		.loc 1 4616 5 is_stmt 1 view .LVU1566
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5716              		.loc 1 4616 5 view .LVU1567
 5717 008e E86A     		ldr	r0, [r5, #44]
 5718 0090 0123     		movs	r3, #1
 5719 0092 8340     		lsls	r3, r3, r0
 5720 0094 134A     		ldr	r2, .L440
 5721 0096 1168     		ldr	r1, [r2]
 5722 0098 0B43     		orrs	r3, r3, r1
 5723 009a 1360     		str	r3, [r2]
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5724              		.loc 1 4616 5 view .LVU1568
 5725 009c 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc3EZotN.s 			page 218


 5726 00a0 3146     		mov	r1, r6
 5727 00a2 114B     		ldr	r3, .L440+4
 5728 00a4 03EB8000 		add	r0, r3, r0, lsl #2
 5729 00a8 FFF7FEFF 		bl	vListInsertEnd
 5730              	.LVL399:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5731              		.loc 1 4616 35 view .LVU1569
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5732              		.loc 1 4619 5 view .LVU1570
 5733 00ac AB6A     		ldr	r3, [r5, #40]
 5734 00ae 43B1     		cbz	r3, .L433
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5735              		.loc 1 4619 5 view .LVU1571
 5736              	.LBB197:
 5737              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5738              		.loc 2 191 30 view .LVU1572
 5739              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5740              		.loc 2 193 1 view .LVU1573
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5741              		.loc 2 195 2 view .LVU1574
 5742              		.syntax unified
 5743              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5744 00b0 4FF05003 			mov r3, #80												
 5745 00b4 83F31188 		msr basepri, r3											
 5746 00b8 BFF36F8F 		isb														
 5747 00bc BFF34F8F 		dsb														
 5748              	
 5749              	@ 0 "" 2
 5750              	.LVL400:
 5751              		.thumb
 5752              		.syntax unified
 5753              	.L434:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5754              		.loc 2 195 2 is_stmt 0 view .LVU1575
 5755              	.LBE198:
 5756              	.LBE197:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5757              		.loc 1 4619 5 is_stmt 1 discriminator 2 view .LVU1576
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5758              		.loc 1 4619 5 discriminator 2 view .LVU1577
 5759 00c0 FEE7     		b	.L434
 5760              	.L433:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5761              		.loc 1 4619 82 discriminator 2 view .LVU1578
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5762              		.loc 1 4637 5 discriminator 2 view .LVU1579
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5763              		.loc 1 4637 14 is_stmt 0 discriminator 2 view .LVU1580
 5764 00c2 EA6A     		ldr	r2, [r5, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5765              		.loc 1 4637 41 discriminator 2 view .LVU1581
 5766 00c4 094B     		ldr	r3, .L440+8
 5767 00c6 1B68     		ldr	r3, [r3]
 5768 00c8 DB6A     		ldr	r3, [r3, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc3EZotN.s 			page 219


 5769              		.loc 1 4637 7 discriminator 2 view .LVU1582
 5770 00ca 9A42     		cmp	r2, r3
 5771 00cc C2D9     		bls	.L432
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5772              		.loc 1 4641 6 is_stmt 1 view .LVU1583
 5773 00ce 4FF0E023 		mov	r3, #-536813568
 5774 00d2 4FF08052 		mov	r2, #268435456
 5775 00d6 C3F8042D 		str	r2, [r3, #3332]
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5776              		.loc 1 4641 6 view .LVU1584
 5777              		.syntax unified
 5778              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5779 00da BFF34F8F 		dsb
 5780              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5781              		.loc 1 4641 6 view .LVU1585
 5782              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5783 00de BFF36F8F 		isb
 5784              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5785              		.loc 1 4641 37 view .LVU1586
 5786              		.thumb
 5787              		.syntax unified
 5788 00e2 B7E7     		b	.L432
 5789              	.L441:
 5790              		.align	2
 5791              	.L440:
 5792 00e4 00000000 		.word	.LANCHOR13
 5793 00e8 00000000 		.word	.LANCHOR4
 5794 00ec 00000000 		.word	.LANCHOR10
 5795              		.cfi_endproc
 5796              	.LFE50:
 5798              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5799              		.align	1
 5800              		.global	xTaskGenericNotifyFromISR
 5801              		.syntax unified
 5802              		.thumb
 5803              		.thumb_func
 5805              	xTaskGenericNotifyFromISR:
 5806              	.LVL401:
 5807              	.LFB51:
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5808              		.loc 1 4664 2 view -0
 5809              		.cfi_startproc
 5810              		@ args = 4, pretend = 0, frame = 0
 5811              		@ frame_needed = 0, uses_anonymous_args = 0
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5812              		.loc 1 4665 2 view .LVU1588
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5813              		.loc 1 4666 2 view .LVU1589
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5814              		.loc 1 4667 2 view .LVU1590
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5815              		.loc 1 4668 2 view .LVU1591
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5816              		.loc 1 4670 3 view .LVU1592
 5817 0000 10B3     		cbz	r0, .L462
ARM GAS  /tmp/cc3EZotN.s 			page 220


4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5818              		.loc 1 4664 2 is_stmt 0 discriminator 2 view .LVU1593
 5819 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5820              	.LCFI54:
 5821              		.cfi_def_cfa_offset 24
 5822              		.cfi_offset 4, -24
 5823              		.cfi_offset 5, -20
 5824              		.cfi_offset 6, -16
 5825              		.cfi_offset 7, -12
 5826              		.cfi_offset 8, -8
 5827              		.cfi_offset 14, -4
 5828 0006 0E46     		mov	r6, r1
 5829 0008 1746     		mov	r7, r2
 5830 000a 1C46     		mov	r4, r3
 5831 000c 0546     		mov	r5, r0
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5832              		.loc 1 4670 32 is_stmt 1 discriminator 2 view .LVU1594
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5833              		.loc 1 4688 3 discriminator 2 view .LVU1595
 5834 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5835              	.LVL402:
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5836              		.loc 1 4690 3 discriminator 2 view .LVU1596
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5837              		.loc 1 4692 3 discriminator 2 view .LVU1597
 5838              	.LBB199:
 5839              	.LBI199:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5840              		.loc 2 207 34 discriminator 2 view .LVU1598
 5841              	.LBB200:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5842              		.loc 2 209 1 discriminator 2 view .LVU1599
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5843              		.loc 2 211 2 discriminator 2 view .LVU1600
 5844              		.syntax unified
 5845              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5846 0012 EFF31188 			mrs r8, basepri											
 5847 0016 4FF05003 		mov r3, #80												
 5848 001a 83F31188 		msr basepri, r3											
 5849 001e BFF36F8F 		isb														
 5850 0022 BFF34F8F 		dsb														
 5851              	
 5852              	@ 0 "" 2
 5853              	.LVL403:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5854              		.loc 2 223 2 discriminator 2 view .LVU1601
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5855              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1602
 5856              		.thumb
 5857              		.syntax unified
 5858              	.LBE200:
 5859              	.LBE199:
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5860              		.loc 1 4694 4 is_stmt 1 discriminator 2 view .LVU1603
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5861              		.loc 1 4694 6 is_stmt 0 discriminator 2 view .LVU1604
 5862 0026 14B1     		cbz	r4, .L445
ARM GAS  /tmp/cc3EZotN.s 			page 221


4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5863              		.loc 1 4696 5 is_stmt 1 view .LVU1605
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5864              		.loc 1 4696 42 is_stmt 0 view .LVU1606
 5865 0028 D5F88834 		ldr	r3, [r5, #1160]
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5866              		.loc 1 4696 35 view .LVU1607
 5867 002c 2360     		str	r3, [r4]
 5868              	.L445:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5869              		.loc 1 4699 4 is_stmt 1 view .LVU1608
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5870              		.loc 1 4699 26 is_stmt 0 view .LVU1609
 5871 002e 95F88C34 		ldrb	r3, [r5, #1164]	@ zero_extendqisi2
 5872 0032 DBB2     		uxtb	r3, r3
 5873              	.LVL404:
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5874              		.loc 1 4700 4 is_stmt 1 view .LVU1610
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5875              		.loc 1 4700 25 is_stmt 0 view .LVU1611
 5876 0034 0222     		movs	r2, #2
 5877 0036 85F88C24 		strb	r2, [r5, #1164]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5878              		.loc 1 4702 4 is_stmt 1 view .LVU1612
 5879 003a 7A1E     		subs	r2, r7, #1
 5880 003c 032A     		cmp	r2, #3
 5881 003e 2AD8     		bhi	.L458
 5882 0040 DFE802F0 		tbb	[pc, r2]
 5883              	.L448:
 5884 0044 0B       		.byte	(.L451-.L448)/2
 5885 0045 18       		.byte	(.L450-.L448)/2
 5886 0046 1F       		.byte	(.L449-.L448)/2
 5887 0047 23       		.byte	(.L447-.L448)/2
 5888              	.LVL405:
 5889              		.p2align 1
 5890              	.L462:
 5891              	.LCFI55:
 5892              		.cfi_def_cfa_offset 0
 5893              		.cfi_restore 4
 5894              		.cfi_restore 5
 5895              		.cfi_restore 6
 5896              		.cfi_restore 7
 5897              		.cfi_restore 8
 5898              		.cfi_restore 14
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5899              		.loc 1 4670 3 view .LVU1613
 5900              	.LBB201:
 5901              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5902              		.loc 2 191 30 view .LVU1614
 5903              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5904              		.loc 2 193 1 view .LVU1615
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5905              		.loc 2 195 2 view .LVU1616
 5906              		.syntax unified
 5907              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/cc3EZotN.s 			page 222


 5908 0048 4FF05003 			mov r3, #80												
 5909 004c 83F31188 		msr basepri, r3											
 5910 0050 BFF36F8F 		isb														
 5911 0054 BFF34F8F 		dsb														
 5912              	
 5913              	@ 0 "" 2
 5914              	.LVL406:
 5915              		.thumb
 5916              		.syntax unified
 5917              	.L444:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5918              		.loc 2 195 2 is_stmt 0 view .LVU1617
 5919              	.LBE202:
 5920              	.LBE201:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5921              		.loc 1 4670 3 is_stmt 1 discriminator 1 view .LVU1618
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5922              		.loc 1 4670 3 discriminator 1 view .LVU1619
 5923 0058 FEE7     		b	.L444
 5924              	.LVL407:
 5925              	.L451:
 5926              	.LCFI56:
 5927              		.cfi_def_cfa_offset 24
 5928              		.cfi_offset 4, -24
 5929              		.cfi_offset 5, -20
 5930              		.cfi_offset 6, -16
 5931              		.cfi_offset 7, -12
 5932              		.cfi_offset 8, -8
 5933              		.cfi_offset 14, -4
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5934              		.loc 1 4705 6 view .LVU1620
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5935              		.loc 1 4705 29 is_stmt 0 view .LVU1621
 5936 005a D5F88824 		ldr	r2, [r5, #1160]
 5937 005e 3243     		orrs	r2, r2, r6
 5938 0060 C5F88824 		str	r2, [r5, #1160]
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5939              		.loc 1 4706 6 is_stmt 1 view .LVU1622
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5940              		.loc 1 4667 13 is_stmt 0 view .LVU1623
 5941 0064 0124     		movs	r4, #1
 5942              	.LVL408:
 5943              	.L446:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5944              		.loc 1 4734 31 is_stmt 1 view .LVU1624
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5945              		.loc 1 4738 4 view .LVU1625
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5946              		.loc 1 4738 6 is_stmt 0 view .LVU1626
 5947 0066 012B     		cmp	r3, #1
 5948 0068 19D0     		beq	.L463
 5949              	.LVL409:
 5950              	.L452:
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5951              		.loc 1 4773 30 is_stmt 1 view .LVU1627
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5952              		.loc 1 4777 3 view .LVU1628
ARM GAS  /tmp/cc3EZotN.s 			page 223


 5953              	.LBB203:
 5954              	.LBI203:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5955              		.loc 2 227 30 view .LVU1629
 5956              	.LBB204:
 5957              		.loc 2 229 2 view .LVU1630
 5958              		.syntax unified
 5959              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5960 006a 88F31188 			msr basepri, r8	
 5961              	@ 0 "" 2
 5962              		.thumb
 5963              		.syntax unified
 5964              	.LBE204:
 5965              	.LBE203:
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5966              		.loc 1 4779 3 view .LVU1631
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5967              		.loc 1 4780 2 is_stmt 0 view .LVU1632
 5968 006e 2046     		mov	r0, r4
 5969 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5970              	.LVL410:
 5971              	.L450:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5972              		.loc 1 4709 6 is_stmt 1 view .LVU1633
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5973              		.loc 1 4709 13 is_stmt 0 view .LVU1634
 5974 0074 D5F88824 		ldr	r2, [r5, #1160]
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5975              		.loc 1 4709 32 view .LVU1635
 5976 0078 0132     		adds	r2, r2, #1
 5977 007a C5F88824 		str	r2, [r5, #1160]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5978              		.loc 1 4710 6 is_stmt 1 view .LVU1636
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5979              		.loc 1 4667 13 is_stmt 0 view .LVU1637
 5980 007e 0124     		movs	r4, #1
 5981              	.LVL411:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5982              		.loc 1 4710 6 view .LVU1638
 5983 0080 F1E7     		b	.L446
 5984              	.LVL412:
 5985              	.L449:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5986              		.loc 1 4713 6 is_stmt 1 view .LVU1639
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5987              		.loc 1 4713 29 is_stmt 0 view .LVU1640
 5988 0082 C5F88864 		str	r6, [r5, #1160]
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5989              		.loc 1 4714 6 is_stmt 1 view .LVU1641
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5990              		.loc 1 4667 13 is_stmt 0 view .LVU1642
 5991 0086 0124     		movs	r4, #1
 5992              	.LVL413:
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5993              		.loc 1 4714 6 view .LVU1643
 5994 0088 EDE7     		b	.L446
 5995              	.LVL414:
ARM GAS  /tmp/cc3EZotN.s 			page 224


 5996              	.L447:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5997              		.loc 1 4717 6 is_stmt 1 view .LVU1644
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5998              		.loc 1 4717 8 is_stmt 0 view .LVU1645
 5999 008a 022B     		cmp	r3, #2
 6000 008c 05D0     		beq	.L459
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6001              		.loc 1 4719 7 is_stmt 1 view .LVU1646
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6002              		.loc 1 4719 30 is_stmt 0 view .LVU1647
 6003 008e C5F88864 		str	r6, [r5, #1160]
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6004              		.loc 1 4667 13 view .LVU1648
 6005 0092 0124     		movs	r4, #1
 6006              	.LVL415:
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6007              		.loc 1 4667 13 view .LVU1649
 6008 0094 E7E7     		b	.L446
 6009              	.LVL416:
 6010              	.L458:
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6011              		.loc 1 4702 4 view .LVU1650
 6012 0096 0124     		movs	r4, #1
 6013              	.LVL417:
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6014              		.loc 1 4702 4 view .LVU1651
 6015 0098 E5E7     		b	.L446
 6016              	.LVL418:
 6017              	.L459:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6018              		.loc 1 4724 15 view .LVU1652
 6019 009a 0024     		movs	r4, #0
 6020              	.LVL419:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6021              		.loc 1 4724 15 view .LVU1653
 6022 009c E3E7     		b	.L446
 6023              	.LVL420:
 6024              	.L463:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6025              		.loc 1 4741 5 is_stmt 1 view .LVU1654
 6026 009e AB6A     		ldr	r3, [r5, #40]
 6027              	.LVL421:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6028              		.loc 1 4741 5 is_stmt 0 view .LVU1655
 6029 00a0 43B1     		cbz	r3, .L453
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6030              		.loc 1 4741 5 is_stmt 1 view .LVU1656
 6031              	.LBB205:
 6032              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6033              		.loc 2 191 30 view .LVU1657
 6034              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6035              		.loc 2 193 1 view .LVU1658
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6036              		.loc 2 195 2 view .LVU1659
ARM GAS  /tmp/cc3EZotN.s 			page 225


 6037              		.syntax unified
 6038              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6039 00a2 4FF05003 			mov r3, #80												
 6040 00a6 83F31188 		msr basepri, r3											
 6041 00aa BFF36F8F 		isb														
 6042 00ae BFF34F8F 		dsb														
 6043              	
 6044              	@ 0 "" 2
 6045              	.LVL422:
 6046              		.thumb
 6047              		.syntax unified
 6048              	.L454:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6049              		.loc 2 195 2 is_stmt 0 view .LVU1660
 6050              	.LBE206:
 6051              	.LBE205:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6052              		.loc 1 4741 5 is_stmt 1 discriminator 2 view .LVU1661
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6053              		.loc 1 4741 5 discriminator 2 view .LVU1662
 6054 00b2 FEE7     		b	.L454
 6055              	.L453:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6056              		.loc 1 4741 82 discriminator 2 view .LVU1663
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6057              		.loc 1 4743 5 discriminator 2 view .LVU1664
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6058              		.loc 1 4743 30 is_stmt 0 discriminator 2 view .LVU1665
 6059 00b4 154B     		ldr	r3, .L464
 6060 00b6 1B68     		ldr	r3, [r3]
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6061              		.loc 1 4743 7 discriminator 2 view .LVU1666
 6062 00b8 F3B9     		cbnz	r3, .L455
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6063              		.loc 1 4745 6 is_stmt 1 view .LVU1667
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6064              		.loc 1 4745 15 is_stmt 0 view .LVU1668
 6065 00ba 2E1D     		adds	r6, r5, #4
 6066              	.LVL423:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6067              		.loc 1 4745 15 view .LVU1669
 6068 00bc 3046     		mov	r0, r6
 6069 00be FFF7FEFF 		bl	uxListRemove
 6070              	.LVL424:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6071              		.loc 1 4746 6 is_stmt 1 view .LVU1670
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6072              		.loc 1 4746 6 view .LVU1671
 6073 00c2 E86A     		ldr	r0, [r5, #44]
 6074 00c4 0123     		movs	r3, #1
 6075 00c6 8340     		lsls	r3, r3, r0
 6076 00c8 114A     		ldr	r2, .L464+4
 6077 00ca 1168     		ldr	r1, [r2]
 6078 00cc 0B43     		orrs	r3, r3, r1
 6079 00ce 1360     		str	r3, [r2]
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6080              		.loc 1 4746 6 view .LVU1672
ARM GAS  /tmp/cc3EZotN.s 			page 226


 6081 00d0 00EB8000 		add	r0, r0, r0, lsl #2
 6082 00d4 3146     		mov	r1, r6
 6083 00d6 0F4B     		ldr	r3, .L464+8
 6084 00d8 03EB8000 		add	r0, r3, r0, lsl #2
 6085 00dc FFF7FEFF 		bl	vListInsertEnd
 6086              	.LVL425:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6087              		.loc 1 4746 36 view .LVU1673
 6088              	.L456:
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6089              		.loc 1 4755 5 view .LVU1674
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6090              		.loc 1 4755 14 is_stmt 0 view .LVU1675
 6091 00e0 EA6A     		ldr	r2, [r5, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6092              		.loc 1 4755 41 view .LVU1676
 6093 00e2 0D4B     		ldr	r3, .L464+12
 6094 00e4 1B68     		ldr	r3, [r3]
 6095 00e6 DB6A     		ldr	r3, [r3, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6096              		.loc 1 4755 7 view .LVU1677
 6097 00e8 9A42     		cmp	r2, r3
 6098 00ea BED9     		bls	.L452
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6099              		.loc 1 4759 6 is_stmt 1 view .LVU1678
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6100              		.loc 1 4759 8 is_stmt 0 view .LVU1679
 6101 00ec 069B     		ldr	r3, [sp, #24]
 6102 00ee 4BB1     		cbz	r3, .L457
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6103              		.loc 1 4761 7 is_stmt 1 view .LVU1680
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6104              		.loc 1 4761 34 is_stmt 0 view .LVU1681
 6105 00f0 0123     		movs	r3, #1
 6106 00f2 069A     		ldr	r2, [sp, #24]
 6107 00f4 1360     		str	r3, [r2]
 6108 00f6 B8E7     		b	.L452
 6109              	.LVL426:
 6110              	.L455:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6111              		.loc 1 4752 6 is_stmt 1 view .LVU1682
 6112 00f8 05F11801 		add	r1, r5, #24
 6113 00fc 0748     		ldr	r0, .L464+16
 6114 00fe FFF7FEFF 		bl	vListInsertEnd
 6115              	.LVL427:
 6116 0102 EDE7     		b	.L456
 6117              	.LVL428:
 6118              	.L457:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6119              		.loc 1 4768 7 view .LVU1683
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6120              		.loc 1 4768 21 is_stmt 0 view .LVU1684
 6121 0104 064B     		ldr	r3, .L464+20
 6122 0106 0122     		movs	r2, #1
 6123 0108 1A60     		str	r2, [r3]
 6124 010a AEE7     		b	.L452
 6125              	.L465:
ARM GAS  /tmp/cc3EZotN.s 			page 227


 6126              		.align	2
 6127              	.L464:
 6128 010c 00000000 		.word	.LANCHOR16
 6129 0110 00000000 		.word	.LANCHOR13
 6130 0114 00000000 		.word	.LANCHOR4
 6131 0118 00000000 		.word	.LANCHOR10
 6132 011c 00000000 		.word	.LANCHOR1
 6133 0120 00000000 		.word	.LANCHOR20
 6134              		.cfi_endproc
 6135              	.LFE51:
 6137              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6138              		.align	1
 6139              		.global	vTaskNotifyGiveFromISR
 6140              		.syntax unified
 6141              		.thumb
 6142              		.thumb_func
 6144              	vTaskNotifyGiveFromISR:
 6145              	.LVL429:
 6146              	.LFB52:
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6147              		.loc 1 4788 2 is_stmt 1 view -0
 6148              		.cfi_startproc
 6149              		@ args = 0, pretend = 0, frame = 0
 6150              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6151              		.loc 1 4788 2 is_stmt 0 view .LVU1686
 6152 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6153              	.LCFI57:
 6154              		.cfi_def_cfa_offset 24
 6155              		.cfi_offset 3, -24
 6156              		.cfi_offset 4, -20
 6157              		.cfi_offset 5, -16
 6158              		.cfi_offset 6, -12
 6159              		.cfi_offset 7, -8
 6160              		.cfi_offset 14, -4
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6161              		.loc 1 4789 2 is_stmt 1 view .LVU1687
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6162              		.loc 1 4790 2 view .LVU1688
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6163              		.loc 1 4791 2 view .LVU1689
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6164              		.loc 1 4793 3 view .LVU1690
 6165 0002 F0B1     		cbz	r0, .L476
 6166 0004 0D46     		mov	r5, r1
 6167 0006 0446     		mov	r4, r0
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6168              		.loc 1 4793 32 discriminator 2 view .LVU1691
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6169              		.loc 1 4811 3 discriminator 2 view .LVU1692
 6170 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6171              	.LVL430:
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6172              		.loc 1 4813 3 discriminator 2 view .LVU1693
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6173              		.loc 1 4815 3 discriminator 2 view .LVU1694
 6174              	.LBB207:
ARM GAS  /tmp/cc3EZotN.s 			page 228


 6175              	.LBI207:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6176              		.loc 2 207 34 discriminator 2 view .LVU1695
 6177              	.LBB208:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6178              		.loc 2 209 1 discriminator 2 view .LVU1696
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6179              		.loc 2 211 2 discriminator 2 view .LVU1697
 6180              		.syntax unified
 6181              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6182 000c EFF31183 			mrs r3, basepri											
 6183 0010 4FF05002 		mov r2, #80												
 6184 0014 82F31188 		msr basepri, r2											
 6185 0018 BFF36F8F 		isb														
 6186 001c BFF34F8F 		dsb														
 6187              	
 6188              	@ 0 "" 2
 6189              		.thumb
 6190              		.syntax unified
 6191 0020 1E46     		mov	r6, r3
 6192              	.LVL431:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6193              		.loc 2 223 2 discriminator 2 view .LVU1698
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6194              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1699
 6195              	.LBE208:
 6196              	.LBE207:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6197              		.loc 1 4817 4 is_stmt 1 discriminator 2 view .LVU1700
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6198              		.loc 1 4817 26 is_stmt 0 discriminator 2 view .LVU1701
 6199 0022 94F88C34 		ldrb	r3, [r4, #1164]	@ zero_extendqisi2
 6200              	.LVL432:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6201              		.loc 1 4817 26 discriminator 2 view .LVU1702
 6202 0026 DBB2     		uxtb	r3, r3
 6203              	.LVL433:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6204              		.loc 1 4818 4 is_stmt 1 discriminator 2 view .LVU1703
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6205              		.loc 1 4818 25 is_stmt 0 discriminator 2 view .LVU1704
 6206 0028 0222     		movs	r2, #2
 6207 002a 84F88C24 		strb	r2, [r4, #1164]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6208              		.loc 1 4822 4 is_stmt 1 discriminator 2 view .LVU1705
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6209              		.loc 1 4822 11 is_stmt 0 discriminator 2 view .LVU1706
 6210 002e D4F88824 		ldr	r2, [r4, #1160]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6211              		.loc 1 4822 30 discriminator 2 view .LVU1707
 6212 0032 0132     		adds	r2, r2, #1
 6213 0034 C4F88824 		str	r2, [r4, #1160]
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6214              		.loc 1 4824 36 is_stmt 1 discriminator 2 view .LVU1708
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6215              		.loc 1 4828 4 discriminator 2 view .LVU1709
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc3EZotN.s 			page 229


 6216              		.loc 1 4828 6 is_stmt 0 discriminator 2 view .LVU1710
 6217 0038 012B     		cmp	r3, #1
 6218 003a 0BD0     		beq	.L477
 6219              	.LVL434:
 6220              	.L469:
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6221              		.loc 1 4863 30 is_stmt 1 view .LVU1711
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6222              		.loc 1 4867 3 view .LVU1712
 6223              	.LBB209:
 6224              	.LBI209:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6225              		.loc 2 227 30 view .LVU1713
 6226              	.LBB210:
 6227              		.loc 2 229 2 view .LVU1714
 6228              		.syntax unified
 6229              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6230 003c 86F31188 			msr basepri, r6	
 6231              	@ 0 "" 2
 6232              		.thumb
 6233              		.syntax unified
 6234              	.LBE210:
 6235              	.LBE209:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6236              		.loc 1 4868 2 is_stmt 0 view .LVU1715
 6237 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6238              	.LVL435:
 6239              	.L476:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6240              		.loc 1 4793 3 is_stmt 1 view .LVU1716
 6241              	.LBB211:
 6242              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6243              		.loc 2 191 30 view .LVU1717
 6244              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6245              		.loc 2 193 1 view .LVU1718
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6246              		.loc 2 195 2 view .LVU1719
 6247              		.syntax unified
 6248              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6249 0042 4FF05003 			mov r3, #80												
 6250 0046 83F31188 		msr basepri, r3											
 6251 004a BFF36F8F 		isb														
 6252 004e BFF34F8F 		dsb														
 6253              	
 6254              	@ 0 "" 2
 6255              	.LVL436:
 6256              		.thumb
 6257              		.syntax unified
 6258              	.L468:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6259              		.loc 2 195 2 is_stmt 0 view .LVU1720
 6260              	.LBE212:
 6261              	.LBE211:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6262              		.loc 1 4793 3 is_stmt 1 discriminator 1 view .LVU1721
ARM GAS  /tmp/cc3EZotN.s 			page 230


4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6263              		.loc 1 4793 3 discriminator 1 view .LVU1722
 6264 0052 FEE7     		b	.L468
 6265              	.LVL437:
 6266              	.L477:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6267              		.loc 1 4831 5 view .LVU1723
 6268 0054 A36A     		ldr	r3, [r4, #40]
 6269              	.LVL438:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6270              		.loc 1 4831 5 is_stmt 0 view .LVU1724
 6271 0056 43B1     		cbz	r3, .L470
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6272              		.loc 1 4831 5 is_stmt 1 view .LVU1725
 6273              	.LBB213:
 6274              	.LBI213:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6275              		.loc 2 191 30 view .LVU1726
 6276              	.LBB214:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6277              		.loc 2 193 1 view .LVU1727
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6278              		.loc 2 195 2 view .LVU1728
 6279              		.syntax unified
 6280              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6281 0058 4FF05003 			mov r3, #80												
 6282 005c 83F31188 		msr basepri, r3											
 6283 0060 BFF36F8F 		isb														
 6284 0064 BFF34F8F 		dsb														
 6285              	
 6286              	@ 0 "" 2
 6287              	.LVL439:
 6288              		.thumb
 6289              		.syntax unified
 6290              	.L471:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6291              		.loc 2 195 2 is_stmt 0 view .LVU1729
 6292              	.LBE214:
 6293              	.LBE213:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6294              		.loc 1 4831 5 is_stmt 1 discriminator 2 view .LVU1730
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6295              		.loc 1 4831 5 discriminator 2 view .LVU1731
 6296 0068 FEE7     		b	.L471
 6297              	.L470:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6298              		.loc 1 4831 82 discriminator 2 view .LVU1732
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6299              		.loc 1 4833 5 discriminator 2 view .LVU1733
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6300              		.loc 1 4833 30 is_stmt 0 discriminator 2 view .LVU1734
 6301 006a 154B     		ldr	r3, .L478
 6302 006c 1B68     		ldr	r3, [r3]
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6303              		.loc 1 4833 7 discriminator 2 view .LVU1735
 6304 006e E3B9     		cbnz	r3, .L472
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cc3EZotN.s 			page 231


 6305              		.loc 1 4835 6 is_stmt 1 view .LVU1736
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6306              		.loc 1 4835 15 is_stmt 0 view .LVU1737
 6307 0070 271D     		adds	r7, r4, #4
 6308 0072 3846     		mov	r0, r7
 6309 0074 FFF7FEFF 		bl	uxListRemove
 6310              	.LVL440:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6311              		.loc 1 4836 6 is_stmt 1 view .LVU1738
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6312              		.loc 1 4836 6 view .LVU1739
 6313 0078 E06A     		ldr	r0, [r4, #44]
 6314 007a 0123     		movs	r3, #1
 6315 007c 8340     		lsls	r3, r3, r0
 6316 007e 114A     		ldr	r2, .L478+4
 6317 0080 1168     		ldr	r1, [r2]
 6318 0082 0B43     		orrs	r3, r3, r1
 6319 0084 1360     		str	r3, [r2]
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6320              		.loc 1 4836 6 view .LVU1740
 6321 0086 00EB8000 		add	r0, r0, r0, lsl #2
 6322 008a 3946     		mov	r1, r7
 6323 008c 0E4B     		ldr	r3, .L478+8
 6324 008e 03EB8000 		add	r0, r3, r0, lsl #2
 6325 0092 FFF7FEFF 		bl	vListInsertEnd
 6326              	.LVL441:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6327              		.loc 1 4836 36 view .LVU1741
 6328              	.L473:
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6329              		.loc 1 4845 5 view .LVU1742
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6330              		.loc 1 4845 14 is_stmt 0 view .LVU1743
 6331 0096 E26A     		ldr	r2, [r4, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6332              		.loc 1 4845 41 view .LVU1744
 6333 0098 0C4B     		ldr	r3, .L478+12
 6334 009a 1B68     		ldr	r3, [r3]
 6335 009c DB6A     		ldr	r3, [r3, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6336              		.loc 1 4845 7 view .LVU1745
 6337 009e 9A42     		cmp	r2, r3
 6338 00a0 CCD9     		bls	.L469
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6339              		.loc 1 4849 6 is_stmt 1 view .LVU1746
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6340              		.loc 1 4849 8 is_stmt 0 view .LVU1747
 6341 00a2 45B1     		cbz	r5, .L474
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6342              		.loc 1 4851 7 is_stmt 1 view .LVU1748
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6343              		.loc 1 4851 34 is_stmt 0 view .LVU1749
 6344 00a4 0123     		movs	r3, #1
 6345 00a6 2B60     		str	r3, [r5]
 6346 00a8 C8E7     		b	.L469
 6347              	.L472:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc3EZotN.s 			page 232


 6348              		.loc 1 4842 6 is_stmt 1 view .LVU1750
 6349 00aa 04F11801 		add	r1, r4, #24
 6350 00ae 0848     		ldr	r0, .L478+16
 6351 00b0 FFF7FEFF 		bl	vListInsertEnd
 6352              	.LVL442:
 6353 00b4 EFE7     		b	.L473
 6354              	.L474:
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6355              		.loc 1 4858 7 view .LVU1751
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6356              		.loc 1 4858 21 is_stmt 0 view .LVU1752
 6357 00b6 074B     		ldr	r3, .L478+20
 6358 00b8 0122     		movs	r2, #1
 6359 00ba 1A60     		str	r2, [r3]
 6360 00bc BEE7     		b	.L469
 6361              	.L479:
 6362 00be 00BF     		.align	2
 6363              	.L478:
 6364 00c0 00000000 		.word	.LANCHOR16
 6365 00c4 00000000 		.word	.LANCHOR13
 6366 00c8 00000000 		.word	.LANCHOR4
 6367 00cc 00000000 		.word	.LANCHOR10
 6368 00d0 00000000 		.word	.LANCHOR1
 6369 00d4 00000000 		.word	.LANCHOR20
 6370              		.cfi_endproc
 6371              	.LFE52:
 6373              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6374              		.align	1
 6375              		.global	xTaskNotifyStateClear
 6376              		.syntax unified
 6377              		.thumb
 6378              		.thumb_func
 6380              	xTaskNotifyStateClear:
 6381              	.LVL443:
 6382              	.LFB53:
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6383              		.loc 1 4877 2 is_stmt 1 view -0
 6384              		.cfi_startproc
 6385              		@ args = 0, pretend = 0, frame = 0
 6386              		@ frame_needed = 0, uses_anonymous_args = 0
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6387              		.loc 1 4877 2 is_stmt 0 view .LVU1754
 6388 0000 10B5     		push	{r4, lr}
 6389              	.LCFI58:
 6390              		.cfi_def_cfa_offset 8
 6391              		.cfi_offset 4, -8
 6392              		.cfi_offset 14, -4
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6393              		.loc 1 4878 2 is_stmt 1 view .LVU1755
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6394              		.loc 1 4879 2 view .LVU1756
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6395              		.loc 1 4883 3 view .LVU1757
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6396              		.loc 1 4883 11 is_stmt 0 view .LVU1758
 6397 0002 0446     		mov	r4, r0
 6398 0004 58B1     		cbz	r0, .L485
ARM GAS  /tmp/cc3EZotN.s 			page 233


 6399              	.LVL444:
 6400              	.L481:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6401              		.loc 1 4885 3 is_stmt 1 discriminator 4 view .LVU1759
 6402 0006 FFF7FEFF 		bl	vPortEnterCritical
 6403              	.LVL445:
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6404              		.loc 1 4887 4 discriminator 4 view .LVU1760
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6405              		.loc 1 4887 13 is_stmt 0 discriminator 4 view .LVU1761
 6406 000a 94F88C34 		ldrb	r3, [r4, #1164]	@ zero_extendqisi2
 6407 000e DBB2     		uxtb	r3, r3
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6408              		.loc 1 4887 6 discriminator 4 view .LVU1762
 6409 0010 022B     		cmp	r3, #2
 6410 0012 07D0     		beq	.L486
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6411              		.loc 1 4894 13 view .LVU1763
 6412 0014 0024     		movs	r4, #0
 6413              	.LVL446:
 6414              	.L482:
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6415              		.loc 1 4897 3 is_stmt 1 view .LVU1764
 6416 0016 FFF7FEFF 		bl	vPortExitCritical
 6417              	.LVL447:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6418              		.loc 1 4899 3 view .LVU1765
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6419              		.loc 1 4900 2 is_stmt 0 view .LVU1766
 6420 001a 2046     		mov	r0, r4
 6421 001c 10BD     		pop	{r4, pc}
 6422              	.LVL448:
 6423              	.L485:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6424              		.loc 1 4883 11 discriminator 1 view .LVU1767
 6425 001e 044B     		ldr	r3, .L487
 6426 0020 1C68     		ldr	r4, [r3]
 6427              	.LVL449:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6428              		.loc 1 4883 11 discriminator 1 view .LVU1768
 6429 0022 F0E7     		b	.L481
 6430              	.LVL450:
 6431              	.L486:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6432              		.loc 1 4889 5 is_stmt 1 view .LVU1769
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6433              		.loc 1 4889 26 is_stmt 0 view .LVU1770
 6434 0024 0023     		movs	r3, #0
 6435 0026 84F88C34 		strb	r3, [r4, #1164]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6436              		.loc 1 4890 5 is_stmt 1 view .LVU1771
 6437              	.LVL451:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6438              		.loc 1 4890 13 is_stmt 0 view .LVU1772
 6439 002a 0124     		movs	r4, #1
 6440              	.LVL452:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc3EZotN.s 			page 234


 6441              		.loc 1 4890 13 view .LVU1773
 6442 002c F3E7     		b	.L482
 6443              	.L488:
 6444 002e 00BF     		.align	2
 6445              	.L487:
 6446 0030 00000000 		.word	.LANCHOR10
 6447              		.cfi_endproc
 6448              	.LFE53:
 6450              		.global	pxCurrentTCB
 6451              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6452              		.align	2
 6453              		.set	.LANCHOR10,. + 0
 6456              	pxCurrentTCB:
 6457 0000 00000000 		.space	4
 6458              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6459              		.align	2
 6460              		.set	.LANCHOR2,. + 0
 6463              	pxDelayedTaskList:
 6464 0000 00000000 		.space	4
 6465              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6466              		.align	2
 6467              		.set	.LANCHOR8,. + 0
 6470              	pxOverflowDelayedTaskList:
 6471 0000 00000000 		.space	4
 6472              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6473              		.align	2
 6474              		.set	.LANCHOR4,. + 0
 6477              	pxReadyTasksLists:
 6478 0000 00000000 		.space	140
 6478      00000000 
 6478      00000000 
 6478      00000000 
 6478      00000000 
 6479              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6480              		.align	2
 6481              		.set	.LANCHOR9,. + 0
 6484              	uxCurrentNumberOfTasks:
 6485 0000 00000000 		.space	4
 6486              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6487              		.align	2
 6488              		.set	.LANCHOR14,. + 0
 6491              	uxDeletedTasksWaitingCleanUp:
 6492 0000 00000000 		.space	4
 6493              		.section	.bss.uxPendedTicks,"aw",%nobits
 6494              		.align	2
 6495              		.set	.LANCHOR19,. + 0
 6498              	uxPendedTicks:
 6499 0000 00000000 		.space	4
 6500              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6501              		.align	2
 6502              		.set	.LANCHOR16,. + 0
 6505              	uxSchedulerSuspended:
 6506 0000 00000000 		.space	4
 6507              		.section	.bss.uxTaskNumber,"aw",%nobits
 6508              		.align	2
 6509              		.set	.LANCHOR12,. + 0
 6512              	uxTaskNumber:
ARM GAS  /tmp/cc3EZotN.s 			page 235


 6513 0000 00000000 		.space	4
 6514              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6515              		.align	2
 6516              		.set	.LANCHOR13,. + 0
 6519              	uxTopReadyPriority:
 6520 0000 00000000 		.space	4
 6521              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6522              		.align	2
 6523              		.set	.LANCHOR5,. + 0
 6526              	xDelayedTaskList1:
 6527 0000 00000000 		.space	20
 6527      00000000 
 6527      00000000 
 6527      00000000 
 6527      00000000 
 6528              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6529              		.align	2
 6530              		.set	.LANCHOR6,. + 0
 6533              	xDelayedTaskList2:
 6534 0000 00000000 		.space	20
 6534      00000000 
 6534      00000000 
 6534      00000000 
 6534      00000000 
 6535              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6536              		.align	2
 6537              		.set	.LANCHOR17,. + 0
 6540              	xIdleTaskHandle:
 6541 0000 00000000 		.space	4
 6542              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6543              		.align	2
 6544              		.set	.LANCHOR3,. + 0
 6547              	xNextTaskUnblockTime:
 6548 0000 00000000 		.space	4
 6549              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6550              		.align	2
 6551              		.set	.LANCHOR18,. + 0
 6554              	xNumOfOverflows:
 6555 0000 00000000 		.space	4
 6556              		.section	.bss.xPendingReadyList,"aw",%nobits
 6557              		.align	2
 6558              		.set	.LANCHOR1,. + 0
 6561              	xPendingReadyList:
 6562 0000 00000000 		.space	20
 6562      00000000 
 6562      00000000 
 6562      00000000 
 6562      00000000 
 6563              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6564              		.align	2
 6565              		.set	.LANCHOR11,. + 0
 6568              	xSchedulerRunning:
 6569 0000 00000000 		.space	4
 6570              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6571              		.align	2
 6572              		.set	.LANCHOR0,. + 0
 6575              	xSuspendedTaskList:
ARM GAS  /tmp/cc3EZotN.s 			page 236


 6576 0000 00000000 		.space	20
 6576      00000000 
 6576      00000000 
 6576      00000000 
 6576      00000000 
 6577              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6578              		.align	2
 6579              		.set	.LANCHOR7,. + 0
 6582              	xTasksWaitingTermination:
 6583 0000 00000000 		.space	20
 6583      00000000 
 6583      00000000 
 6583      00000000 
 6583      00000000 
 6584              		.section	.bss.xTickCount,"aw",%nobits
 6585              		.align	2
 6586              		.set	.LANCHOR15,. + 0
 6589              	xTickCount:
 6590 0000 00000000 		.space	4
 6591              		.section	.bss.xYieldPending,"aw",%nobits
 6592              		.align	2
 6593              		.set	.LANCHOR20,. + 0
 6596              	xYieldPending:
 6597 0000 00000000 		.space	4
 6598              		.text
 6599              	.Letext0:
 6600              		.file 3 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6601              		.file 4 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6602              		.file 5 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6603              		.file 6 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6604              		.file 7 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6605              		.file 8 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x86
 6606              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6607              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6608              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6609              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6610              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 6611              		.file 14 "/media/son/Data/Embedded_Systems/Document/Tool/Arm_GNU_Toolchain/gcc-arm-11.2-2022.02-x8
 6612              		.file 15 "<built-in>"
ARM GAS  /tmp/cc3EZotN.s 			page 237


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc3EZotN.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cc3EZotN.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cc3EZotN.s:112    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/cc3EZotN.s:118    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc3EZotN.s:123    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc3EZotN.s:166    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cc3EZotN.s:172    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cc3EZotN.s:177    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cc3EZotN.s:361    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cc3EZotN.s:366    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cc3EZotN.s:439    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cc3EZotN.s:451    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cc3EZotN.s:456    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cc3EZotN.s:592    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/cc3EZotN.s:602    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cc3EZotN.s:607    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cc3EZotN.s:688    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cc3EZotN.s:693    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cc3EZotN.s:766    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/cc3EZotN.s:773    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc3EZotN.s:778    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc3EZotN.s:827    .text.prvIdleTask:0000000000000024 $d
     /tmp/cc3EZotN.s:832    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc3EZotN.s:837    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc3EZotN.s:957    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/cc3EZotN.s:968    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/cc3EZotN.s:974    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/cc3EZotN.s:1133   .text.xTaskCreate:0000000000000000 $t
     /tmp/cc3EZotN.s:1139   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc3EZotN.s:1264   .text.vTaskDelete:0000000000000000 $t
     /tmp/cc3EZotN.s:1270   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc3EZotN.s:1454   .text.vTaskDelete:00000000000000bc $d
     /tmp/cc3EZotN.s:1467   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc3EZotN.s:1473   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc3EZotN.s:1519   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc3EZotN.s:1524   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc3EZotN.s:1530   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc3EZotN.s:1609   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/cc3EZotN.s:1614   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc3EZotN.s:1620   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc3EZotN.s:1862   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/cc3EZotN.s:1869   .text.vTaskResume:0000000000000000 $t
     /tmp/cc3EZotN.s:1875   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc3EZotN.s:2005   .text.vTaskResume:000000000000007c $d
     /tmp/cc3EZotN.s:2012   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc3EZotN.s:2018   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc3EZotN.s:2186   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/cc3EZotN.s:2195   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/cc3EZotN.s:2199   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc3EZotN.s:2205   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc3EZotN.s:2315   .text.vTaskStartScheduler:0000000000000064 $d
     /tmp/cc3EZotN.s:2327   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc3EZotN.s:2333   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc3EZotN.s:2376   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/cc3EZotN.s:2381   .text.vTaskSuspendAll:0000000000000000 $t
ARM GAS  /tmp/cc3EZotN.s 			page 238


     /tmp/cc3EZotN.s:2387   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc3EZotN.s:2404   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc3EZotN.s:2409   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc3EZotN.s:2415   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc3EZotN.s:2436   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc3EZotN.s:2441   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc3EZotN.s:2447   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc3EZotN.s:2476   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/cc3EZotN.s:2481   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc3EZotN.s:2487   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc3EZotN.s:2503   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc3EZotN.s:2508   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc3EZotN.s:2514   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc3EZotN.s:2574   .text.pcTaskGetName:0000000000000024 $d
     /tmp/cc3EZotN.s:2579   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc3EZotN.s:2585   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc3EZotN.s:2847   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/cc3EZotN.s:2862   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc3EZotN.s:2868   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc3EZotN.s:3102   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/cc3EZotN.s:3114   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc3EZotN.s:3120   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc3EZotN.s:3212   .text.vTaskDelay:0000000000000048 $d
     /tmp/cc3EZotN.s:3217   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc3EZotN.s:3223   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc3EZotN.s:3399   .text.vTaskSwitchContext:00000000000000a8 $d
     /tmp/cc3EZotN.s:3411   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc3EZotN.s:3417   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc3EZotN.s:3621   .text.vTaskSuspend:00000000000000d0 $d
     /tmp/cc3EZotN.s:3632   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc3EZotN.s:3638   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc3EZotN.s:3705   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/cc3EZotN.s:3710   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc3EZotN.s:3716   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc3EZotN.s:3831   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/cc3EZotN.s:3837   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc3EZotN.s:3843   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc3EZotN.s:3973   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/cc3EZotN.s:3983   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc3EZotN.s:3989   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc3EZotN.s:4123   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/cc3EZotN.s:4132   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cc3EZotN.s:4138   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc3EZotN.s:4207   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/cc3EZotN.s:4213   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc3EZotN.s:4219   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc3EZotN.s:4242   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc3EZotN.s:4248   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc3EZotN.s:4254   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc3EZotN.s:4439   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/cc3EZotN.s:4446   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc3EZotN.s:4452   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc3EZotN.s:4469   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc3EZotN.s:4474   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cc3EZotN.s:4480   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc3EZotN.s:4499   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cc3EZotN.s:4504   .text.xTaskGetSchedulerState:0000000000000000 $t
ARM GAS  /tmp/cc3EZotN.s 			page 239


     /tmp/cc3EZotN.s:4510   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc3EZotN.s:4548   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cc3EZotN.s:4554   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc3EZotN.s:4560   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc3EZotN.s:4736   .text.xTaskPriorityInherit:00000000000000b0 $d
     /tmp/cc3EZotN.s:4743   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc3EZotN.s:4749   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc3EZotN.s:4944   .text.xTaskPriorityDisinherit:00000000000000a4 $d
     /tmp/cc3EZotN.s:4951   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc3EZotN.s:4957   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc3EZotN.s:5159   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000b4 $d
     /tmp/cc3EZotN.s:5166   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc3EZotN.s:5172   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc3EZotN.s:5199   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc3EZotN.s:5204   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc3EZotN.s:5210   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc3EZotN.s:5241   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cc3EZotN.s:5246   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc3EZotN.s:5252   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc3EZotN.s:5374   .text.ulTaskNotifyTake:000000000000007c $d
     /tmp/cc3EZotN.s:5379   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc3EZotN.s:5385   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc3EZotN.s:5525   .text.xTaskNotifyWait:00000000000000a0 $d
     /tmp/cc3EZotN.s:5530   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc3EZotN.s:5536   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc3EZotN.s:5593   .text.xTaskGenericNotify:000000000000002e $d
     /tmp/cc3EZotN.s:5598   .text.xTaskGenericNotify:0000000000000032 $t
     /tmp/cc3EZotN.s:5792   .text.xTaskGenericNotify:00000000000000e4 $d
     /tmp/cc3EZotN.s:5799   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc3EZotN.s:5805   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc3EZotN.s:5884   .text.xTaskGenericNotifyFromISR:0000000000000044 $d
     /tmp/cc3EZotN.s:5889   .text.xTaskGenericNotifyFromISR:0000000000000048 $t
     /tmp/cc3EZotN.s:6128   .text.xTaskGenericNotifyFromISR:000000000000010c $d
     /tmp/cc3EZotN.s:6138   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc3EZotN.s:6144   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc3EZotN.s:6364   .text.vTaskNotifyGiveFromISR:00000000000000c0 $d
     /tmp/cc3EZotN.s:6374   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc3EZotN.s:6380   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc3EZotN.s:6446   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/cc3EZotN.s:6456   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc3EZotN.s:6452   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cc3EZotN.s:6459   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc3EZotN.s:6463   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc3EZotN.s:6466   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc3EZotN.s:6470   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc3EZotN.s:6473   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc3EZotN.s:6477   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc3EZotN.s:6480   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc3EZotN.s:6484   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc3EZotN.s:6487   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc3EZotN.s:6491   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc3EZotN.s:6494   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/cc3EZotN.s:6498   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/cc3EZotN.s:6501   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc3EZotN.s:6505   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cc3EZotN.s:6508   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc3EZotN.s:6512   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
ARM GAS  /tmp/cc3EZotN.s 			page 240


     /tmp/cc3EZotN.s:6515   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc3EZotN.s:6519   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc3EZotN.s:6522   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc3EZotN.s:6526   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cc3EZotN.s:6529   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc3EZotN.s:6533   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc3EZotN.s:6536   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cc3EZotN.s:6540   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cc3EZotN.s:6543   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc3EZotN.s:6547   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc3EZotN.s:6550   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc3EZotN.s:6554   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc3EZotN.s:6557   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc3EZotN.s:6561   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc3EZotN.s:6564   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc3EZotN.s:6568   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc3EZotN.s:6571   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc3EZotN.s:6575   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cc3EZotN.s:6578   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc3EZotN.s:6582   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc3EZotN.s:6585   .bss.xTickCount:0000000000000000 $d
     /tmp/cc3EZotN.s:6589   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc3EZotN.s:6592   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc3EZotN.s:6596   .bss.xYieldPending:0000000000000000 xYieldPending

UNDEFINED SYMBOLS
vListInitialiseItem
memset
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
_reclaim_reent
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
_impure_ptr
vPortEndScheduler
vApplicationStackOverflowHook
